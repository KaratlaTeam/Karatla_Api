{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13","program":"C:\\Users\\user\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","hyper","--edition=2018","C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--crate-type","staticlib","--crate-type","cdylib","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"h2\"","--cfg","feature=\"http1\"","--cfg","feature=\"http2\"","--cfg","feature=\"runtime\"","--cfg","feature=\"server\"","--cfg","feature=\"socket2\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","-C","metadata=19b3ac0b57ed0b12","-C","extra-filename=-19b3ac0b57ed0b12","--out-dir","c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libbytes-4161b9500648fa00.rlib","--extern","futures_channel=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libfutures_channel-50d28772ccb06d28.rlib","--extern","futures_core=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libfutures_core-20323f89a6f4b6c3.rlib","--extern","futures_util=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libfutures_util-026481cec80f009b.rlib","--extern","h2=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libh2-dd7d4e603698671d.rlib","--extern","http=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libhttp-cac382c2728e458b.rlib","--extern","http_body=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libhttp_body-9372bfb1f7b827b6.rlib","--extern","httparse=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libhttparse-053101a9bf386238.rlib","--extern","httpdate=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libhttpdate-444d6585cedb4dc4.rlib","--extern","itoa=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libitoa-86a5d2b2e545a140.rlib","--extern","pin_project_lite=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libpin_project_lite-5cba31a2580e57b3.rlib","--extern","socket2=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libsocket2-c31afd66349c67a3.rlib","--extern","tokio=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libtokio-8237a91d4a30cf8d.rlib","--extern","tower_service=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libtower_service-c8ff3bacdda45d0c.rlib","--extern","tracing=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libtracing-397a0aeda2ae269a.rlib","--extern","want=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libwant-b0140624ded98c5a.rlib","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\user\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libhyper-19b3ac0b57ed0b12.rlib"},"prelude":{"crate_id":{"name":"hyper","disambiguator":[12161487057747538031,0]},"crate_root":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src","external_crates":[{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\date.rs","num":14,"id":{"name":"http","disambiguator":[110415443265173158,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\date.rs","num":15,"id":{"name":"fnv","disambiguator":[8046180949733103625,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\buf.rs","num":16,"id":{"name":"bytes","disambiguator":[549654222157474692,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","num":17,"id":{"name":"itoa","disambiguator":[1745848547741817249,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\date.rs","num":18,"id":{"name":"httpdate","disambiguator":[10388132981479991891,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[10586119047165815971,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":20,"id":{"name":"tokio","disambiguator":[7841886709239122583,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":21,"id":{"name":"winapi","disambiguator":[8126687792582974682,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":22,"id":{"name":"mio","disambiguator":[17026816046084476668,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":23,"id":{"name":"log","disambiguator":[17020753373162443929,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":24,"id":{"name":"cfg_if","disambiguator":[7732148652154790736,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":25,"id":{"name":"ntapi","disambiguator":[5929914477157928238,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":26,"id":{"name":"miow","disambiguator":[11511738611527175885,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":27,"id":{"name":"once_cell","disambiguator":[15337698671572308192,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":28,"id":{"name":"tokio_macros","disambiguator":[6012102819735055328,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":29,"id":{"name":"memchr","disambiguator":[9035836420829874224,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","num":30,"id":{"name":"num_cpus","disambiguator":[11995639312194757406,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","num":31,"id":{"name":"futures_util","disambiguator":[9364704969286931415,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","num":32,"id":{"name":"futures_core","disambiguator":[16838258535136094744,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","num":33,"id":{"name":"pin_utils","disambiguator":[360942777902623877,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","num":34,"id":{"name":"futures_macro","disambiguator":[14137178926558510526,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","num":35,"id":{"name":"futures_task","disambiguator":[13178339737029359358,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","num":36,"id":{"name":"futures_sink","disambiguator":[48776870732375571,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","num":37,"id":{"name":"futures_channel","disambiguator":[13090046896581047596,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","num":38,"id":{"name":"slab","disambiguator":[5917668779826069366,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","num":39,"id":{"name":"futures_io","disambiguator":[12038930439685879639,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","num":40,"id":{"name":"http_body","disambiguator":[3141351057396595192,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","num":41,"id":{"name":"tracing","disambiguator":[2451708749243704997,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","num":42,"id":{"name":"tracing_core","disambiguator":[13799962986314724348,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","num":43,"id":{"name":"lazy_static","disambiguator":[13056093452633543229,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","num":44,"id":{"name":"tower_service","disambiguator":[7809273555419821151,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","num":45,"id":{"name":"h2","disambiguator":[8651642913739284974,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","num":46,"id":{"name":"tokio_util","disambiguator":[14867998725458552921,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","num":47,"id":{"name":"indexmap","disambiguator":[14539698057437134657,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","num":48,"id":{"name":"serde","disambiguator":[17827007215290515939,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","num":49,"id":{"name":"serde_derive","disambiguator":[6391162463382174000,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","num":50,"id":{"name":"hashbrown","disambiguator":[2857646572598512741,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\mod.rs","num":51,"id":{"name":"httparse","disambiguator":[11280311039352394861,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","num":52,"id":{"name":"socket2","disambiguator":[15697852507107385696,0]}}],"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":0,"byte_end":3099,"line_start":1,"line_end":109,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2295,"byte_end":2299,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":5},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2383,"byte_end":2389,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"alias_span":null,"name":"header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2997},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2391,"byte_end":2397,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1355},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2399,"byte_end":2406,"line_start":65,"line_end":65,"column_start":39,"column_end":46},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1488},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2408,"byte_end":2416,"line_start":65,"line_end":65,"column_start":48,"column_end":56},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":3090},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2418,"byte_end":2428,"line_start":65,"line_end":65,"column_start":58,"column_end":68},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":3215},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2430,"byte_end":2433,"line_start":65,"line_end":65,"column_start":70,"column_end":73},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":3271},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2435,"byte_end":2442,"line_start":65,"line_end":65,"column_start":75,"column_end":82},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2381},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2485,"byte_end":2494,"line_start":68,"line_end":68,"column_start":22,"column_end":31},"alias_span":null,"name":"HeaderMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2518,"byte_end":2522,"line_start":70,"line_end":70,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2547,"byte_end":2552,"line_start":71,"line_end":71,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2554,"byte_end":2560,"line_start":71,"line_end":71,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":42},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33994,"byte_end":33997,"line_start":18,"line_end":18,"column_start":17,"column_end":20},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":16,"index":526},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33999,"byte_end":34004,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":40,"index":352},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":34026,"byte_end":34030,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"alias_span":null,"name":"HttpBody","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":40,"index":467},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":34063,"byte_end":34071,"line_start":20,"line_end":20,"column_start":20,"column_end":28},"alias_span":null,"name":"SizeHint","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":34099,"byte_end":34108,"line_start":22,"line_end":22,"column_start":26,"column_end":35},"alias_span":null,"name":"aggregate","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":34131,"byte_end":34135,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":34137,"byte_end":34143,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":34214,"byte_end":34222,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"alias_span":null,"name":"to_bytes","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":44,"index":13},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89259,"byte_end":89266,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":784}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89810,"byte_end":89825,"line_start":54,"line_end":54,"column_start":21,"column_end":36},"alias_span":null,"name":"make_service_fn","value":"","parent":{"krate":0,"index":784}},{"kind":"Use","ref_id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89847,"byte_end":89857,"line_start":55,"line_end":55,"column_start":21,"column_end":31},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":784}},{"kind":"Use","ref_id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008285,"byte_end":16008297,"line_start":89,"line_end":89,"column_start":22,"column_end":34},"alias_span":null,"name":"AddrIncoming","value":"","parent":{"krate":0,"index":3273}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008299,"byte_end":16008309,"line_start":89,"line_end":89,"column_start":36,"column_end":46},"alias_span":null,"name":"AddrStream","value":"","parent":{"krate":0,"index":3273}},{"kind":"Use","ref_id":{"krate":0,"index":4307},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002385,"byte_end":16002391,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":3220}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002486,"byte_end":16002493,"line_start":161,"line_end":161,"column_start":27,"column_end":34},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3220}},{"kind":"Use","ref_id":{"krate":0,"index":4307},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":3090,"byte_end":3096,"line_start":108,"line_end":108,"column_start":28,"column_end":34},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":0,"byte_end":3099,"line_start":1,"line_end":109,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":399},{"krate":0,"index":659},{"krate":0,"index":753},{"krate":0,"index":780},{"krate":0,"index":784},{"krate":0,"index":1021},{"krate":0,"index":1418},{"krate":0,"index":1450},{"krate":0,"index":3220},{"krate":0,"index":3735}],"decl_id":null,"docs":" # hyper","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":23,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/ # hyper","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":306,"byte_end":317,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":318,"byte_end":321,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ hyper is a **fast** and **correct** HTTP implementation written in and for Rust.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":322,"byte_end":406,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":407,"byte_end":410,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":411,"byte_end":426,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":427,"byte_end":430,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - HTTP/1 and HTTP/2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":431,"byte_end":454,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ - Asynchronous design","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":455,"byte_end":480,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ - Leading in performance","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":481,"byte_end":509,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ - Tested and **correct**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":510,"byte_end":538,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ - Extensive production use","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":539,"byte_end":569,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ - [Client](client/index.html) and [Server](server/index.html) APIs","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":570,"byte_end":640,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":641,"byte_end":644,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If just starting out, **check out the [Guides](https://hyper.rs/guides)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":645,"byte_end":720,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ first.**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":721,"byte_end":733,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":734,"byte_end":737,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## \"Low-level\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":738,"byte_end":756,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":757,"byte_end":760,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ hyper is a lower-level HTTP library, meant to be a building block","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":761,"byte_end":830,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ for libraries and applications.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":831,"byte_end":866,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":867,"byte_end":870,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If looking for just a convenient HTTP client, consider the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":871,"byte_end":933,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ [reqwest](https://crates.io/crates/reqwest) crate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":934,"byte_end":988,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":989,"byte_end":992,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Optional Features","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":993,"byte_end":1016,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1017,"byte_end":1020,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ hyper uses a set of [feature flags] to reduce the amount of compiled code.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1021,"byte_end":1099,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ It is possible to just enable certain features over others. By default,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1100,"byte_end":1175,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ hyper does not enable any features but allows one to enable a subset for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1176,"byte_end":1252,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ their use case. Below is a list of the available feature flags. You may","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1253,"byte_end":1328,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ also notice above each function, struct and trait there is listed one or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1329,"byte_end":1405,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ more feature flags that are required for that item to be used.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1406,"byte_end":1472,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1473,"byte_end":1476,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If you are new to hyper it is possible to enable the `full` feature flag","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1477,"byte_end":1553,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ which will enable all public APIs. Beware though that this will pull in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1554,"byte_end":1629,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ many extra dependencies that you may not need.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1630,"byte_end":1680,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1681,"byte_end":1684,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The following optional features are available:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1685,"byte_end":1735,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1736,"byte_end":1739,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - `http1`: Enables HTTP/1 support.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1740,"byte_end":1778,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ - `http2`: Enables HTTP/2 support.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1779,"byte_end":1817,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ - `client`: Enables the HTTP `client`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1818,"byte_end":1860,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ - `server`: Enables the HTTP `server`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1861,"byte_end":1903,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ - `runtime`: Enables convenient integration with `tokio`, providing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1904,"byte_end":1975,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/   connectors and acceptors for TCP, and a default executor.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":1976,"byte_end":2039,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ - `tcp`: Enables convenient implementations over TCP (using tokio).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2040,"byte_end":2111,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ - `stream`: Provides `futures::Stream` capabilities.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2112,"byte_end":2168,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2169,"byte_end":2172,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2173,"byte_end":2270,"line_start":57,"line_end":57,"column_start":1,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":12543,"byte_end":12551,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"name":"Watching","qualname":"::common::drain::Watching","value":"Watching {  }","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.7\\src\\lib.rs","byte_start":12737243,"byte_end":12737252,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18614,"byte_end":18628,"line_start":19,"line_end":19,"column_start":11,"column_end":25},"name":"ConnStreamExec","qualname":"::common::exec::ConnStreamExec","value":"ConnStreamExec<F, B: HttpBody>: Clone","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18577,"byte_end":18603,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18661,"byte_end":18677,"line_start":20,"line_end":20,"column_start":8,"column_end":24},"name":"execute_h2stream","qualname":"::common::exec::ConnStreamExec::execute_h2stream","value":"pub fn execute_h2stream(&mut Self, H2Stream<F, B>)","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18799,"byte_end":18809,"line_start":24,"line_end":24,"column_start":11,"column_end":21},"name":"NewSvcExec","qualname":"::common::exec::NewSvcExec","value":"NewSvcExec<I, N, S: HttpService<Body>, E, W: Watcher<I, S, E>>: Clone","parent":null,"children":[{"krate":0,"index":228}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(feature = \"server\", any(feature = \"http1\", feature = \"http2\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18714,"byte_end":18788,"line_start":23,"line_end":23,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18878,"byte_end":18893,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"execute_new_svc","qualname":"::common::exec::NewSvcExec::execute_new_svc","value":"pub fn execute_new_svc(&mut Self, NewSvcTask<I, N, S, E, W>)","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":19144,"byte_end":19151,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"name":"Default","qualname":"::common::exec::Exec::Default","value":"Exec::Default","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":19157,"byte_end":19165,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Executor","qualname":"::common::exec::Exec::Executor","value":"Exec::Executor(Arc<dyn Executor<BoxSendFuture> + Send + Sync>)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":19133,"byte_end":19137,"line_start":33,"line_end":33,"column_start":10,"column_end":14},"name":"Exec","qualname":"::common::exec::Exec","value":"pub enum Exec {\n    Default,\n    Executor(Arc<dyn Executor<BoxSendFuture> + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":444},{"krate":0,"index":604},{"krate":0,"index":627},{"krate":0,"index":645},{"krate":0,"index":654}],"decl_id":null,"docs":" Streaming bodies for Requests and Responses","sig":null,"attributes":[{"value":"/ Streaming bodies for Requests and Responses","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33070,"byte_end":33117,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33118,"byte_end":33121,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For both [Clients](crate::client) and [Servers](crate::server), requests and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33122,"byte_end":33202,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ responses use streaming bodies, instead of complete buffering. This","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33203,"byte_end":33274,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ allows applications to not use memory they don't need, and allows exerting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33275,"byte_end":33353,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ back-pressure on connections by only reading when asked.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33354,"byte_end":33414,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33415,"byte_end":33418,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two pieces to this in hyper:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33419,"byte_end":33461,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33462,"byte_end":33465,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - **The [`HttpBody`](HttpBody) trait** describes all possible bodies.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33466,"byte_end":33539,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/   hyper allows any body type that implements `HttpBody`, allowing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33540,"byte_end":33609,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   applications to have fine-grained control over their streaming.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33610,"byte_end":33679,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ - **The [`Body`](Body) concrete type**, which is an implementation of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33680,"byte_end":33753,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   `HttpBody`, and returned by hyper as a \"receive stream\" (so, for server","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33754,"byte_end":33831,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/   requests and client responses). It is also a decent default implementation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33832,"byte_end":33912,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/   if you don't have very custom needs of your send streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\mod.rs","byte_start":33913,"byte_end":33976,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35976,"byte_end":35985,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"name":"aggregate","qualname":"::body::aggregate::aggregate","value":"pub async fn aggregate<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Aggregate the data buffers from a body asynchronously.","sig":null,"attributes":[{"value":"/ Aggregate the data buffers from a body asynchronously.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35453,"byte_end":35511,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35512,"byte_end":35515,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned `impl Buf` groups the `Buf`s from the `HttpBody` without","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35516,"byte_end":35589,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ copying them. This is ideal if you don't require a contiguous buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35590,"byte_end":35663,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35664,"byte_end":35667,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35668,"byte_end":35678,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35679,"byte_end":35682,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35683,"byte_end":35779,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35780,"byte_end":35876,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\aggregate.rs","byte_start":35877,"byte_end":35962,"line_start":15,"line_end":15,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37464,"byte_end":37468,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Body","qualname":"::body::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"decl_id":null,"docs":" A stream of `Bytes`, used when receiving bodies.","sig":null,"attributes":[{"value":"/ A stream of `Bytes`, used when receiving bodies.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37124,"byte_end":37176,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37177,"byte_end":37180,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A good default [`HttpBody`](crate::body::HttpBody) to use in many","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37181,"byte_end":37250,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ applications.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37251,"byte_end":37268,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37269,"byte_end":37272,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: To read the full body, use [`body::to_bytes`](crate::body::to_bytes)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37273,"byte_end":37351,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ or [`body::aggregate`](crate::body::aggregate).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37352,"byte_end":37403,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":37404,"byte_end":37452,"line_start":35,"line_end":35,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40157,"byte_end":40163,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Sender","qualname":"::body::body::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" A sender half created through [`Body::channel()`].","sig":null,"attributes":[{"value":"/ A sender half created through [`Body::channel()`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39449,"byte_end":39503,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39504,"byte_end":39507,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39508,"byte_end":39569,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39570,"byte_end":39573,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Body Closing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39574,"byte_end":39593,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39594,"byte_end":39597,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Note that the request body will always be closed normally when the sender is dropped (meaning","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39598,"byte_end":39695,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ that the empty terminating chunk will be sent to the remote). If you desire to close the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39696,"byte_end":39788,"line_start":102,"line_end":102,"column_start":1,"column_end":93}},{"value":"/ connection with an incomplete response (e.g. in the case of an error during asynchronous","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39789,"byte_end":39881,"line_start":103,"line_end":103,"column_start":1,"column_end":93}},{"value":"/ processing), call the [`Sender::abort()`] method to abort the body in an abnormal fashion.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39882,"byte_end":39976,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39977,"byte_end":39980,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Body::channel()`]: struct.Body.html#method.channel","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":39981,"byte_end":40037,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ [`Sender::abort()`]: struct.Sender.html#method.abort","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40038,"byte_end":40094,"line_start":107,"line_end":107,"column_start":1,"column_end":57}},{"value":"must_use = \"Sender does nothing unless sent on\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40095,"byte_end":40145,"line_start":108,"line_end":108,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40587,"byte_end":40592,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"empty","qualname":"<Body>::empty","value":"pub fn empty() -> Body","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Body` stream.","sig":null,"attributes":[{"value":"/ Create an empty `Body` stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40342,"byte_end":40376,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40381,"byte_end":40384,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40389,"byte_end":40402,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40407,"byte_end":40410,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40415,"byte_end":40422,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use hyper::{Body, Request};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40427,"byte_end":40458,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40463,"byte_end":40466,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // create a `GET /` request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40471,"byte_end":40502,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/ let get = Request::new(Body::empty());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40507,"byte_end":40549,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40554,"byte_end":40561,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40566,"byte_end":40575,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40810,"byte_end":40817,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"channel","qualname":"<Body>::channel","value":"pub fn channel() -> (Sender, Body)","parent":null,"children":[],"decl_id":null,"docs":" Create a `Body` stream with an associated sender half.","sig":null,"attributes":[{"value":"/ Create a `Body` stream with an associated sender half.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40652,"byte_end":40710,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40715,"byte_end":40718,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40723,"byte_end":40784,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40789,"byte_end":40798,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42300,"byte_end":42311,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"wrap_stream","qualname":"<Body>::wrap_stream","value":"pub fn wrap_stream<S, O, E>(S) -> Body where S: Stream<Item = Result<O, E>> +\nSend + 'static, O: Into<Bytes> + 'static,\nE: Into<Box<dyn StdError + Send + Sync>> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Wrap a futures `Stream` in a box inside `Body`.","sig":null,"attributes":[{"value":"/ Wrap a futures `Stream` in a box inside `Body`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41681,"byte_end":41732,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41737,"byte_end":41740,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41745,"byte_end":41758,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41763,"byte_end":41766,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41771,"byte_end":41778,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ # use hyper::Body;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41783,"byte_end":41805,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/ let chunks: Vec<Result<_, std::io::Error>> = vec![","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41810,"byte_end":41864,"line_start":173,"line_end":173,"column_start":5,"column_end":59}},{"value":"/     Ok(\"hello\"),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41869,"byte_end":41889,"line_start":174,"line_end":174,"column_start":5,"column_end":25}},{"value":"/     Ok(\" \"),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41894,"byte_end":41910,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/     Ok(\"world\"),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41915,"byte_end":41935,"line_start":176,"line_end":176,"column_start":5,"column_end":25}},{"value":"/ ];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41940,"byte_end":41946,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41951,"byte_end":41954,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let stream = futures_util::stream::iter(chunks);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":41959,"byte_end":42011,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42016,"byte_end":42019,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let body = Body::wrap_stream(stream);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42024,"byte_end":42065,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42070,"byte_end":42077,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42082,"byte_end":42085,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42090,"byte_end":42104,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42109,"byte_end":42112,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function requires enabling the `stream` feature in your","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42117,"byte_end":42181,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ `Cargo.toml`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42186,"byte_end":42203,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"stream\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":42208,"byte_end":42234,"line_start":188,"line_end":188,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53488,"byte_end":53498,"line_start":543,"line_end":543,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context) -> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Check to see if this `Sender` can send more data.\n","sig":null,"attributes":[{"value":"/ Check to see if this `Sender` can send more data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53423,"byte_end":53476,"line_start":542,"line_end":542,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54362,"byte_end":54371,"line_start":565,"line_end":565,"column_start":18,"column_end":27},"name":"send_data","qualname":"<Sender>::send_data","value":"pub async fn send_data<'_>(&'_ mut Self, Bytes) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send data on data channel when it is ready.\n","sig":null,"attributes":[{"value":"/ Send data on data channel when it is ready.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54297,"byte_end":54344,"line_start":564,"line_end":564,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54623,"byte_end":54636,"line_start":573,"line_end":573,"column_start":18,"column_end":31},"name":"send_trailers","qualname":"<Sender>::send_trailers","value":"pub async fn send_trailers<'_>(&'_ mut Self, HeaderMap) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send trailers on trailers channel.\n","sig":null,"attributes":[{"value":"/ Send trailers on trailers channel.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54567,"byte_end":54605,"line_start":572,"line_end":572,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55311,"byte_end":55324,"line_start":593,"line_end":593,"column_start":12,"column_end":25},"name":"try_send_data","qualname":"<Sender>::try_send_data","value":"pub fn try_send_data(&mut Self, Bytes) -> Result<(), Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on this channel.","sig":null,"attributes":[{"value":"/ Try to send data on this channel.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54917,"byte_end":54954,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54959,"byte_end":54962,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54967,"byte_end":54979,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54984,"byte_end":54987,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(Bytes)` if the channel could not (currently) accept","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":54992,"byte_end":55060,"line_start":585,"line_end":585,"column_start":5,"column_end":73}},{"value":"/ another `Bytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55065,"byte_end":55085,"line_start":586,"line_end":586,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55090,"byte_end":55093,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55098,"byte_end":55108,"line_start":588,"line_end":588,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55113,"byte_end":55116,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This is mostly useful for when trying to send from some other thread","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55121,"byte_end":55193,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ that doesn't have an async context. If in an async context, prefer","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55198,"byte_end":55268,"line_start":591,"line_end":591,"column_start":5,"column_end":75}},{"value":"/ `send_data()` instead.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55273,"byte_end":55299,"line_start":592,"line_end":592,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55561,"byte_end":55566,"line_start":600,"line_end":600,"column_start":12,"column_end":17},"name":"abort","qualname":"<Sender>::abort","value":"pub fn abort(Self)","parent":null,"children":[],"decl_id":null,"docs":" Aborts the body in an abnormal fashion.\n","sig":null,"attributes":[{"value":"/ Aborts the body in an abnormal fashion.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55506,"byte_end":55549,"line_start":599,"line_end":599,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64588,"byte_end":64596,"line_start":16,"line_end":16,"column_start":14,"column_end":22},"name":"to_bytes","qualname":"::body::to_bytes::to_bytes","value":"pub async fn to_bytes<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Concatenate the buffers from a body into a single `Bytes` asynchronously.","sig":null,"attributes":[{"value":"/ Concatenate the buffers from a body into a single `Bytes` asynchronously.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64026,"byte_end":64103,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64104,"byte_end":64107,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This may require copying the data into a single buffer. If you don't need","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64108,"byte_end":64185,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ a contiguous buffer, prefer the [`aggregate`](crate::body::aggregate())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64186,"byte_end":64261,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64262,"byte_end":64275,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64276,"byte_end":64279,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64280,"byte_end":64290,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64291,"byte_end":64294,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64295,"byte_end":64391,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64392,"byte_end":64488,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\to_bytes.rs","byte_start":64489,"byte_end":64574,"line_start":15,"line_end":15,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":65537,"byte_end":65543,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type often returned from methods that can have hyper `Error`s.\n","sig":null,"attributes":[{"value":"/ Result type often returned from methods that can have hyper `Error`s.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":65454,"byte_end":65527,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":65699,"byte_end":65704,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":670}],"decl_id":null,"docs":" Represents errors that can occur handling HTTP streams.\n","sig":null,"attributes":[{"value":"/ Represents errors that can occur handling HTTP streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":65628,"byte_end":65687,"line_start":10,"line_end":10,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":69687,"byte_end":69695,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"is_parse","qualname":"<Error>::is_parse","value":"pub fn is_parse(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":69626,"byte_end":69675,"line_start":145,"line_end":145,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":69874,"byte_end":69892,"line_start":151,"line_end":151,"column_start":12,"column_end":30},"name":"is_parse_too_large","qualname":"<Error>::is_parse_too_large","value":"pub fn is_parse_too_large(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by a message that was too large.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by a message that was too large.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":69774,"byte_end":69862,"line_start":150,"line_end":150,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70113,"byte_end":70128,"line_start":157,"line_end":157,"column_start":12,"column_end":27},"name":"is_parse_status","qualname":"<Error>::is_parse_status","value":"pub fn is_parse_status(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by an invalid response status code or\n reason phrase.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by an invalid response status code or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":69985,"byte_end":70078,"line_start":155,"line_end":155,"column_start":5,"column_end":98}},{"value":"/ reason phrase.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70083,"byte_end":70101,"line_start":156,"line_end":156,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70286,"byte_end":70293,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"is_user","qualname":"<Error>::is_user","value":"pub fn is_user(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by user code.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by user code.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70219,"byte_end":70274,"line_start":161,"line_end":161,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70448,"byte_end":70459,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Error>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was about a `Request` that was canceled.\n","sig":null,"attributes":[{"value":"/ Returns true if this was about a `Request` that was canceled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70371,"byte_end":70436,"line_start":166,"line_end":166,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70599,"byte_end":70608,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Error>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a sender's channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns true if a sender's channel is closed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70538,"byte_end":70587,"line_start":171,"line_end":171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70757,"byte_end":70767,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"is_connect","qualname":"<Error>::is_connect","value":"pub fn is_connect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an error from `Connect`.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an error from `Connect`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70692,"byte_end":70745,"line_start":176,"line_end":176,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70931,"byte_end":70952,"line_start":182,"line_end":182,"column_start":12,"column_end":33},"name":"is_incomplete_message","qualname":"<Error>::is_incomplete_message","value":"pub fn is_incomplete_message(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the connection closed before a message could complete.\n","sig":null,"attributes":[{"value":"/ Returns true if the connection closed before a message could complete.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":70845,"byte_end":70919,"line_start":181,"line_end":181,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":71099,"byte_end":71120,"line_start":187,"line_end":187,"column_start":12,"column_end":33},"name":"is_body_write_aborted","qualname":"<Error>::is_body_write_aborted","value":"pub fn is_body_write_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the body write was aborted.\n","sig":null,"attributes":[{"value":"/ Returns true if the body write was aborted.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":71040,"byte_end":71087,"line_start":186,"line_end":186,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":71273,"byte_end":71283,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<Error>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by a timeout.\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by a timeout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":71207,"byte_end":71261,"line_start":191,"line_end":191,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":71417,"byte_end":71427,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"into_cause","qualname":"<Error>::into_cause","value":"pub fn into_cause(Self) -> Option<Box<dyn StdError + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the error, returning its cause.\n","sig":null,"attributes":[{"value":"/ Consumes the error, returning its cause.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":71361,"byte_end":71405,"line_start":196,"line_end":196,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rt","qualname":"::rt","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","parent":null,"children":[{"krate":0,"index":781}],"decl_id":null,"docs":" Runtime components","sig":null,"attributes":[{"value":"/ Runtime components","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87272,"byte_end":87294,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87295,"byte_end":87298,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, hyper includes the [tokio](https://tokio.rs) runtime.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87299,"byte_end":87368,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87369,"byte_end":87372,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If the `runtime` feature is disabled, the types in this module can be used","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87373,"byte_end":87451,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to plug in other runtimes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87452,"byte_end":87482,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87522,"byte_end":87530,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Executor","qualname":"::rt::Executor","value":"Executor<Fut>","parent":null,"children":[{"krate":0,"index":783}],"decl_id":null,"docs":" An executor of futures.\n","sig":null,"attributes":[{"value":"/ An executor of futures.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87484,"byte_end":87511,"line_start":8,"line_end":8,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87599,"byte_end":87606,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"execute","qualname":"::rt::Executor::execute","value":"pub fn execute(&Self, Fut)","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Place the future into the executor to be run.\n","sig":null,"attributes":[{"value":"/ Place the future into the executor to be run.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\rt.rs","byte_start":87542,"byte_end":87591,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":835},{"krate":0,"index":948},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018}],"decl_id":null,"docs":" Asynchronous Services","sig":null,"attributes":[{"value":"/ Asynchronous Services","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87628,"byte_end":87653,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87654,"byte_end":87657,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A [`Service`](Service) is a trait representing an asynchronous","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87658,"byte_end":87724,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ function of a request to a response. It's similar to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87725,"byte_end":87781,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ `async fn(Request) -> Result<Response, Error>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87782,"byte_end":87833,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87834,"byte_end":87837,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The argument and return value isn't strictly required to be for HTTP.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87838,"byte_end":87911,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ Therefore, hyper uses several \"trait aliases\" to reduce clutter around","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87912,"byte_end":87986,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ bounds. These are:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":87987,"byte_end":88009,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88010,"byte_end":88013,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `HttpService`: This is blanketly implemented for all types that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88014,"byte_end":88083,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   implement `Service<http::Request<B1>, Response = http::Response<B2>>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88084,"byte_end":88160,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ - `MakeService`: When a `Service` returns a new `Service` as its \"response\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88161,"byte_end":88241,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/   we consider it a `MakeService`. Again, blanketly implemented in those cases.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88242,"byte_end":88324,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ - `MakeConnection`: A `Service` that returns a \"connection\", a type that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88325,"byte_end":88401,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88402,"byte_end":88448,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88449,"byte_end":88452,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # HttpService","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88453,"byte_end":88470,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88471,"byte_end":88474,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In hyper, especially in the server setting, a `Service` is usually bound","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88475,"byte_end":88551,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ to a single connection. It defines how to respond to **all** requests that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88552,"byte_end":88630,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ connection will receive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88631,"byte_end":88659,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88660,"byte_end":88663,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The helper [`service_fn`](service_fn) should be sufficient for most cases, but","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88664,"byte_end":88746,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ if you need to implement `Service` for a type manually, you can follow the example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88747,"byte_end":88833,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ in `service_struct_impl.rs`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88834,"byte_end":88866,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88867,"byte_end":88870,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # MakeService","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88871,"byte_end":88888,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88889,"byte_end":88892,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Since a `Service` is bound to a single connection, a [`Server`](crate::Server)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88893,"byte_end":88975,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ needs a way to make them as it accepts connections. This is what a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":88976,"byte_end":89046,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ `MakeService` does.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89047,"byte_end":89070,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89071,"byte_end":89074,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Resources that need to be shared by all `Service`s can be put into a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89075,"byte_end":89147,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ `MakeService`, and then passed to individual `Service`s when `call`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89148,"byte_end":89219,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ is called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\mod.rs","byte_start":89220,"byte_end":89234,"line_start":36,"line_end":36,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90066,"byte_end":90077,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"HttpService","qualname":"::service::http::HttpService","value":"HttpService<ReqBody>: sealed::Sealed<ReqBody>","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"decl_id":null,"docs":" An asynchronous function from `Request` to `Response`.\n","sig":null,"attributes":[{"value":"/ An asynchronous function from `Request` to `Response`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":89997,"byte_end":90055,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90176,"byte_end":90183,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::http::HttpService::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" The `HttpBody` body of the `http::Response`.\n","sig":null,"attributes":[{"value":"/ The `HttpBody` body of the `http::Response`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90118,"byte_end":90166,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90475,"byte_end":90480,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::http::HttpService::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" The error type that can occur within this `Service`.","sig":null,"attributes":[{"value":"/ The error type that can occur within this `Service`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90200,"byte_end":90256,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90261,"byte_end":90264,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Note: Returning an `Error` to a hyper server will cause the connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90269,"byte_end":90343,"line_start":14,"line_end":14,"column_start":5,"column_end":79}},{"value":"/ to be abruptly aborted. In most cases, it is better to return a `Response`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90348,"byte_end":90426,"line_start":15,"line_end":15,"column_start":5,"column_end":83}},{"value":"/ with a 4xx or 5xx status code.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90431,"byte_end":90465,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90580,"byte_end":90586,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::http::HttpService::Future","value":"type Future: Future<Output = Result<Response<Self::ResBody>, Self::Error>>;","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" The `Future` returned by this `Service`.\n","sig":null,"attributes":[{"value":"/ The `Future` returned by this `Service`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90526,"byte_end":90570,"line_start":19,"line_end":19,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90678,"byte_end":90688,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::service::http::HttpService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90789,"byte_end":90793,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"call","qualname":"::service::http::HttpService::call","value":"pub fn call(&mut Self, Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":91549,"byte_end":91555,"line_start":57,"line_end":57,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::http::sealed::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":91928,"byte_end":91938,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Connection","qualname":"::service::make::MakeConnection::Connection","value":"type Connection: AsyncRead + AsyncWrite;","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":91973,"byte_end":91978,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeConnection::Error","value":"type Error;","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":91989,"byte_end":91995,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeConnection::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>>;","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92875,"byte_end":92889,"line_start":43,"line_end":43,"column_start":11,"column_end":25},"name":"MakeServiceRef","qualname":"::service::make::MakeServiceRef","value":"MakeServiceRef<Target, ReqBody>: self::sealed::Sealed<(Target, ReqBody)>","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92959,"byte_end":92966,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::make::MakeServiceRef::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92987,"byte_end":92992,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeServiceRef::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93042,"byte_end":93049,"line_start":46,"line_end":46,"column_start":10,"column_end":17},"name":"Service","qualname":"::service::make::MakeServiceRef::Service","value":"type Service: HttpService<ReqBody, ResBody = Self::ResBody, Error = Self::Error>;","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93128,"byte_end":93137,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"MakeError","qualname":"::service::make::MakeServiceRef::MakeError","value":"type MakeError: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93187,"byte_end":93193,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeServiceRef::Future","value":"type Future: Future<Output = Result<Self::Service, Self::MakeError>>;","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93701,"byte_end":93713,"line_start":59,"line_end":59,"column_start":10,"column_end":22},"name":"__DontNameMe","qualname":"::service::make::MakeServiceRef::__DontNameMe","value":"type __DontNameMe: self::sealed::CantImpl;","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93747,"byte_end":93761,"line_start":61,"line_end":61,"column_start":8,"column_end":22},"name":"poll_ready_ref","qualname":"::service::make::MakeServiceRef::poll_ready_ref","value":"pub fn poll_ready_ref(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::MakeError>>","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93847,"byte_end":93863,"line_start":63,"line_end":63,"column_start":8,"column_end":24},"name":"make_service_ref","qualname":"::service::make::MakeServiceRef::make_service_ref","value":"pub fn make_service_ref(&mut Self, &Target) -> Self::Future","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95906,"byte_end":95921,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"make_service_fn","qualname":"::service::make::make_service_fn","value":"pub fn make_service_fn<F, Target, Ret>(F) -> MakeServiceFn<F> where\nF: FnMut(&Target) -> Ret, Ret: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `MakeService` from a function.","sig":null,"attributes":[{"value":"/ Create a `MakeService` from a function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94885,"byte_end":94928,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94929,"byte_end":94932,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94933,"byte_end":94946,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94947,"byte_end":94950,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94951,"byte_end":94958,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94959,"byte_end":94992,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94993,"byte_end":95015,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95016,"byte_end":95049,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95050,"byte_end":95099,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/ use hyper::server::conn::AddrStream;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95100,"byte_end":95140,"line_start":111,"line_end":111,"column_start":1,"column_end":41}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95141,"byte_end":95195,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95196,"byte_end":95199,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let addr = ([127, 0, 0, 1], 3000).into();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95200,"byte_end":95245,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95246,"byte_end":95249,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let make_svc = make_service_fn(|socket: &AddrStream| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95250,"byte_end":95308,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/     let remote_addr = socket.remote_addr();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95309,"byte_end":95356,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/     async move {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95357,"byte_end":95377,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/         Ok::<_, Infallible>(service_fn(move |_: Request<Body>| async move {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95378,"byte_end":95457,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/             Ok::<_, Infallible>(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95458,"byte_end":95494,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/                 Response::new(Body::from(format!(\"Hello, {}!\", remote_addr)))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95495,"byte_end":95576,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/             )","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95577,"byte_end":95594,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/         }))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95595,"byte_end":95610,"line_start":123,"line_end":123,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95611,"byte_end":95620,"line_start":124,"line_end":124,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95621,"byte_end":95628,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95629,"byte_end":95632,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // Then bind and serve...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95633,"byte_end":95662,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"/ let server = Server::bind(&addr)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95663,"byte_end":95699,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/     .serve(make_svc);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95700,"byte_end":95725,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95726,"byte_end":95729,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // Finally, spawn `server` onto an Executor...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95730,"byte_end":95780,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/ if let Err(e) = server.await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95781,"byte_end":95815,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/     eprintln!(\"server error: {}\", e);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95816,"byte_end":95857,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95858,"byte_end":95863,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95864,"byte_end":95871,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95872,"byte_end":95890,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":95891,"byte_end":95898,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96132,"byte_end":96145,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"MakeServiceFn","qualname":"::service::make::MakeServiceFn","value":"MakeServiceFn {  }","parent":null,"children":[{"krate":0,"index":1368}],"decl_id":null,"docs":" `MakeService` returned from [`make_service_fn`]\n","sig":null,"attributes":[{"value":"/ `MakeService` returned from [`make_service_fn`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96046,"byte_end":96097,"line_start":146,"line_end":146,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96862,"byte_end":96868,"line_start":178,"line_end":178,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::make::sealed::Sealed","value":"Sealed<X>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":97014,"byte_end":97022,"line_start":184,"line_end":184,"column_start":14,"column_end":22},"name":"CantName","qualname":"::service::make::sealed::CantName","value":"pub enum CantName { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96961,"byte_end":97000,"line_start":183,"line_end":183,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97800,"byte_end":97810,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"service_fn","qualname":"::service::util::service_fn","value":"pub fn service_fn<F, R, S>(F) -> ServiceFn<F, R> where F: FnMut(Request<R>) ->\nS, S: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `Service` from a function.","sig":null,"attributes":[{"value":"/ Create a `Service` from a function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97245,"byte_end":97284,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97285,"byte_end":97288,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97289,"byte_end":97302,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97303,"byte_end":97306,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97307,"byte_end":97314,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use hyper::{Body, Request, Response, Version};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97315,"byte_end":97365,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ use hyper::service::service_fn;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97366,"byte_end":97401,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97402,"byte_end":97405,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let service = service_fn(|req: Request<Body>| async move {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97406,"byte_end":97468,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/     if req.version() == Version::HTTP_11 {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97469,"byte_end":97515,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/         Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97516,"byte_end":97572,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97573,"byte_end":97589,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/         // Note: it's usually better to return a Response","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97590,"byte_end":97651,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/         // with an appropriate StatusCode instead of an Err.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97652,"byte_end":97716,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/         Err(\"not HTTP/1.1, abort connection\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97717,"byte_end":97766,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97767,"byte_end":97776,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97777,"byte_end":97784,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97785,"byte_end":97792,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":98012,"byte_end":98021,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"ServiceFn","qualname":"::service::util::ServiceFn","value":"ServiceFn {  }","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"decl_id":null,"docs":" Service returned by [`service_fn`]\n","sig":null,"attributes":[{"value":"/ Service returned by [`service_fn`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":97962,"byte_end":98000,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"upgrade","qualname":"::upgrade","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1374},{"krate":0,"index":1379},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1120}],"decl_id":null,"docs":" HTTP Upgrades","sig":null,"attributes":[{"value":"/ HTTP Upgrades","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99101,"byte_end":99118,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99119,"byte_end":99122,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [this example][example] showing how upgrades work with both","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99123,"byte_end":99190,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ Clients and Servers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99191,"byte_end":99215,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99216,"byte_end":99219,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99220,"byte_end":99301,"line_start":6,"line_end":6,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99984,"byte_end":99992,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"Upgraded","qualname":"::upgrade::Upgraded","value":"Upgraded {  }","parent":null,"children":[{"krate":0,"index":1073}],"decl_id":null,"docs":" An upgraded HTTP connection.","sig":null,"attributes":[{"value":"/ An upgraded HTTP connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99654,"byte_end":99686,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99687,"byte_end":99690,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This type holds a trait object internally of the original IO that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99691,"byte_end":99760,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ was used to speak HTTP before the upgrade. It can be used directly","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99761,"byte_end":99831,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ as a `Read` or `Write` for convenience.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99832,"byte_end":99875,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99876,"byte_end":99879,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Alternatively, if the exact type is known, this can be deconstructed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99880,"byte_end":99952,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ into its parts.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":99953,"byte_end":99972,"line_start":30,"line_end":30,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100166,"byte_end":100175,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"OnUpgrade","qualname":"::upgrade::OnUpgrade","value":"OnUpgrade {  }","parent":null,"children":[{"krate":0,"index":1075}],"decl_id":null,"docs":" A future for a possible HTTP upgrade.","sig":null,"attributes":[{"value":"/ A future for a possible HTTP upgrade.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100034,"byte_end":100075,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100076,"byte_end":100079,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If no upgrade was available, or it doesn't succeed, yields an `Error`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100080,"byte_end":100154,"line_start":37,"line_end":37,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100482,"byte_end":100487,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"Parts","qualname":"::upgrade::Parts","value":"Parts { io, read_buf }","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378}],"decl_id":null,"docs":" The deconstructed parts of an [`Upgraded`](Upgraded) type.","sig":null,"attributes":[{"value":"/ The deconstructed parts of an [`Upgraded`](Upgraded) type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100241,"byte_end":100303,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100304,"byte_end":100307,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Includes the original IO type, and a read buffer of bytes that the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100308,"byte_end":100378,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ HTTP state machine may have already read before completing an upgrade.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100379,"byte_end":100453,"line_start":45,"line_end":45,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100557,"byte_end":100559,"line_start":49,"line_end":49,"column_start":9,"column_end":11},"name":"io","qualname":"::upgrade::Parts::io","value":"T","parent":{"krate":0,"index":1374},"children":[],"decl_id":null,"docs":" The original IO object used before the upgrade.\n","sig":null,"attributes":[{"value":"/ The original IO object used before the upgrade.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100497,"byte_end":100548,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100979,"byte_end":100987,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::upgrade::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":1374},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100568,"byte_end":100636,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100641,"byte_end":100644,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ For instance, if the `Connection` is used for an HTTP upgrade request,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100649,"byte_end":100723,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ it is possible the server sent back the first bytes of the new protocol","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100728,"byte_end":100803,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ along with the response upgrade.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100808,"byte_end":100844,"line_start":54,"line_end":54,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100849,"byte_end":100852,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100857,"byte_end":100930,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":100935,"byte_end":100970,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101073,"byte_end":101075,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"on","qualname":"::upgrade::on","value":"pub fn on<T: sealed::CanUpgrade>(T) -> OnUpgrade","parent":null,"children":[],"decl_id":null,"docs":" Gets a pending HTTP upgrade from this message.\n","sig":null,"attributes":[{"value":"/ Gets a pending HTTP upgrade from this message.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101015,"byte_end":101065,"line_start":62,"line_end":62,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101993,"byte_end":102001,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Upgraded>::downcast","value":"pub fn downcast<T: AsyncRead + AsyncWrite + Unpin + 'static>(Self)\n-> Result<Parts<T>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to downcast the internal trait object to the type passed.","sig":null,"attributes":[{"value":"/ Tries to downcast the internal trait object to the type passed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101809,"byte_end":101876,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101881,"byte_end":101884,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ On success, returns the downcasted parts. On error, returns the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101889,"byte_end":101956,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/ `Upgraded` back.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101961,"byte_end":101981,"line_start":94,"line_end":94,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":106426,"byte_end":106436,"line_start":257,"line_end":257,"column_start":15,"column_end":25},"name":"CanUpgrade","qualname":"::upgrade::sealed::CanUpgrade","value":"CanUpgrade","parent":null,"children":[{"krate":0,"index":1125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":106450,"byte_end":106460,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"::upgrade::sealed::CanUpgrade::on_upgrade","value":"pub fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15819664,"byte_end":15819672,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"PollItem","qualname":"::proto::h1::dispatch::Dispatch::PollItem","value":"type PollItem;","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15819683,"byte_end":15819691,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"PollBody","qualname":"::proto::h1::dispatch::Dispatch::PollBody","value":"type PollBody;","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15819702,"byte_end":15819711,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"PollError","qualname":"::proto::h1::dispatch::Dispatch::PollError","value":"type PollError;","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15819722,"byte_end":15819730,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"RecvItem","qualname":"::proto::h1::dispatch::Dispatch::RecvItem","value":"type RecvItem;","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\mod.rs","byte_start":15745064,"byte_end":15745072,"line_start":32,"line_end":32,"column_start":10,"column_end":18},"name":"Incoming","qualname":"::proto::h1::Http1Transaction::Incoming","value":"type Incoming;","parent":{"krate":0,"index":2693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2695},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\mod.rs","byte_start":15745083,"byte_end":15745091,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"name":"Outgoing","qualname":"::proto::h1::Http1Transaction::Outgoing","value":"type Outgoing: Default;","parent":{"krate":0,"index":2693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5194},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15991354,"byte_end":15991362,"line_start":355,"line_end":355,"column_start":16,"column_end":24},"name":"H2Stream","qualname":"::proto::h2::server::H2Stream","value":"H2Stream {  }","parent":null,"children":[{"krate":0,"index":5197},{"krate":0,"index":5198}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.7\\src\\lib.rs","byte_start":12737243,"byte_end":12737252,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","parent":null,"children":[{"krate":0,"index":3221},{"krate":0,"index":3273},{"krate":0,"index":3534},{"krate":0,"index":3613},{"krate":0,"index":3732},{"krate":0,"index":3999},{"krate":0,"index":4002}],"decl_id":null,"docs":" HTTP Server","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\cfg.rs","byte_start":3214,"byte_end":3227,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ HTTP Server","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997448,"byte_end":15997463,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997464,"byte_end":15997467,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Server` is created to listen on a port, parse HTTP requests, and hand","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997468,"byte_end":15997544,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ them off to a `Service`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997545,"byte_end":15997573,"line_start":4,"line_end":4,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997574,"byte_end":15997577,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are two levels of APIs provide for constructing HTTP servers:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997578,"byte_end":15997649,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997650,"byte_end":15997653,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - The higher-level [`Server`](Server) type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997654,"byte_end":15997701,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/ - The lower-level [`conn`](conn) module.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997702,"byte_end":15997746,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997747,"byte_end":15997750,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997751,"byte_end":15997763,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997764,"byte_end":15997767,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The [`Server`](Server) is main way to start listening for HTTP requests.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997768,"byte_end":15997844,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ It wraps a listener with a [`MakeService`](crate::service), and then should","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997845,"byte_end":15997924,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ be executed to start serving requests.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997925,"byte_end":15997967,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997968,"byte_end":15997971,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Server`](Server) accepts connections in both HTTP1 and HTTP2 by default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15997972,"byte_end":15998050,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998051,"byte_end":15998054,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998055,"byte_end":15998070,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998071,"byte_end":15998074,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998075,"byte_end":15998088,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998089,"byte_end":15998122,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998123,"byte_end":15998152,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998153,"byte_end":15998202,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998203,"byte_end":15998257,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998258,"byte_end":15998261,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ async fn handle(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998262,"byte_end":15998342,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998343,"byte_end":15998395,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998396,"byte_end":15998401,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998402,"byte_end":15998405,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998406,"byte_end":15998439,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998440,"byte_end":15998458,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998459,"byte_end":15998480,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     // Construct our SocketAddr to listen on...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998481,"byte_end":15998532,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998533,"byte_end":15998593,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998594,"byte_end":15998597,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // And a MakeService to handle each connection...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998598,"byte_end":15998655,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/     let make_service = make_service_fn(|_conn| async {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998656,"byte_end":15998714,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/         Ok::<_, Infallible>(service_fn(handle))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998715,"byte_end":15998766,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998767,"byte_end":15998778,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998779,"byte_end":15998782,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // Then bind and serve...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998783,"byte_end":15998816,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998817,"byte_end":15998878,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998879,"byte_end":15998882,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     // And run forever...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998883,"byte_end":15998912,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998913,"byte_end":15998951,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998952,"byte_end":15998997,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15998998,"byte_end":15999007,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999008,"byte_end":15999013,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999014,"byte_end":15999052,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999053,"byte_end":15999071,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999072,"byte_end":15999079,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999080,"byte_end":15999083,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If you don't need the connection and your service implements `Clone` you can use","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999084,"byte_end":15999168,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/ [`tower::make::Shared`] instead of `make_service_fn` which is a bit simpler:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999169,"byte_end":15999249,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999250,"byte_end":15999253,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999254,"byte_end":15999267,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ # use std::convert::Infallible;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999268,"byte_end":15999303,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ # use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999304,"byte_end":15999335,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ # use hyper::{Body, Request, Response, Server};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999336,"byte_end":15999387,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/ # use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999388,"byte_end":15999444,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ # use tower::make::Shared;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999445,"byte_end":15999475,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ # async fn handle(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999476,"byte_end":15999558,"line_start":63,"line_end":63,"column_start":1,"column_end":83}},{"value":"/ #     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999559,"byte_end":15999613,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999614,"byte_end":15999621,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999622,"byte_end":15999655,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999656,"byte_end":15999674,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999675,"byte_end":15999696,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     // Construct our SocketAddr to listen on...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999697,"byte_end":15999748,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999749,"byte_end":15999809,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999810,"byte_end":15999813,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // Shared is a MakeService that produces services by cloning an inner service...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999814,"byte_end":15999902,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/     let make_service = Shared::new(service_fn(handle));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999903,"byte_end":15999962,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999963,"byte_end":15999966,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     // Then bind and serve...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":15999967,"byte_end":16000000,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000001,"byte_end":16000062,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000063,"byte_end":16000066,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // And run forever...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000067,"byte_end":16000096,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000097,"byte_end":16000135,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000136,"byte_end":16000181,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000182,"byte_end":16000191,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000192,"byte_end":16000197,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000198,"byte_end":16000236,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000237,"byte_end":16000255,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000256,"byte_end":16000263,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000264,"byte_end":16000267,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Passing data to your request handler can be done like so:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000268,"byte_end":16000329,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000330,"byte_end":16000333,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000334,"byte_end":16000347,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000348,"byte_end":16000381,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000382,"byte_end":16000411,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000412,"byte_end":16000461,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000462,"byte_end":16000516,"line_start":93,"line_end":93,"column_start":1,"column_end":55}},{"value":"/ use hyper::server::conn::AddrStream;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000517,"byte_end":16000557,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000558,"byte_end":16000561,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000562,"byte_end":16000582,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"/ struct AppContext {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000583,"byte_end":16000606,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/     // Whatever data your application needs can go here","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000607,"byte_end":16000666,"line_start":98,"line_end":98,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000667,"byte_end":16000672,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000673,"byte_end":16000676,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ async fn handle(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000677,"byte_end":16000697,"line_start":101,"line_end":101,"column_start":1,"column_end":21}},{"value":"/     context: AppContext,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000698,"byte_end":16000726,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/     addr: SocketAddr,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000727,"byte_end":16000752,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/     req: Request<Body>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000753,"byte_end":16000779,"line_start":104,"line_end":104,"column_start":1,"column_end":27}},{"value":"/ ) -> Result<Response<Body>, Infallible> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000780,"byte_end":16000825,"line_start":105,"line_end":105,"column_start":1,"column_end":46}},{"value":"/     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000826,"byte_end":16000878,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000879,"byte_end":16000884,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000885,"byte_end":16000888,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000889,"byte_end":16000922,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000923,"byte_end":16000941,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000942,"byte_end":16000963,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let context = AppContext {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000964,"byte_end":16000998,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16000999,"byte_end":16001017,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001018,"byte_end":16001028,"line_start":114,"line_end":114,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001029,"byte_end":16001032,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     // A `MakeService` that produces a `Service` to handle each connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001033,"byte_end":16001112,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/     let make_service = make_service_fn(move |conn: &AddrStream| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001113,"byte_end":16001182,"line_start":117,"line_end":117,"column_start":1,"column_end":70}},{"value":"/         // We have to clone the context to share it with each invocation of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001183,"byte_end":16001262,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/         // `make_service`. If your data doesn't implement `Clone` consider using","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001263,"byte_end":16001347,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/         // an `std::sync::Arc`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001348,"byte_end":16001383,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/         let context = context.clone();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001384,"byte_end":16001426,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001427,"byte_end":16001430,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/         // You can grab the address of the incoming connection like so.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001431,"byte_end":16001506,"line_start":123,"line_end":123,"column_start":1,"column_end":76}},{"value":"/         let addr = conn.remote_addr();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001507,"byte_end":16001549,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001550,"byte_end":16001553,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/         // Create a `Service` for responding to the request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001554,"byte_end":16001618,"line_start":126,"line_end":126,"column_start":1,"column_end":65}},{"value":"/         let service = service_fn(move |req| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001619,"byte_end":16001668,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/             handle(context.clone(), addr, req)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001669,"byte_end":16001719,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/         });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001720,"byte_end":16001735,"line_start":129,"line_end":129,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001736,"byte_end":16001739,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/         // Return the service to hyper.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001740,"byte_end":16001783,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/         async move { Ok::<_, Infallible>(service) }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001784,"byte_end":16001839,"line_start":132,"line_end":132,"column_start":1,"column_end":56}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001840,"byte_end":16001851,"line_start":133,"line_end":133,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001852,"byte_end":16001855,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     // Run the server like above...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001856,"byte_end":16001895,"line_start":135,"line_end":135,"column_start":1,"column_end":40}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001896,"byte_end":16001956,"line_start":136,"line_end":136,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001957,"byte_end":16001960,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16001961,"byte_end":16002022,"line_start":138,"line_end":138,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002023,"byte_end":16002026,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002027,"byte_end":16002065,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002066,"byte_end":16002111,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002112,"byte_end":16002121,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002122,"byte_end":16002127,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002128,"byte_end":16002166,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002167,"byte_end":16002185,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002186,"byte_end":16002193,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002194,"byte_end":16002197,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [`tower::make::Shared`]: https://docs.rs/tower/latest/tower/make/struct.Shared.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002198,"byte_end":16002285,"line_start":148,"line_end":148,"column_start":1,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"accept","qualname":"::server::accept","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","parent":null,"children":[{"krate":0,"index":3222},{"krate":0,"index":3225},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3243},{"krate":0,"index":3261}],"decl_id":null,"docs":" The `Accept` trait and supporting types.","sig":null,"attributes":[{"value":"/ The `Accept` trait and supporting types.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002517,"byte_end":16002561,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002562,"byte_end":16002565,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002566,"byte_end":16002591,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002592,"byte_end":16002595,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Accept`](Accept) trait used to asynchronously accept incoming","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002596,"byte_end":16002669,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002670,"byte_end":16002688,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/ - Utilities like `poll_fn` to ease creating a custom `Accept`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002689,"byte_end":16002755,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002989,"byte_end":16002995,"line_start":20,"line_end":20,"column_start":11,"column_end":17},"name":"Accept","qualname":"::server::accept::Accept","value":"Accept","parent":null,"children":[{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242}],"decl_id":null,"docs":" Asynchronously accept incoming connections.\n","sig":null,"attributes":[{"value":"/ Asynchronously accept incoming connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16002931,"byte_end":16002978,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003057,"byte_end":16003061,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Conn","qualname":"::server::accept::Accept::Conn","value":"type Conn;","parent":{"krate":0,"index":3239},"children":[],"decl_id":null,"docs":" The connection type that can be accepted.\n","sig":null,"attributes":[{"value":"/ The connection type that can be accepted.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003002,"byte_end":16003047,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003139,"byte_end":16003144,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::server::accept::Accept::Error","value":"type Error;","parent":{"krate":0,"index":3239},"children":[],"decl_id":null,"docs":" The error type that can occur when accepting a connection.\n","sig":null,"attributes":[{"value":"/ The error type that can occur when accepting a connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003067,"byte_end":16003129,"line_start":23,"line_end":23,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003198,"byte_end":16003209,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"poll_accept","qualname":"::server::accept::Accept::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut task::Context)\n-> Poll<Option<Result<Self::Conn, Self::Error>>>","parent":{"krate":0,"index":3239},"children":[],"decl_id":null,"docs":" Poll to accept the next connection.\n","sig":null,"attributes":[{"value":"/ Poll to accept the next connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003151,"byte_end":16003190,"line_start":26,"line_end":26,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003805,"byte_end":16003812,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::server::accept::poll_fn","value":"pub fn poll_fn<F, IO, E>(F) -> /*impl Trait*/ where\nF: FnMut(&mut task::Context) -> Poll<Option<Result<IO, E>>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Accept` with a polling function.","sig":null,"attributes":[{"value":"/ Create an `Accept` with a polling function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003336,"byte_end":16003383,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003384,"byte_end":16003387,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003388,"byte_end":16003401,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003402,"byte_end":16003405,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003406,"byte_end":16003413,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use std::task::Poll;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003414,"byte_end":16003438,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ use hyper::server::{accept, Server};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003439,"byte_end":16003479,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003480,"byte_end":16003483,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # let mock_conn = ();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003484,"byte_end":16003509,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ // If we created some mocked connection...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003510,"byte_end":16003556,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/ let mut conn = Some(mock_conn);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003557,"byte_end":16003592,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003593,"byte_end":16003596,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // And accept just the mocked conn once...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003597,"byte_end":16003643,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ let once = accept::poll_fn(move |cx| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003644,"byte_end":16003686,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/     Poll::Ready(conn.take().map(Ok::<_, ()>))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003687,"byte_end":16003736,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003737,"byte_end":16003744,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003745,"byte_end":16003748,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let builder = Server::builder(once);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003749,"byte_end":16003789,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16003790,"byte_end":16003797,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004658,"byte_end":16004669,"line_start":85,"line_end":85,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::server::accept::from_stream","value":"pub fn from_stream<S, IO, E>(S) -> /*impl Trait*/ where S: Stream<Item =\nResult<IO, E>>","parent":null,"children":[],"decl_id":null,"docs":" Adapt a `Stream` of incoming connections into an `Accept`.","sig":null,"attributes":[{"value":"/ Adapt a `Stream` of incoming connections into an `Accept`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004455,"byte_end":16004517,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004518,"byte_end":16004521,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004522,"byte_end":16004536,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004537,"byte_end":16004540,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function requires enabling the `stream` feature in your","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004541,"byte_end":16004605,"line_start":82,"line_end":82,"column_start":1,"column_end":65}},{"value":"/ `Cargo.toml`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004606,"byte_end":16004623,"line_start":83,"line_end":83,"column_start":1,"column_end":18}},{"value":"cfg(feature = \"stream\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004624,"byte_end":16004650,"line_start":84,"line_end":84,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conn","qualname":"::server::conn","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3287},{"krate":0,"index":3290},{"krate":0,"index":3738},{"krate":0,"index":3741},{"krate":0,"index":3744},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3774},{"krate":0,"index":3777},{"krate":0,"index":3780},{"krate":0,"index":3783},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3790},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3813},{"krate":0,"index":3816},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3819},{"krate":0,"index":3830},{"krate":0,"index":3833},{"krate":0,"index":3836},{"krate":0,"index":3843},{"krate":0,"index":3845},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":4771},{"krate":0,"index":4778},{"krate":0,"index":4762},{"krate":0,"index":4709},{"krate":0,"index":4716},{"krate":0,"index":4700},{"krate":0,"index":4655},{"krate":0,"index":4660},{"krate":0,"index":4646},{"krate":0,"index":4593},{"krate":0,"index":4599},{"krate":0,"index":3300},{"krate":0,"index":3304},{"krate":0,"index":4543},{"krate":0,"index":4558},{"krate":0,"index":4552},{"krate":0,"index":3850},{"krate":0,"index":3858},{"krate":0,"index":3861},{"krate":0,"index":3309},{"krate":0,"index":3312},{"krate":0,"index":3864},{"krate":0,"index":3871},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3354},{"krate":0,"index":3370},{"krate":0,"index":3377},{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3389},{"krate":0,"index":3397},{"krate":0,"index":3406},{"krate":0,"index":3410},{"krate":0,"index":3415},{"krate":0,"index":3424},{"krate":0,"index":3431},{"krate":0,"index":3514}],"decl_id":null,"docs":" Lower-level Server connection API.","sig":null,"attributes":[{"value":"/ Lower-level Server connection API.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005284,"byte_end":16005322,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005323,"byte_end":16005326,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types in this module are to provide a lower-level API based around a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005327,"byte_end":16005403,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ single connection. Accepting a connection and binding it with a service","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005404,"byte_end":16005479,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ are not handled at this level. This module provides the building blocks to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005480,"byte_end":16005558,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ customize those things externally.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005559,"byte_end":16005597,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005598,"byte_end":16005601,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you don't have need to manage connections yourself, consider using the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005602,"byte_end":16005679,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ higher-level [Server](super) API.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005680,"byte_end":16005717,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005718,"byte_end":16005721,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005722,"byte_end":16005736,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ A simple example that uses the `Http` struct to talk HTTP over a Tokio TCP stream","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005737,"byte_end":16005822,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005823,"byte_end":16005836,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(all(feature = \"http1\", feature = \"runtime\"))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005837,"byte_end":16005894,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ # mod rt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005895,"byte_end":16005909,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ use http::{Request, Response, StatusCode};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005910,"byte_end":16005956,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ use hyper::{server::conn::Http, service::service_fn, Body};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16005957,"byte_end":16006020,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ use std::{net::SocketAddr, convert::Infallible};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006021,"byte_end":16006073,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006074,"byte_end":16006106,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006107,"byte_end":16006110,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006111,"byte_end":16006129,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync>> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006130,"byte_end":16006207,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/     let addr: SocketAddr = ([127, 0, 0, 1], 8080).into();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006208,"byte_end":16006269,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006270,"byte_end":16006273,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let mut tcp_listener = TcpListener::bind(addr).await?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006274,"byte_end":16006336,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006337,"byte_end":16006351,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/         let (tcp_stream, _) = tcp_listener.accept().await?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006352,"byte_end":16006415,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/         tokio::task::spawn(async move {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006416,"byte_end":16006459,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/             if let Err(http_err) = Http::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006460,"byte_end":16006510,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/                     .http1_only(true)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006511,"byte_end":16006552,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/                     .http1_keep_alive(true)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006553,"byte_end":16006600,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/                     .serve_connection(tcp_stream, service_fn(hello))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006601,"byte_end":16006673,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/                     .await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006674,"byte_end":16006706,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/                 eprintln!(\"Error while serving HTTP connection: {}\", http_err);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006707,"byte_end":16006790,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/             }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006791,"byte_end":16006808,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006809,"byte_end":16006824,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006825,"byte_end":16006834,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006835,"byte_end":16006840,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006841,"byte_end":16006844,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ async fn hello(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006845,"byte_end":16006924,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/    Ok(Response::new(Body::from(\"Hello World!\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006925,"byte_end":16006977,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006978,"byte_end":16006983,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006984,"byte_end":16006991,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16006992,"byte_end":16006999,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008728,"byte_end":16008732,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"Http","qualname":"::server::conn::Http","value":"Http {  }","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829}],"decl_id":null,"docs":" A lower-level configuration of the HTTP protocol.","sig":null,"attributes":[{"value":"/ A lower-level configuration of the HTTP protocol.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008313,"byte_end":16008366,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008367,"byte_end":16008370,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This structure is used to configure options for an HTTP server connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008371,"byte_end":16008449,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008450,"byte_end":16008453,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ If you don't have need to manage connections yourself, consider using the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008454,"byte_end":16008531,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ higher-level [Server](super) API.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008532,"byte_end":16008569,"line_start":96,"line_end":96,"column_start":1,"column_end":38}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16008594,"byte_end":16008643,"line_start":98,"line_end":98,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16010387,"byte_end":16010397,"line_start":152,"line_end":152,"column_start":16,"column_end":26},"name":"Connecting","qualname":"::server::conn::Connecting","value":"Connecting {  }","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715}],"decl_id":null,"docs":" A future building a new `Service` to a `Connection`.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.7\\src\\lib.rs","byte_start":12737243,"byte_end":12737252,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4593},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16011221,"byte_end":16011231,"line_start":180,"line_end":180,"column_start":16,"column_end":26},"name":"Connection","qualname":"::server::conn::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":4597},{"krate":0,"index":4598}],"decl_id":null,"docs":" A future binding a connection with a Service.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.7\\src\\lib.rs","byte_start":12737243,"byte_end":12737252,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013297,"byte_end":16013302,"line_start":257,"line_end":257,"column_start":12,"column_end":17},"name":"Parts","qualname":"::server::conn::Parts","value":"Parts { io, read_buf, service }","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870}],"decl_id":null,"docs":" Deconstructed parts of a `Connection`.","sig":null,"attributes":[{"value":"/ Deconstructed parts of a `Connection`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16012968,"byte_end":16013010,"line_start":250,"line_end":250,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013011,"byte_end":16013014,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ This allows taking apart a `Connection` at a later time, in order to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013015,"byte_end":16013087,"line_start":252,"line_end":252,"column_start":1,"column_end":73}},{"value":"/ reclaim the IO object, and additional related pieces.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013088,"byte_end":16013145,"line_start":253,"line_end":253,"column_start":1,"column_end":58}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013163,"byte_end":16013212,"line_start":255,"line_end":255,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3867},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013373,"byte_end":16013375,"line_start":259,"line_end":259,"column_start":9,"column_end":11},"name":"io","qualname":"::server::conn::Parts::io","value":"T","parent":{"krate":0,"index":3864},"children":[],"decl_id":null,"docs":" The original IO object used in the handshake.\n","sig":null,"attributes":[{"value":"/ The original IO object used in the handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013315,"byte_end":16013364,"line_start":258,"line_end":258,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3868},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013766,"byte_end":16013774,"line_start":268,"line_end":268,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::server::conn::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":3864},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013384,"byte_end":16013452,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013457,"byte_end":16013460,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If the client sent additional bytes after its last request, and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013465,"byte_end":16013532,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/ this connection \"ended\" with an upgrade, the read buffer will contain","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013537,"byte_end":16013610,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ those bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013615,"byte_end":16013631,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013636,"byte_end":16013639,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013644,"byte_end":16013717,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013722,"byte_end":16013757,"line_start":267,"line_end":267,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3869},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013844,"byte_end":16013851,"line_start":270,"line_end":270,"column_start":9,"column_end":16},"name":"service","qualname":"::server::conn::Parts::service","value":"S","parent":{"krate":0,"index":3864},"children":[],"decl_id":null,"docs":" The `Service` used to serve this connection.\n","sig":null,"attributes":[{"value":"/ The `Service` used to serve this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013787,"byte_end":16013835,"line_start":269,"line_end":269,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014091,"byte_end":16014094,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<Http>::new","value":"pub fn new() -> Http","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of the HTTP protocol, ready to spawn a server or\n start accepting connections.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the HTTP protocol, ready to spawn a server or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013967,"byte_end":16014042,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ start accepting connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014047,"byte_end":16014079,"line_start":279,"line_end":279,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014756,"byte_end":16014766,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<Http<E>>::http1_only","value":"pub fn http1_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP1 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP1 is required.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014593,"byte_end":16014628,"line_start":298,"line_end":298,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014633,"byte_end":16014636,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Default is false","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014641,"byte_end":16014661,"line_start":300,"line_end":300,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014666,"byte_end":16014691,"line_start":301,"line_end":301,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015487,"byte_end":16015503,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"http1_half_close","qualname":"<Http<E>>::http1_half_close","value":"pub fn http1_half_close(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should support half-closures.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should support half-closures.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015040,"byte_end":16015104,"line_start":315,"line_end":315,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015109,"byte_end":16015112,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Clients can chose to shutdown their write-side while waiting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015117,"byte_end":16015181,"line_start":317,"line_end":317,"column_start":5,"column_end":69}},{"value":"/ for the server to respond. Setting this to `true` will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015186,"byte_end":16015244,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ prevent closing the connection immediately if `read`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015249,"byte_end":16015305,"line_start":319,"line_end":319,"column_start":5,"column_end":61}},{"value":"/ detects an EOF in the middle of a request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015310,"byte_end":16015356,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015361,"byte_end":16015364,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015369,"byte_end":16015392,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015397,"byte_end":16015422,"line_start":323,"line_end":323,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015769,"byte_end":16015785,"line_start":335,"line_end":335,"column_start":12,"column_end":28},"name":"http1_keep_alive","qualname":"<Http<E>>::http1_keep_alive","value":"pub fn http1_keep_alive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables HTTP/1 keep-alive.","sig":null,"attributes":[{"value":"/ Enables or disables HTTP/1 keep-alive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015599,"byte_end":16015641,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015646,"byte_end":16015649,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Default is true.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015654,"byte_end":16015674,"line_start":332,"line_end":332,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015679,"byte_end":16015704,"line_start":333,"line_end":333,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016174,"byte_end":16016198,"line_start":348,"line_end":348,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Http<E>>::http1_title_case_headers","value":"pub fn http1_title_case_headers(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015881,"byte_end":16015956,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015961,"byte_end":16015982,"line_start":341,"line_end":341,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015987,"byte_end":16015990,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16015995,"byte_end":16016045,"line_start":343,"line_end":343,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016050,"byte_end":16016053,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016058,"byte_end":16016079,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016084,"byte_end":16016109,"line_start":346,"line_end":346,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016601,"byte_end":16016627,"line_start":361,"line_end":361,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Http<E>>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as provided\n at the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as provided","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016310,"byte_end":16016380,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/ at the socket level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016385,"byte_end":16016409,"line_start":354,"line_end":354,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016414,"byte_end":16016417,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016422,"byte_end":16016472,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016477,"byte_end":16016480,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016485,"byte_end":16016506,"line_start":358,"line_end":358,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016511,"byte_end":16016536,"line_start":359,"line_end":359,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016904,"byte_end":16016914,"line_start":371,"line_end":371,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Http<E>>::http2_only","value":"pub fn http2_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 is required.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016741,"byte_end":16016776,"line_start":366,"line_end":366,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016781,"byte_end":16016784,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Default is false","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016789,"byte_end":16016809,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16016814,"byte_end":16016839,"line_start":369,"line_end":369,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017577,"byte_end":16017609,"line_start":393,"line_end":393,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Http<E>>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                   impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017188,"byte_end":16017256,"line_start":383,"line_end":383,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017261,"byte_end":16017291,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017296,"byte_end":16017299,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017304,"byte_end":16017339,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017344,"byte_end":16017347,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017352,"byte_end":16017393,"line_start":388,"line_end":388,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017398,"byte_end":16017401,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017406,"byte_end":16017482,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017487,"byte_end":16017512,"line_start":391,"line_end":391,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018104,"byte_end":16018140,"line_start":408,"line_end":408,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Http<E>>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017850,"byte_end":16017907,"line_start":401,"line_end":401,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017912,"byte_end":16017915,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017920,"byte_end":16017955,"line_start":403,"line_end":403,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017960,"byte_end":16017963,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16017968,"byte_end":16018009,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018014,"byte_end":16018039,"line_start":406,"line_end":406,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018703,"byte_end":16018724,"line_start":426,"line_end":426,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Http<E>>::http2_adaptive_window","value":"pub fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018402,"byte_end":16018451,"line_start":419,"line_end":419,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018456,"byte_end":16018459,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018464,"byte_end":16018513,"line_start":421,"line_end":421,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018518,"byte_end":16018560,"line_start":422,"line_end":422,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018565,"byte_end":16018608,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16018613,"byte_end":16018638,"line_start":424,"line_end":424,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019308,"byte_end":16019328,"line_start":444,"line_end":444,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Http<E>>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019062,"byte_end":16019111,"line_start":437,"line_end":437,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019116,"byte_end":16019119,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019124,"byte_end":16019159,"line_start":439,"line_end":439,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019164,"byte_end":16019167,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019172,"byte_end":16019213,"line_start":441,"line_end":441,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019218,"byte_end":16019243,"line_start":442,"line_end":442,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019870,"byte_end":16019898,"line_start":459,"line_end":459,"column_start":12,"column_end":40},"name":"http2_max_concurrent_streams","qualname":"<Http<E>>::http2_max_concurrent_streams","value":"pub fn http2_max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                               impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019504,"byte_end":16019575,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019580,"byte_end":16019596,"line_start":452,"line_end":452,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019601,"byte_end":16019604,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`std::u32::MAX`). Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019609,"byte_end":16019683,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019688,"byte_end":16019691,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019696,"byte_end":16019775,"line_start":456,"line_end":456,"column_start":5,"column_end":84}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16019780,"byte_end":16019805,"line_start":457,"line_end":457,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020463,"byte_end":16020488,"line_start":477,"line_end":477,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Http<E>>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval<impl Into<Option<Duration>>: Into<Option<Duration>>>(&mut Self,\n                                                                                      impl Into<Option<Duration>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020039,"byte_end":16020106,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020111,"byte_end":16020132,"line_start":465,"line_end":465,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020137,"byte_end":16020140,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020145,"byte_end":16020189,"line_start":467,"line_end":467,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020194,"byte_end":16020197,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020202,"byte_end":16020236,"line_start":469,"line_end":469,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020241,"byte_end":16020244,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020249,"byte_end":16020268,"line_start":471,"line_end":471,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020273,"byte_end":16020276,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020281,"byte_end":16020336,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020341,"byte_end":16020368,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020373,"byte_end":16020398,"line_start":475,"line_end":475,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021169,"byte_end":16021193,"line_start":498,"line_end":498,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Http<E>>::http2_keep_alive_timeout","value":"pub fn http2_keep_alive_timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020664,"byte_end":16020739,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020744,"byte_end":16020747,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020752,"byte_end":16020827,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020832,"byte_end":16020903,"line_start":488,"line_end":488,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020908,"byte_end":16020911,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020916,"byte_end":16020942,"line_start":490,"line_end":490,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020947,"byte_end":16020950,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020955,"byte_end":16020974,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020979,"byte_end":16020982,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16020987,"byte_end":16021042,"line_start":494,"line_end":494,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021047,"byte_end":16021074,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021079,"byte_end":16021104,"line_start":496,"line_end":496,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021639,"byte_end":16021651,"line_start":512,"line_end":512,"column_start":12,"column_end":24},"name":"max_buf_size","qualname":"<Http<E>>::max_buf_size","value":"pub fn max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021317,"byte_end":16021368,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021373,"byte_end":16021376,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021381,"byte_end":16021403,"line_start":505,"line_end":505,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021408,"byte_end":16021411,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021416,"byte_end":16021428,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021433,"byte_end":16021436,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021441,"byte_end":16021544,"line_start":509,"line_end":509,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021549,"byte_end":16021574,"line_start":510,"line_end":510,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022073,"byte_end":16022087,"line_start":526,"line_end":526,"column_start":12,"column_end":26},"name":"pipeline_flush","qualname":"<Http<E>>::pipeline_flush","value":"pub fn pipeline_flush(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Aggregates flushes to better support pipelined responses.","sig":null,"attributes":[{"value":"/ Aggregates flushes to better support pipelined responses.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021921,"byte_end":16021982,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021987,"byte_end":16021990,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Experimental, may have bugs.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16021995,"byte_end":16022027,"line_start":523,"line_end":523,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022032,"byte_end":16022035,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022040,"byte_end":16022061,"line_start":525,"line_end":525,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022325,"byte_end":16022338,"line_start":534,"line_end":534,"column_start":12,"column_end":25},"name":"with_executor","qualname":"<Http<E>>::with_executor","value":"pub fn with_executor<E2>(Self, E2) -> Http<E2>","parent":null,"children":[],"decl_id":null,"docs":" Set the executor used to spawn background tasks.","sig":null,"attributes":[{"value":"/ Set the executor used to spawn background tasks.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022192,"byte_end":16022244,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022249,"byte_end":16022252,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Default uses implicit default (like `tokio::spawn`).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022257,"byte_end":16022313,"line_start":533,"line_end":533,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023888,"byte_end":16023904,"line_start":577,"line_end":577,"column_start":12,"column_end":28},"name":"serve_connection","qualname":"<Http<E>>::serve_connection","value":"pub fn serve_connection<S, I, Bd>(&Self, I, S) -> Connection<I, S, E> where\nS: HttpService<Body, ResBody = Bd>,\nS::Error: Into<Box<dyn StdError + Send + Sync>>, Bd: HttpBody + 'static,\nBd::Error: Into<Box<dyn StdError + Send + Sync>>, I: AsyncRead + AsyncWrite +\nUnpin, E: ConnStreamExec<S::Future, Bd>","parent":null,"children":[],"decl_id":null,"docs":" Bind a connection together with a [`Service`](crate::service::Service).","sig":null,"attributes":[{"value":"/ Bind a connection together with a [`Service`](crate::service::Service).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022853,"byte_end":16022928,"line_start":549,"line_end":549,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022933,"byte_end":16022936,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This returns a Future that must be polled in order for HTTP to be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16022941,"byte_end":16023010,"line_start":551,"line_end":551,"column_start":5,"column_end":74}},{"value":"/ driven on the connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023015,"byte_end":16023044,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023049,"byte_end":16023052,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023057,"byte_end":16023070,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023075,"byte_end":16023078,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023083,"byte_end":16023090,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ # use hyper::{Body, Request, Response};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023095,"byte_end":16023138,"line_start":557,"line_end":557,"column_start":5,"column_end":48}},{"value":"/ # use hyper::service::Service;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023143,"byte_end":16023177,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ # use hyper::server::conn::Http;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023182,"byte_end":16023218,"line_start":559,"line_end":559,"column_start":5,"column_end":41}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023223,"byte_end":16023268,"line_start":560,"line_end":560,"column_start":5,"column_end":50}},{"value":"/ # async fn run<I, S>(some_io: I, some_service: S)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023273,"byte_end":16023326,"line_start":561,"line_end":561,"column_start":5,"column_end":58}},{"value":"/ # where","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023331,"byte_end":16023342,"line_start":562,"line_end":562,"column_start":5,"column_end":16}},{"value":"/ #     I: AsyncRead + AsyncWrite + Unpin + Send + 'static,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023347,"byte_end":16023408,"line_start":563,"line_end":563,"column_start":5,"column_end":66}},{"value":"/ #     S: Service<hyper::Request<Body>, Response=hyper::Response<Body>> + Send + 'static,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023413,"byte_end":16023505,"line_start":564,"line_end":564,"column_start":5,"column_end":97}},{"value":"/ #     S::Error: Into<Box<dyn std::error::Error + Send + Sync>>,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023510,"byte_end":16023577,"line_start":565,"line_end":565,"column_start":5,"column_end":72}},{"value":"/ #     S::Future: Send,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023582,"byte_end":16023608,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023613,"byte_end":16023620,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/ let http = Http::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023625,"byte_end":16023652,"line_start":568,"line_end":568,"column_start":5,"column_end":32}},{"value":"/ let conn = http.serve_connection(some_io, some_service);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023657,"byte_end":16023717,"line_start":569,"line_end":569,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023722,"byte_end":16023725,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ if let Err(e) = conn.await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023730,"byte_end":16023762,"line_start":571,"line_end":571,"column_start":5,"column_end":37}},{"value":"/     eprintln!(\"server connection error: {}\", e);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023767,"byte_end":16023819,"line_start":572,"line_end":572,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023824,"byte_end":16023829,"line_start":573,"line_end":573,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023834,"byte_end":16023841,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023846,"byte_end":16023864,"line_start":575,"line_end":575,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16023869,"byte_end":16023876,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027629,"byte_end":16027646,"line_start":682,"line_end":682,"column_start":12,"column_end":29},"name":"graceful_shutdown","qualname":"<Connection<I, S, E>>::graceful_shutdown","value":"pub fn graceful_shutdown(Pin<&mut Self>)","parent":null,"children":[],"decl_id":null,"docs":" Start a graceful shutdown process for this connection.","sig":null,"attributes":[{"value":"/ Start a graceful shutdown process for this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027263,"byte_end":16027321,"line_start":672,"line_end":672,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027326,"byte_end":16027329,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ This `Connection` should continue to be polled until shutdown","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027334,"byte_end":16027399,"line_start":674,"line_end":674,"column_start":5,"column_end":70}},{"value":"/ can finish.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027404,"byte_end":16027419,"line_start":675,"line_end":675,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027424,"byte_end":16027427,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027432,"byte_end":16027442,"line_start":677,"line_end":677,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027447,"byte_end":16027450,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This should only be called while the `Connection` future is still","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027455,"byte_end":16027524,"line_start":679,"line_end":679,"column_start":5,"column_end":74}},{"value":"/ pending. If called after `Connection::poll` has resolved, this does","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027529,"byte_end":16027600,"line_start":680,"line_end":680,"column_start":5,"column_end":76}},{"value":"/ nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16027605,"byte_end":16027617,"line_start":681,"line_end":681,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028727,"byte_end":16028737,"line_start":710,"line_end":710,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Connection<I, S, E>>::into_parts","value":"pub fn into_parts(Self) -> Parts<I, S>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028268,"byte_end":16028327,"line_start":701,"line_end":701,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028332,"byte_end":16028335,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ If the IO object has been \"rewound\" the io will not contain those bytes rewound.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028340,"byte_end":16028424,"line_start":703,"line_end":703,"column_start":5,"column_end":89}},{"value":"/ This should only be called after `poll_without_shutdown` signals","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028429,"byte_end":16028497,"line_start":704,"line_end":704,"column_start":5,"column_end":73}},{"value":"/ that the connection is \"done\". Otherwise, it may not have finished","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028502,"byte_end":16028572,"line_start":705,"line_end":705,"column_start":5,"column_end":75}},{"value":"/ flushing all necessary HTTP bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028577,"byte_end":16028615,"line_start":706,"line_end":706,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028620,"byte_end":16028623,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028628,"byte_end":16028640,"line_start":708,"line_end":708,"column_start":5,"column_end":17}},{"value":"/ This method will panic if this connection is using an h2 protocol.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028645,"byte_end":16028715,"line_start":709,"line_end":709,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029043,"byte_end":16029057,"line_start":718,"line_end":718,"column_start":12,"column_end":26},"name":"try_into_parts","qualname":"<Connection<I, S, E>>::try_into_parts","value":"pub fn try_into_parts(Self) -> Option<Parts<I, S>>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information, if available.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information, if available.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028865,"byte_end":16028938,"line_start":715,"line_end":715,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028943,"byte_end":16028946,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This method will return a `None` if this connection is using an h2 protocol.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16028951,"byte_end":16029031,"line_start":717,"line_end":717,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16030036,"byte_end":16030057,"line_start":744,"line_end":744,"column_start":12,"column_end":33},"name":"poll_without_shutdown","qualname":"<Connection<I, S, E>>::poll_without_shutdown","value":"pub fn poll_without_shutdown(&mut Self, &mut task::Context)\n-> Poll<crate::Result<()>> where S: Unpin, S::Future: Unpin, B: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Poll the connection for completion, but without calling `shutdown`\n on the underlying IO.","sig":null,"attributes":[{"value":"/ Poll the connection for completion, but without calling `shutdown`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029638,"byte_end":16029708,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/ on the underlying IO.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029713,"byte_end":16029738,"line_start":738,"line_end":738,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029743,"byte_end":16029746,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow running a connection while doing an HTTP","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029751,"byte_end":16029819,"line_start":740,"line_end":740,"column_start":5,"column_end":73}},{"value":"/ upgrade. Once the upgrade is completed, the connection would be \"done\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029824,"byte_end":16029899,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ but it is not desired to actually shutdown the IO object. Instead you","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029904,"byte_end":16029977,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ would take it back using `into_parts`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16029982,"byte_end":16030024,"line_start":743,"line_end":743,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16031653,"byte_end":16031669,"line_start":785,"line_end":785,"column_start":12,"column_end":28},"name":"without_shutdown","qualname":"<Connection<I, S, E>>::without_shutdown","value":"pub fn without_shutdown(Self) -> /*impl Trait*/ where S: Unpin,\nS::Future: Unpin, B: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Prevent shutdown of the underlying IO object at the end of service the request,\n instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","sig":null,"attributes":[{"value":"/ Prevent shutdown of the underlying IO object at the end of service the request,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16031359,"byte_end":16031442,"line_start":779,"line_end":779,"column_start":5,"column_end":88}},{"value":"/ instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16031447,"byte_end":16031536,"line_start":780,"line_end":780,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16031541,"byte_end":16031544,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16031549,"byte_end":16031560,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16031565,"byte_end":16031568,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This errors if the underlying connection protocol is not HTTP/1.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16031573,"byte_end":16031641,"line_start":784,"line_end":784,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16033164,"byte_end":16033177,"line_start":824,"line_end":824,"column_start":12,"column_end":25},"name":"with_upgrades","qualname":"<Connection<I, S, E>>::with_upgrades","value":"pub fn with_upgrades(Self) -> UpgradeableConnection<I, S, E> where I: Send","parent":null,"children":[],"decl_id":null,"docs":" Enable this connection to support higher-level HTTP upgrades.","sig":null,"attributes":[{"value":"/ Enable this connection to support higher-level HTTP upgrades.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16033018,"byte_end":16033083,"line_start":821,"line_end":821,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16033088,"byte_end":16033091,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ See [the `upgrade` module](crate::upgrade) for more.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16033096,"byte_end":16033152,"line_start":823,"line_end":823,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16041880,"byte_end":16041887,"line_start":1094,"line_end":1094,"column_start":15,"column_end":22},"name":"Watcher","qualname":"::server::conn::spawn_all::Watcher","value":"Watcher<I, S: HttpService<Body>, E>: Clone","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3489}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16041938,"byte_end":16041944,"line_start":1095,"line_end":1095,"column_start":14,"column_end":20},"name":"Future","qualname":"::server::conn::spawn_all::Watcher::Future","value":"type Future: Future<Output = crate::Result<()>>;","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16041994,"byte_end":16041999,"line_start":1097,"line_end":1097,"column_start":12,"column_end":17},"name":"watch","qualname":"::server::conn::spawn_all::Watcher::watch","value":"pub fn watch(&Self, UpgradeableConnection<I, S, E>) -> Self::Future","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3875},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16042155,"byte_end":16042166,"line_start":1102,"line_end":1102,"column_start":16,"column_end":27},"name":"NoopWatcher","qualname":"::server::conn::spawn_all::NoopWatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16042073,"byte_end":16042112,"line_start":1100,"line_end":1100,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4446},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16043263,"byte_end":16043273,"line_start":1131,"line_end":1131,"column_start":20,"column_end":30},"name":"NewSvcTask","qualname":"::server::conn::spawn_all::NewSvcTask","value":"NewSvcTask {  }","parent":null,"children":[{"krate":0,"index":4452}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.7\\src\\lib.rs","byte_start":12737243,"byte_end":12737252,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16046734,"byte_end":16046755,"line_start":1227,"line_end":1227,"column_start":16,"column_end":37},"name":"UpgradeableConnection","qualname":"::server::conn::upgrades::UpgradeableConnection","value":"UpgradeableConnection {  }","parent":null,"children":[{"krate":0,"index":3520}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16046626,"byte_end":16046674,"line_start":1225,"line_end":1225,"column_start":5,"column_end":53}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16046679,"byte_end":16046718,"line_start":1226,"line_end":1226,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16047397,"byte_end":16047414,"line_start":1247,"line_end":1247,"column_start":16,"column_end":33},"name":"graceful_shutdown","qualname":"<UpgradeableConnection<I, S, E>>::graceful_shutdown","value":"pub fn graceful_shutdown(Pin<&mut Self>)","parent":null,"children":[],"decl_id":null,"docs":" Start a graceful shutdown process for this connection.","sig":null,"attributes":[{"value":"/ Start a graceful shutdown process for this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16047213,"byte_end":16047271,"line_start":1243,"line_end":1243,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16047280,"byte_end":16047283,"line_start":1244,"line_end":1244,"column_start":9,"column_end":12}},{"value":"/ This `Connection` should continue to be polled until shutdown","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16047292,"byte_end":16047357,"line_start":1245,"line_end":1245,"column_start":9,"column_end":74}},{"value":"/ can finish.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16047366,"byte_end":16047381,"line_start":1246,"line_end":1246,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4307},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16050881,"byte_end":16050887,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"name":"Server","qualname":"::server::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":4311}],"decl_id":null,"docs":" A listening HTTP server that accepts connections in both HTTP1 and HTTP2 by default.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16051494,"byte_end":16051501,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"Builder","qualname":"::server::server::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":3953},{"krate":0,"index":3954}],"decl_id":null,"docs":" A builder for a [`Server`](Server).\n","sig":null,"attributes":[{"value":"/ A builder for a [`Server`](Server).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16051303,"byte_end":16051342,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16051360,"byte_end":16051409,"line_start":54,"line_end":54,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16051820,"byte_end":16051827,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server<I, ()>>::builder","value":"pub fn builder(I) -> Builder<I>","parent":null,"children":[],"decl_id":null,"docs":" Starts a [`Builder`](Builder) with the provided incoming stream.\n","sig":null,"attributes":[{"value":"/ Starts a [`Builder`](Builder) with the provided incoming stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16051740,"byte_end":16051808,"line_start":66,"line_end":66,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16052377,"byte_end":16052381,"line_start":85,"line_end":85,"column_start":16,"column_end":20},"name":"bind","qualname":"<Server<AddrIncoming, ()>>::bind","value":"pub fn bind(&SocketAddr) -> Builder<AddrIncoming>","parent":null,"children":[],"decl_id":null,"docs":" Binds to the provided address, and returns a [`Builder`](Builder).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16052727,"byte_end":16052735,"line_start":93,"line_end":93,"column_start":16,"column_end":24},"name":"try_bind","qualname":"<Server<AddrIncoming, ()>>::try_bind","value":"pub fn try_bind(&SocketAddr) -> crate::Result<Builder<AddrIncoming>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to bind to the provided address, and returns a [`Builder`](Builder).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16052955,"byte_end":16052963,"line_start":98,"line_end":98,"column_start":16,"column_end":24},"name":"from_tcp","qualname":"<Server<AddrIncoming, ()>>::from_tcp","value":"pub fn from_tcp(StdTcpListener) -> Result<Builder<AddrIncoming>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from a `std::net::TcpListener` instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16053339,"byte_end":16053349,"line_start":109,"line_end":109,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Server<AddrIncoming, S, E>>::local_addr","value":"pub fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this server is bound to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055361,"byte_end":16055383,"line_start":165,"line_end":165,"column_start":12,"column_end":34},"name":"with_graceful_shutdown","qualname":"<Server<I, S, E>>::with_graceful_shutdown","value":"pub fn with_graceful_shutdown<F>(Self, F) -> Graceful<I, S, F, E> where\nF: Future<Output = ()>","parent":null,"children":[],"decl_id":null,"docs":" Prepares a server to handle graceful shutdown when the provided future\n completes.","sig":null,"attributes":[{"value":"/ Prepares a server to handle graceful shutdown when the provided future","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054078,"byte_end":16054152,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ completes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054157,"byte_end":16054171,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054176,"byte_end":16054179,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054184,"byte_end":16054197,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054202,"byte_end":16054205,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054210,"byte_end":16054217,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054222,"byte_end":16054240,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ # #[cfg(feature = \"tcp\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054245,"byte_end":16054274,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054279,"byte_end":16054301,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/ # use hyper::{Body, Response, Server, Error};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054306,"byte_end":16054355,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/ # use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054360,"byte_end":16054416,"line_start":139,"line_end":139,"column_start":5,"column_end":61}},{"value":"/ # let make_service = make_service_fn(|_| async {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054421,"byte_end":16054473,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/ #     Ok::<_, Error>(service_fn(|_req| async {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054478,"byte_end":16054528,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/ #         Ok::<_, Error>(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054533,"byte_end":16054603,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ #     }))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054608,"byte_end":16054621,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054626,"byte_end":16054635,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ // Make a server from the previous examples...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054640,"byte_end":16054690,"line_start":145,"line_end":145,"column_start":5,"column_end":55}},{"value":"/ let server = Server::bind(&([127, 0, 0, 1], 3000).into())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054695,"byte_end":16054756,"line_start":146,"line_end":146,"column_start":5,"column_end":66}},{"value":"/     .serve(make_service);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054761,"byte_end":16054790,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054795,"byte_end":16054798,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // Prepare some signal for when the server should start shutting down...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054803,"byte_end":16054879,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ let (tx, rx) = tokio::sync::oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054884,"byte_end":16054941,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ let graceful = server","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054946,"byte_end":16054971,"line_start":151,"line_end":151,"column_start":5,"column_end":30}},{"value":"/     .with_graceful_shutdown(async {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16054976,"byte_end":16055015,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/         rx.await.ok();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055020,"byte_end":16055046,"line_start":153,"line_end":153,"column_start":5,"column_end":31}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055051,"byte_end":16055062,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055067,"byte_end":16055070,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ // Await the `server` receiving the signal...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055075,"byte_end":16055124,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/ if let Err(e) = graceful.await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055129,"byte_end":16055165,"line_start":157,"line_end":157,"column_start":5,"column_end":41}},{"value":"/     eprintln!(\"server error: {}\", e);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055170,"byte_end":16055211,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055216,"byte_end":16055221,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055226,"byte_end":16055229,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // And later, trigger the signal by calling `tx.send(())`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055234,"byte_end":16055296,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/ let _ = tx.send(());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055301,"byte_end":16055325,"line_start":162,"line_end":162,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055330,"byte_end":16055337,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055342,"byte_end":16055349,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057042,"byte_end":16057045,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder<I, E>>::new","value":"pub fn new(I, Http_<E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a new builder, wrapping an incoming stream and low-level options.","sig":null,"attributes":[{"value":"/ Start a new builder, wrapping an incoming stream and low-level options.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16056868,"byte_end":16056943,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16056948,"byte_end":16056951,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For a more convenient constructor, see [`Server::bind`](Server::bind).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16056956,"byte_end":16057030,"line_start":210,"line_end":210,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057327,"byte_end":16057342,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"http1_keepalive","qualname":"<Builder<I, E>>::http1_keepalive","value":"pub fn http1_keepalive(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use keep-alive for HTTP/1 connections.","sig":null,"attributes":[{"value":"/ Sets whether to use keep-alive for HTTP/1 connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057139,"byte_end":16057197,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057202,"byte_end":16057205,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057210,"byte_end":16057232,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057237,"byte_end":16057262,"line_start":218,"line_end":218,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057890,"byte_end":16057906,"line_start":235,"line_end":235,"column_start":12,"column_end":28},"name":"http1_half_close","qualname":"<Builder<I, E>>::http1_half_close","value":"pub fn http1_half_close(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should support half-closures.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should support half-closures.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057443,"byte_end":16057507,"line_start":225,"line_end":225,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057512,"byte_end":16057515,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Clients can chose to shutdown their write-side while waiting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057520,"byte_end":16057584,"line_start":227,"line_end":227,"column_start":5,"column_end":69}},{"value":"/ for the server to respond. Setting this to `true` will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057589,"byte_end":16057647,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/ prevent closing the connection immediately if `read`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057652,"byte_end":16057708,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/ detects an EOF in the middle of a request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057713,"byte_end":16057759,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057764,"byte_end":16057767,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057772,"byte_end":16057795,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16057800,"byte_end":16057825,"line_start":233,"line_end":233,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058170,"byte_end":16058188,"line_start":245,"line_end":245,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder<I, E>>::http1_max_buf_size","value":"pub fn http1_max_buf_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058007,"byte_end":16058039,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058044,"byte_end":16058047,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Default is ~ 400kb.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058052,"byte_end":16058075,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058080,"byte_end":16058105,"line_start":243,"line_end":243,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058539,"byte_end":16058559,"line_start":256,"line_end":256,"column_start":12,"column_end":32},"name":"http1_pipeline_flush","qualname":"<Builder<I, E>>::http1_pipeline_flush","value":"pub fn http1_pipeline_flush(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058502,"byte_end":16058527,"line_start":255,"line_end":255,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058951,"byte_end":16058975,"line_start":269,"line_end":269,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder<I, E>>::http1_title_case_headers","value":"pub fn http1_title_case_headers(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058658,"byte_end":16058733,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058738,"byte_end":16058759,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058764,"byte_end":16058767,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058772,"byte_end":16058822,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058827,"byte_end":16058830,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058835,"byte_end":16058856,"line_start":266,"line_end":266,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16058861,"byte_end":16058886,"line_start":267,"line_end":267,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059375,"byte_end":16059401,"line_start":282,"line_end":282,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder<I, E>>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as provided\n at the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as provided","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059084,"byte_end":16059154,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/ at the socket level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059159,"byte_end":16059183,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059188,"byte_end":16059191,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059196,"byte_end":16059246,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059251,"byte_end":16059254,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059259,"byte_end":16059280,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059285,"byte_end":16059310,"line_start":280,"line_end":280,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3589},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059679,"byte_end":16059689,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<Builder<I, E>>::http1_only","value":"pub fn http1_only(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP/1 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP/1 is required.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059512,"byte_end":16059548,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059553,"byte_end":16059556,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059561,"byte_end":16059584,"line_start":289,"line_end":289,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059589,"byte_end":16059614,"line_start":290,"line_end":290,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059951,"byte_end":16059961,"line_start":302,"line_end":302,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder<I, E>>::http2_only","value":"pub fn http2_only(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP/2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP/2 is required.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059784,"byte_end":16059820,"line_start":297,"line_end":297,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059825,"byte_end":16059828,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059833,"byte_end":16059856,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16059861,"byte_end":16059886,"line_start":300,"line_end":300,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060445,"byte_end":16060477,"line_start":317,"line_end":317,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder<I, E>>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                   impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060056,"byte_end":16060124,"line_start":307,"line_end":307,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060129,"byte_end":16060159,"line_start":308,"line_end":308,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060164,"byte_end":16060167,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060172,"byte_end":16060207,"line_start":310,"line_end":310,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060212,"byte_end":16060215,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060220,"byte_end":16060261,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060266,"byte_end":16060269,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060274,"byte_end":16060350,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060355,"byte_end":16060380,"line_start":315,"line_end":315,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060870,"byte_end":16060906,"line_start":329,"line_end":329,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder<I, E>>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                       impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060617,"byte_end":16060673,"line_start":322,"line_end":322,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060678,"byte_end":16060681,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060686,"byte_end":16060721,"line_start":324,"line_end":324,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060726,"byte_end":16060729,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060734,"byte_end":16060775,"line_start":326,"line_end":326,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16060780,"byte_end":16060805,"line_start":327,"line_end":327,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061364,"byte_end":16061385,"line_start":342,"line_end":342,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder<I, E>>::http2_adaptive_window","value":"pub fn http2_adaptive_window(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061063,"byte_end":16061112,"line_start":335,"line_end":335,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061117,"byte_end":16061120,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061125,"byte_end":16061174,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061179,"byte_end":16061221,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061226,"byte_end":16061269,"line_start":339,"line_end":339,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061274,"byte_end":16061299,"line_start":340,"line_end":340,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061745,"byte_end":16061765,"line_start":354,"line_end":354,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder<I, E>>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                       impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061499,"byte_end":16061548,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061553,"byte_end":16061556,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061561,"byte_end":16061596,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061601,"byte_end":16061604,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061609,"byte_end":16061650,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061655,"byte_end":16061680,"line_start":352,"line_end":352,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062252,"byte_end":16062280,"line_start":367,"line_end":367,"column_start":12,"column_end":40},"name":"http2_max_concurrent_streams","qualname":"<Builder<I, E>>::http2_max_concurrent_streams","value":"pub fn http2_max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                               impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061886,"byte_end":16061957,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061962,"byte_end":16061978,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061983,"byte_end":16061986,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`std::u32::MAX`). Passing `None` will do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16061991,"byte_end":16062065,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062070,"byte_end":16062073,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062078,"byte_end":16062157,"line_start":364,"line_end":364,"column_start":5,"column_end":84}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062162,"byte_end":16062187,"line_start":365,"line_end":365,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062836,"byte_end":16062861,"line_start":384,"line_end":384,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Builder<I, E>>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval<impl Into<Option<Duration>>: Into<Option<Duration>>>(Self,\n                                                                                      impl Into<Option<Duration>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062418,"byte_end":16062485,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062490,"byte_end":16062511,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062516,"byte_end":16062519,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062524,"byte_end":16062568,"line_start":375,"line_end":375,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062573,"byte_end":16062576,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062581,"byte_end":16062615,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062620,"byte_end":16062623,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062628,"byte_end":16062647,"line_start":379,"line_end":379,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062652,"byte_end":16062655,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062660,"byte_end":16062715,"line_start":381,"line_end":381,"column_start":5,"column_end":60}},{"value":"cfg(all(feature = \"runtime\", feature = \"http2\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16062720,"byte_end":16062771,"line_start":382,"line_end":382,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063503,"byte_end":16063527,"line_start":401,"line_end":401,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Builder<I, E>>::http2_keep_alive_timeout","value":"pub fn http2_keep_alive_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063004,"byte_end":16063079,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063084,"byte_end":16063087,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063092,"byte_end":16063167,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063172,"byte_end":16063243,"line_start":392,"line_end":392,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063248,"byte_end":16063251,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063256,"byte_end":16063282,"line_start":394,"line_end":394,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063287,"byte_end":16063290,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063295,"byte_end":16063314,"line_start":396,"line_end":396,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063319,"byte_end":16063322,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063327,"byte_end":16063382,"line_start":398,"line_end":398,"column_start":5,"column_end":60}},{"value":"cfg(all(feature = \"runtime\", feature = \"http2\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063387,"byte_end":16063438,"line_start":399,"line_end":399,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063757,"byte_end":16063765,"line_start":409,"line_end":409,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder<I, E>>::executor","value":"pub fn executor<E2>(Self, E2) -> Builder<I, E2>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `Executor` to deal with connection tasks.","sig":null,"attributes":[{"value":"/ Sets the `Executor` to deal with connection tasks.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063648,"byte_end":16063702,"line_start":406,"line_end":406,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063707,"byte_end":16063710,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Default is `tokio::spawn`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063715,"byte_end":16063745,"line_start":408,"line_end":408,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064890,"byte_end":16064895,"line_start":446,"line_end":446,"column_start":12,"column_end":17},"name":"serve","qualname":"<Builder<I, E>>::serve","value":"pub fn serve<S, B>(Self, S) -> Server<I, S, E> where I: Accept,\nI::Error: Into<Box<dyn StdError + Send + Sync>>, I::Conn: AsyncRead +\nAsyncWrite + Unpin + Send + 'static, S: MakeServiceRef<I::Conn, Body, ResBody\n= B>, S::Error: Into<Box<dyn StdError + Send + Sync>>, B: HttpBody + 'static,\nB::Error: Into<Box<dyn StdError + Send + Sync>>,\nE: NewSvcExec<I::Conn, S::Future, S::Service, E, NoopWatcher>,\nE: ConnStreamExec<<S::Service as HttpService<Body>>::Future, B>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Builder`, creating a [`Server`](Server).","sig":null,"attributes":[{"value":"/ Consume this `Builder`, creating a [`Server`](Server).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16063947,"byte_end":16064005,"line_start":416,"line_end":416,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064010,"byte_end":16064013,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064018,"byte_end":16064031,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064036,"byte_end":16064039,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064044,"byte_end":16064051,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"tcp\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064056,"byte_end":16064085,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064090,"byte_end":16064112,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ use hyper::{Body, Error, Response, Server};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064117,"byte_end":16064164,"line_start":423,"line_end":423,"column_start":5,"column_end":52}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064169,"byte_end":16064223,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064228,"byte_end":16064231,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ // Construct our SocketAddr to listen on...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064236,"byte_end":16064283,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ let addr = ([127, 0, 0, 1], 3000).into();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064288,"byte_end":16064333,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064338,"byte_end":16064341,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ // And a MakeService to handle each connection...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064346,"byte_end":16064399,"line_start":429,"line_end":429,"column_start":5,"column_end":58}},{"value":"/ let make_svc = make_service_fn(|_| async {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064404,"byte_end":16064450,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/     Ok::<_, Error>(service_fn(|_req| async {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064455,"byte_end":16064503,"line_start":431,"line_end":431,"column_start":5,"column_end":53}},{"value":"/         Ok::<_, Error>(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064508,"byte_end":16064576,"line_start":432,"line_end":432,"column_start":5,"column_end":73}},{"value":"/     }))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064581,"byte_end":16064592,"line_start":433,"line_end":433,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064597,"byte_end":16064604,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064609,"byte_end":16064612,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ // Then bind and serve...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064617,"byte_end":16064646,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/ let server = Server::bind(&addr)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064651,"byte_end":16064687,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/     .serve(make_svc);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064692,"byte_end":16064717,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064722,"byte_end":16064725,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ // Run forever-ish...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064730,"byte_end":16064755,"line_start":440,"line_end":440,"column_start":5,"column_end":30}},{"value":"/ if let Err(err) = server.await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064760,"byte_end":16064796,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/     eprintln!(\"server error: {}\", err);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064801,"byte_end":16064844,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064849,"byte_end":16064854,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064859,"byte_end":16064866,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16064871,"byte_end":16064878,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065974,"byte_end":16065987,"line_start":471,"line_end":471,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Builder<AddrIncoming, E>>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065706,"byte_end":16065781,"line_start":466,"line_end":466,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065786,"byte_end":16065789,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065794,"byte_end":16065867,"line_start":468,"line_end":468,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065872,"byte_end":16065946,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065951,"byte_end":16065962,"line_start":470,"line_end":470,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066188,"byte_end":16066199,"line_start":477,"line_end":477,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Builder<AddrIncoming, E>>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066109,"byte_end":16066176,"line_start":476,"line_end":476,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16067151,"byte_end":16067177,"line_start":497,"line_end":497,"column_start":12,"column_end":38},"name":"tcp_sleep_on_accept_errors","qualname":"<Builder<AddrIncoming, E>>::tcp_sleep_on_accept_errors","value":"pub fn tcp_sleep_on_accept_errors(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to sleep on accept errors.","sig":null,"attributes":[{"value":"/ Set whether to sleep on accept errors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066303,"byte_end":16066345,"line_start":482,"line_end":482,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066350,"byte_end":16066353,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ A possible scenario is that the process has hit the max open files","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066358,"byte_end":16066428,"line_start":484,"line_end":484,"column_start":5,"column_end":75}},{"value":"/ allowed, and so trying to accept a new connection will fail with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066433,"byte_end":16066501,"line_start":485,"line_end":485,"column_start":5,"column_end":73}},{"value":"/ EMFILE. In some cases, it's preferable to just wait for some time, if","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066506,"byte_end":16066579,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ the application will likely close some files (or connections), and try","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066584,"byte_end":16066658,"line_start":487,"line_end":487,"column_start":5,"column_end":79}},{"value":"/ to accept the connection again. If this option is true, the error will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066663,"byte_end":16066737,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ be logged at the error level, since it is still a big deal, and then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066742,"byte_end":16066814,"line_start":489,"line_end":489,"column_start":5,"column_end":77}},{"value":"/ the listener will sleep for 1 second.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066819,"byte_end":16066860,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066865,"byte_end":16066868,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ In other cases, hitting the max open files should be treat similarly","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066873,"byte_end":16066945,"line_start":492,"line_end":492,"column_start":5,"column_end":77}},{"value":"/ to being out-of-memory, and simply error (and shutdown). Setting this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16066950,"byte_end":16067023,"line_start":493,"line_end":493,"column_start":5,"column_end":78}},{"value":"/ option to false will allow that.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16067028,"byte_end":16067064,"line_start":494,"line_end":494,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16067069,"byte_end":16067072,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ For more details see [`AddrIncoming::set_sleep_on_errors`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16067077,"byte_end":16067139,"line_start":496,"line_end":496,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16067787,"byte_end":16067799,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"AddrIncoming","qualname":"::server::tcp::AddrIncoming","value":"AddrIncoming {  }","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671}],"decl_id":null,"docs":" A stream of connections from binding to an address.\n","sig":null,"attributes":[{"value":"/ A stream of connections from binding to an address.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16067671,"byte_end":16067726,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16067727,"byte_end":16067775,"line_start":17,"line_end":17,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16068691,"byte_end":16068695,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"bind","qualname":"<AddrIncoming>::bind","value":"pub fn bind(&SocketAddr) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AddrIncoming` binding to provided socket address.\n","sig":null,"attributes":[{"value":"/ Creates a new `AddrIncoming` binding to provided socket address.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16068611,"byte_end":16068679,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16068871,"byte_end":16068884,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<AddrIncoming>::from_listener","value":"pub fn from_listener(TcpListener) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AddrIncoming` from an existing `tokio::net::TcpListener`.\n","sig":null,"attributes":[{"value":"/ Creates a new `AddrIncoming` from an existing `tokio::net::TcpListener`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16068783,"byte_end":16068859,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069294,"byte_end":16069304,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<AddrIncoming>::local_addr","value":"pub fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the local address bound to this listener.\n","sig":null,"attributes":[{"value":"/ Get the local address bound to this listener.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069233,"byte_end":16069282,"line_start":61,"line_end":61,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069625,"byte_end":16069638,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<AddrIncoming>::set_keepalive","value":"pub fn set_keepalive(&mut Self, Option<Duration>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069357,"byte_end":16069432,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069437,"byte_end":16069440,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069445,"byte_end":16069518,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069523,"byte_end":16069597,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069602,"byte_end":16069613,"line_start":70,"line_end":70,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069845,"byte_end":16069856,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<AddrIncoming>::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069766,"byte_end":16069833,"line_start":76,"line_end":76,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070774,"byte_end":16070793,"line_start":97,"line_end":97,"column_start":12,"column_end":31},"name":"set_sleep_on_errors","qualname":"<AddrIncoming>::set_sleep_on_errors","value":"pub fn set_sleep_on_errors(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether to sleep on accept errors.","sig":null,"attributes":[{"value":"/ Set whether to sleep on accept errors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16069958,"byte_end":16070000,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070005,"byte_end":16070008,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ A possible scenario is that the process has hit the max open files","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070013,"byte_end":16070083,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ allowed, and so trying to accept a new connection will fail with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070088,"byte_end":16070156,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ `EMFILE`. In some cases, it's preferable to just wait for some time, if","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070161,"byte_end":16070236,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ the application will likely close some files (or connections), and try","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070241,"byte_end":16070315,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ to accept the connection again. If this option is `true`, the error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070320,"byte_end":16070391,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ will be logged at the `error` level, since it is still a big deal,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070396,"byte_end":16070466,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ and then the listener will sleep for 1 second.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070471,"byte_end":16070521,"line_start":90,"line_end":90,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070526,"byte_end":16070529,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ In other cases, hitting the max open files should be treat similarly","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070534,"byte_end":16070606,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ to being out-of-memory, and simply error (and shutdown). Setting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070611,"byte_end":16070679,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ this option to `false` will allow that.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070684,"byte_end":16070727,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070732,"byte_end":16070735,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16070740,"byte_end":16070762,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16074886,"byte_end":16074896,"line_start":206,"line_end":206,"column_start":20,"column_end":30},"name":"AddrStream","qualname":"::server::tcp::addr_stream::AddrStream","value":"AddrStream {  }","parent":null,"children":[{"krate":0,"index":3972},{"krate":0,"index":3973}],"decl_id":null,"docs":" A transport returned yieled by `AddrIncoming`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075323,"byte_end":16075334,"line_start":223,"line_end":223,"column_start":16,"column_end":27},"name":"remote_addr","qualname":"<AddrStream>::remote_addr","value":"pub fn remote_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote (peer) address of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the remote (peer) address of this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075232,"byte_end":16075289,"line_start":221,"line_end":221,"column_start":9,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075298,"byte_end":16075307,"line_start":222,"line_end":222,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075504,"byte_end":16075514,"line_start":229,"line_end":229,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<AddrStream>::into_inner","value":"pub fn into_inner(Self) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Consumes the AddrStream and returns the underlying IO object\n","sig":null,"attributes":[{"value":"/ Consumes the AddrStream and returns the underlying IO object","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075406,"byte_end":16075470,"line_start":227,"line_end":227,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075479,"byte_end":16075488,"line_start":228,"line_end":228,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075773,"byte_end":16075782,"line_start":236,"line_end":236,"column_start":16,"column_end":25},"name":"poll_peek","qualname":"<AddrStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut task::Context, &mut tokio::io::ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data\n from the queue, registering the current task for wakeup if data is\n not yet available.\n","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075578,"byte_end":16075647,"line_start":233,"line_end":233,"column_start":9,"column_end":78}},{"value":"/ from the queue, registering the current task for wakeup if data is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075656,"byte_end":16075726,"line_start":234,"line_end":234,"column_start":9,"column_end":79}},{"value":"/ not yet available.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075735,"byte_end":16075757,"line_start":235,"line_end":235,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16078300,"byte_end":16078308,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Graceful","qualname":"::server::shutdown::Graceful","value":"Graceful {  }","parent":null,"children":[{"krate":0,"index":4191}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.7\\src\\lib.rs","byte_start":12737243,"byte_end":12737252,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16080955,"byte_end":16080970,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"GracefulWatcher","qualname":"::server::shutdown::GracefulWatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16080887,"byte_end":16080926,"line_start":97,"line_end":97,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\buf.rs","byte_start":5267,"byte_end":5274,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\buf.rs","byte_start":5676,"byte_end":5683,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\date.rs","byte_start":10184,"byte_end":10194,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\date.rs","byte_start":10983,"byte_end":10993,"line_start":78,"line_end":78,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":12780,"byte_end":12786,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":12958,"byte_end":12966,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":13144,"byte_end":13149,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":13751,"byte_end":13759,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":19249,"byte_end":19253,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":19878,"byte_end":19882,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":20060,"byte_end":20064,"line_start":71,"line_end":71,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":20366,"byte_end":20370,"line_start":82,"line_end":82,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":20697,"byte_end":20698,"line_start":96,"line_end":96,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":21024,"byte_end":21025,"line_start":108,"line_end":108,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\io\\rewind.rs","byte_start":22501,"byte_end":22507,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\io\\rewind.rs","byte_start":23285,"byte_end":23291,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\io\\rewind.rs","byte_start":24189,"byte_end":24195,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\never.rs","byte_start":26787,"byte_end":26792,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\never.rs","byte_start":26905,"byte_end":26910,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\sync_wrapper.rs","byte_start":28852,"byte_end":28863,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\sync_wrapper.rs","byte_start":31162,"byte_end":31173,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","byte_start":32507,"byte_end":32513,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","byte_start":32707,"byte_end":32713,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","byte_start":32782,"byte_end":32790,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40331,"byte_end":40335,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":47855,"byte_end":47859,"line_start":346,"line_end":346,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":47985,"byte_end":47989,"line_start":354,"line_end":354,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":50875,"byte_end":50879,"line_start":435,"line_end":435,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":51542,"byte_end":51546,"line_start":460,"line_end":460,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":51954,"byte_end":51958,"line_start":473,"line_end":473,"column_start":94,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52195,"byte_end":52199,"line_start":482,"line_end":482,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52414,"byte_end":52418,"line_start":493,"line_end":493,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52546,"byte_end":52550,"line_start":500,"line_end":500,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52693,"byte_end":52697,"line_start":507,"line_end":507,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52913,"byte_end":52917,"line_start":517,"line_end":517,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53052,"byte_end":53056,"line_start":524,"line_end":524,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53208,"byte_end":53212,"line_start":531,"line_end":531,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53410,"byte_end":53416,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55944,"byte_end":55950,"line_start":614,"line_end":614,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":60747,"byte_end":60760,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":61111,"byte_end":61124,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":62848,"byte_end":62861,"line_start":73,"line_end":73,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":63213,"byte_end":63226,"line_start":83,"line_end":83,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":69614,"byte_end":69619,"line_start":144,"line_end":144,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":81778,"byte_end":81783,"line_start":471,"line_end":471,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82075,"byte_end":82080,"line_start":482,"line_end":482,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82355,"byte_end":82360,"line_start":492,"line_end":492,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82592,"byte_end":82597,"line_start":502,"line_end":502,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82712,"byte_end":82717,"line_start":509,"line_end":509,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83162,"byte_end":83167,"line_start":524,"line_end":524,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83663,"byte_end":83668,"line_start":538,"line_end":538,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83804,"byte_end":83809,"line_start":544,"line_end":544,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83939,"byte_end":83944,"line_start":550,"line_end":550,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84066,"byte_end":84071,"line_start":556,"line_end":556,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84257,"byte_end":84262,"line_start":565,"line_end":565,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84318,"byte_end":84326,"line_start":569,"line_end":569,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84462,"byte_end":84470,"line_start":575,"line_end":575,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\ext.rs","byte_start":86323,"byte_end":86336,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90884,"byte_end":90885,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":91422,"byte_end":91423,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92267,"byte_end":92268,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92341,"byte_end":92342,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93980,"byte_end":93981,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94748,"byte_end":94749,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96225,"byte_end":96238,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96695,"byte_end":96708,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":97049,"byte_end":97057,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":98163,"byte_end":98172,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":98719,"byte_end":98728,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":98878,"byte_end":98887,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":99067,"byte_end":99076,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101503,"byte_end":101511,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":102439,"byte_end":102447,"line_start":110,"line_end":110,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":102680,"byte_end":102688,"line_start":120,"line_end":120,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":103543,"byte_end":103551,"line_start":150,"line_end":150,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":103706,"byte_end":103715,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":103915,"byte_end":103924,"line_start":169,"line_end":169,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":104489,"byte_end":104498,"line_start":184,"line_end":184,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":104702,"byte_end":104709,"line_start":193,"line_end":193,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105438,"byte_end":105453,"line_start":217,"line_end":217,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105604,"byte_end":105619,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105849,"byte_end":105850,"line_start":233,"line_end":233,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":106518,"byte_end":106525,"line_start":261,"line_end":261,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":107000,"byte_end":107008,"line_start":277,"line_end":277,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15748201,"byte_end":15748205,"line_start":34,"line_end":34,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15773769,"byte_end":15773773,"line_start":771,"line_end":771,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15774045,"byte_end":15774049,"line_start":781,"line_end":781,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15775628,"byte_end":15775633,"line_start":837,"line_end":837,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15776271,"byte_end":15776278,"line_start":860,"line_end":860,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15776668,"byte_end":15776670,"line_start":871,"line_end":871,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15776942,"byte_end":15776944,"line_start":887,"line_end":887,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15777003,"byte_end":15777005,"line_start":893,"line_end":893,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15777246,"byte_end":15777251,"line_start":911,"line_end":911,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15796088,"byte_end":15796095,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15799298,"byte_end":15799305,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15799775,"byte_end":15799787,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15807951,"byte_end":15807965,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15808121,"byte_end":15808135,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15820698,"byte_end":15820708,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15834139,"byte_end":15834149,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2243},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15834949,"byte_end":15834957,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835201,"byte_end":15835209,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835370,"byte_end":15835376,"line_start":455,"line_end":455,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2837},{"krate":0,"index":2838}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835758,"byte_end":15835764,"line_start":472,"line_end":472,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835804,"byte_end":15835810,"line_start":474,"line_end":474,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15847213,"byte_end":15847220,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15852327,"byte_end":15852337,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15854016,"byte_end":15854025,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15854362,"byte_end":15854371,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15854761,"byte_end":15854770,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855021,"byte_end":15855030,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855389,"byte_end":15855399,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855545,"byte_end":15855555,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855739,"byte_end":15855749,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15859303,"byte_end":15859311,"line_start":42,"line_end":42,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15859574,"byte_end":15859582,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15868946,"byte_end":15868954,"line_start":321,"line_end":321,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15869188,"byte_end":15869196,"line_start":328,"line_end":328,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15869899,"byte_end":15869911,"line_start":355,"line_end":355,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15872156,"byte_end":15872168,"line_start":426,"line_end":426,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15872372,"byte_end":15872378,"line_start":438,"line_end":438,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15872492,"byte_end":15872498,"line_start":445,"line_end":445,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15873162,"byte_end":15873168,"line_start":470,"line_end":470,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15873421,"byte_end":15873427,"line_start":479,"line_end":479,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15874096,"byte_end":15874104,"line_start":507,"line_end":507,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15874389,"byte_end":15874397,"line_start":518,"line_end":518,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2501},{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15876312,"byte_end":15876320,"line_start":579,"line_end":579,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15876574,"byte_end":15876582,"line_start":588,"line_end":588,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15890369,"byte_end":15890375,"line_start":96,"line_end":96,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15902803,"byte_end":15902809,"line_start":414,"line_end":414,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2658},{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15904040,"byte_end":15904055,"line_start":453,"line_end":453,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15905398,"byte_end":15905412,"line_start":499,"line_end":499,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15941319,"byte_end":15941328,"line_start":1405,"line_end":1405,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\mod.rs","byte_start":15746771,"byte_end":15746776,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15733656,"byte_end":15733662,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15734003,"byte_end":15734011,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15736029,"byte_end":15736035,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15738685,"byte_end":15738691,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15739583,"byte_end":15739586,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15741509,"byte_end":15741518,"line_start":473,"line_end":473,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15743870,"byte_end":15743887,"line_start":537,"line_end":537,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15744067,"byte_end":15744084,"line_start":544,"line_end":544,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15744258,"byte_end":15744275,"line_start":551,"line_end":551,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15980367,"byte_end":15980373,"line_start":50,"line_end":50,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15981449,"byte_end":15981455,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15983626,"byte_end":15983632,"line_start":166,"line_end":166,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15985299,"byte_end":15985306,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15991946,"byte_end":15991954,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15992663,"byte_end":15992671,"line_start":418,"line_end":418,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15996980,"byte_end":15996988,"line_start":511,"line_end":511,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3170},{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15716547,"byte_end":15716563,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15716813,"byte_end":15716829,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15721437,"byte_end":15721447,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15722066,"byte_end":15722073,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15723159,"byte_end":15723169,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15724546,"byte_end":15724556,"line_start":334,"line_end":334,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15726858,"byte_end":15726876,"line_start":412,"line_end":412,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15728104,"byte_end":15728112,"line_start":455,"line_end":455,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15728136,"byte_end":15728144,"line_start":457,"line_end":457,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\mod.rs","byte_start":15713271,"byte_end":15713282,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004033,"byte_end":16004039,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004077,"byte_end":16004083,"line_start":61,"line_end":61,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004912,"byte_end":16004922,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16012714,"byte_end":16012722,"line_start":238,"line_end":238,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16012952,"byte_end":16012960,"line_start":248,"line_end":248,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013956,"byte_end":16013960,"line_start":277,"line_end":277,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014579,"byte_end":16014583,"line_start":297,"line_end":297,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3332},{"krate":0,"index":3334},{"krate":0,"index":3336},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16026983,"byte_end":16026993,"line_start":663,"line_end":663,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16033384,"byte_end":16033394,"line_start":833,"line_end":833,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16035174,"byte_end":16035184,"line_start":880,"line_end":880,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3380}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16035446,"byte_end":16035460,"line_start":892,"line_end":892,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16035955,"byte_end":16035960,"line_start":912,"line_end":912,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16036517,"byte_end":16036522,"line_start":934,"line_end":934,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16037800,"byte_end":16037810,"line_start":973,"line_end":973,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16038552,"byte_end":16038560,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16038749,"byte_end":16038757,"line_start":1002,"line_end":1002,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16038933,"byte_end":16038941,"line_start":1009,"line_end":1009,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16040097,"byte_end":16040108,"line_start":1047,"line_end":1047,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":3430}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16042208,"byte_end":16042219,"line_start":1104,"line_end":1104,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16043854,"byte_end":16043864,"line_start":1152,"line_end":1152,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16044184,"byte_end":16044194,"line_start":1163,"line_end":1163,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16046886,"byte_end":16046907,"line_start":1234,"line_end":1234,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3526}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16047550,"byte_end":16047571,"line_start":1252,"line_end":1252,"column_start":33,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16051720,"byte_end":16051726,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3556}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16052049,"byte_end":16052055,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3960},{"krate":0,"index":3962},{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16053227,"byte_end":16053233,"line_start":107,"line_end":107,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16053580,"byte_end":16053586,"line_start":117,"line_end":117,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055690,"byte_end":16055696,"line_start":175,"line_end":175,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3573},{"krate":0,"index":3574}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16056411,"byte_end":16056417,"line_start":194,"line_end":194,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3578}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16056848,"byte_end":16056855,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3605}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065675,"byte_end":16065682,"line_start":465,"line_end":465,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16067992,"byte_end":16068004,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16073181,"byte_end":16073193,"line_start":156,"line_end":156,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16074117,"byte_end":16074129,"line_start":182,"line_end":182,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075022,"byte_end":16075032,"line_start":213,"line_end":213,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16076014,"byte_end":16076024,"line_start":245,"line_end":245,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3725}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16076305,"byte_end":16076315,"line_start":256,"line_end":256,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16078706,"byte_end":16078714,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16079048,"byte_end":16079056,"line_start":50,"line_end":50,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4099},{"krate":0,"index":4100}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16081015,"byte_end":16081030,"line_start":101,"line_end":101,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4105},{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2619,"byte_end":2623,"line_start":77,"line_end":77,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":399}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2676,"byte_end":2678,"line_start":82,"line_end":82,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":780}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2688,"byte_end":2695,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":784}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":2705,"byte_end":2712,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1021}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\lib.rs","byte_start":3033,"byte_end":3039,"line_start":106,"line_end":106,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3220}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002295,"byte_end":16002301,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3221}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\mod.rs","byte_start":16002311,"byte_end":16002315,"line_start":151,"line_end":151,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3273}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\buf.rs","byte_start":5267,"byte_end":5274,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\buf.rs","byte_start":5676,"byte_end":5683,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\date.rs","byte_start":10184,"byte_end":10194,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\date.rs","byte_start":10983,"byte_end":10993,"line_start":78,"line_end":78,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":8924}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":12780,"byte_end":12786,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":12958,"byte_end":12966,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":13144,"byte_end":13149,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\drain.rs","byte_start":13751,"byte_end":13759,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18646,"byte_end":18651,"line_start":19,"line_end":19,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2501},"to":{"krate":0,"index":218}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":18863,"byte_end":18868,"line_start":24,"line_end":24,"column_start":75,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2501},"to":{"krate":0,"index":222}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":19249,"byte_end":19253,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":19878,"byte_end":19882,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":20060,"byte_end":20064,"line_start":71,"line_end":71,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1197},"to":{"krate":0,"index":218}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":20366,"byte_end":20370,"line_start":82,"line_end":82,"column_start":51,"column_end":55},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1197},"to":{"krate":0,"index":222}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":20697,"byte_end":20698,"line_start":96,"line_end":96,"column_start":40,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":218}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\exec.rs","byte_start":21024,"byte_end":21025,"line_start":108,"line_end":108,"column_start":51,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":222}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\io\\rewind.rs","byte_start":22501,"byte_end":22507,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\io\\rewind.rs","byte_start":23285,"byte_end":23291,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1205},"to":{"krate":20,"index":227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\io\\rewind.rs","byte_start":24189,"byte_end":24195,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1205},"to":{"krate":20,"index":306}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\never.rs","byte_start":26787,"byte_end":26792,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\never.rs","byte_start":26905,"byte_end":26910,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\sync_wrapper.rs","byte_start":28852,"byte_end":28863,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\sync_wrapper.rs","byte_start":31162,"byte_end":31173,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","byte_start":32507,"byte_end":32513,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","byte_start":32707,"byte_end":32713,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":372},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\common\\watch.rs","byte_start":32782,"byte_end":32790,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":40331,"byte_end":40335,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":47855,"byte_end":47859,"line_start":346,"line_end":346,"column_start":18,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":47985,"byte_end":47989,"line_start":354,"line_end":354,"column_start":19,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":506},"to":{"krate":40,"index":352}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":50875,"byte_end":50879,"line_start":435,"line_end":435,"column_start":21,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":51542,"byte_end":51546,"line_start":460,"line_end":460,"column_start":17,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":506},"to":{"krate":32,"index":96}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":51954,"byte_end":51958,"line_start":473,"line_end":473,"column_start":94,"column_end":98},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52195,"byte_end":52199,"line_start":482,"line_end":482,"column_start":22,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52414,"byte_end":52418,"line_start":493,"line_end":493,"column_start":24,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52546,"byte_end":52550,"line_start":500,"line_end":500,"column_start":30,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52693,"byte_end":52697,"line_start":507,"line_end":507,"column_start":35,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":52913,"byte_end":52917,"line_start":517,"line_end":517,"column_start":23,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53052,"byte_end":53056,"line_start":524,"line_end":524,"column_start":29,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53208,"byte_end":53212,"line_start":531,"line_end":531,"column_start":34,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":53410,"byte_end":53416,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\body.rs","byte_start":55944,"byte_end":55950,"line_start":614,"line_end":614,"column_start":21,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":528},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":60747,"byte_end":60760,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":61111,"byte_end":61124,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":62848,"byte_end":62861,"line_start":73,"line_end":73,"column_start":21,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\body\\length.rs","byte_start":63213,"byte_end":63226,"line_start":83,"line_end":83,"column_start":23,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":69614,"byte_end":69619,"line_start":144,"line_end":144,"column_start":6,"column_end":11},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":81778,"byte_end":81783,"line_start":471,"line_end":471,"column_start":21,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82075,"byte_end":82080,"line_start":482,"line_end":482,"column_start":23,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82355,"byte_end":82360,"line_start":492,"line_end":492,"column_start":19,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":669},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82592,"byte_end":82597,"line_start":502,"line_end":502,"column_start":22,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":82712,"byte_end":82717,"line_start":509,"line_end":509,"column_start":6,"column_end":11},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83162,"byte_end":83167,"line_start":524,"line_end":524,"column_start":32,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83663,"byte_end":83668,"line_start":538,"line_end":538,"column_start":44,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83804,"byte_end":83809,"line_start":544,"line_end":544,"column_start":48,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":83939,"byte_end":83944,"line_start":550,"line_end":550,"column_start":38,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84066,"byte_end":84071,"line_start":556,"line_end":556,"column_start":43,"column_end":48},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84193,"byte_end":84197,"line_start":563,"line_end":563,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2880},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84200,"byte_end":84204,"line_start":563,"line_end":563,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84257,"byte_end":84262,"line_start":565,"line_end":565,"column_start":25,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":669},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84318,"byte_end":84326,"line_start":569,"line_end":569,"column_start":23,"column_end":31},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\error.rs","byte_start":84462,"byte_end":84470,"line_start":575,"line_end":575,"column_start":19,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1355},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\ext.rs","byte_start":86323,"byte_end":86336,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90096,"byte_end":90102,"line_start":8,"line_end":8,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":833},"to":{"krate":0,"index":812}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":90884,"byte_end":90885,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":820},"to":{"krate":0,"index":812}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\http.rs","byte_start":91422,"byte_end":91423,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":829},"to":{"krate":0,"index":833}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":91899,"byte_end":91905,"line_start":12,"line_end":12,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":943},"to":{"krate":0,"index":869}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92267,"byte_end":92268,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":877},"to":{"krate":0,"index":943}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92341,"byte_end":92342,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":880},"to":{"krate":0,"index":869}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":92922,"byte_end":92928,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":943},"to":{"krate":0,"index":887}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":93980,"byte_end":93981,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":899},"to":{"krate":0,"index":887}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":94748,"byte_end":94749,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":917},"to":{"krate":0,"index":943}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96225,"byte_end":96238,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1366},"to":{"krate":44,"index":13}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":96695,"byte_end":96708,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1366},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\make.rs","byte_start":97049,"byte_end":97057,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":946},"to":{"krate":0,"index":945}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":98163,"byte_end":98172,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":982},"to":{"krate":44,"index":13}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":98719,"byte_end":98728,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":982},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":98878,"byte_end":98887,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":982},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\service\\util.rs","byte_start":99067,"byte_end":99076,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":982},"to":{"krate":2,"index":2890}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":101503,"byte_end":101511,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":102439,"byte_end":102447,"line_start":110,"line_end":110,"column_start":20,"column_end":28},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1072},"to":{"krate":20,"index":227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":102680,"byte_end":102688,"line_start":120,"line_end":120,"column_start":21,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1072},"to":{"krate":20,"index":306}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":103543,"byte_end":103551,"line_start":150,"line_end":150,"column_start":21,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1072},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":103706,"byte_end":103715,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":103915,"byte_end":103924,"line_start":169,"line_end":169,"column_start":17,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":104489,"byte_end":104498,"line_start":184,"line_end":184,"column_start":21,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":104702,"byte_end":104709,"line_start":193,"line_end":193,"column_start":6,"column_end":13},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105438,"byte_end":105453,"line_start":217,"line_end":217,"column_start":23,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105604,"byte_end":105619,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1414},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105669,"byte_end":105678,"line_start":227,"line_end":227,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":20,"index":227},"to":{"krate":0,"index":1111}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105681,"byte_end":105691,"line_start":227,"line_end":227,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":20,"index":306},"to":{"krate":0,"index":1111}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105694,"byte_end":105699,"line_start":227,"line_end":227,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2921},"to":{"krate":0,"index":1111}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":105849,"byte_end":105850,"line_start":233,"line_end":233,"column_start":58,"column_end":59},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":1111}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":106518,"byte_end":106525,"line_start":261,"line_end":261,"column_start":31,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":14,"index":1355},"to":{"krate":0,"index":1124}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\upgrade.rs","byte_start":107000,"byte_end":107008,"line_start":277,"line_end":277,"column_start":31,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":14,"index":1488},"to":{"krate":0,"index":1124}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15748201,"byte_end":15748205,"line_start":34,"line_end":34,"column_start":15,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15773769,"byte_end":15773773,"line_start":771,"line_end":771,"column_start":35,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15774045,"byte_end":15774049,"line_start":781,"line_end":781,"column_start":32,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15775628,"byte_end":15775633,"line_start":837,"line_end":837,"column_start":21,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15776271,"byte_end":15776278,"line_start":860,"line_end":860,"column_start":21,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1989},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15776668,"byte_end":15776670,"line_start":871,"line_end":871,"column_start":39,"column_end":41},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3030}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15776942,"byte_end":15776944,"line_start":887,"line_end":887,"column_start":18,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15777003,"byte_end":15777005,"line_start":893,"line_end":893,"column_start":6,"column_end":8},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\conn.rs","byte_start":15777246,"byte_end":15777251,"line_start":911,"line_end":911,"column_start":6,"column_end":11},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15796088,"byte_end":15796095,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15799298,"byte_end":15799305,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15799775,"byte_end":15799787,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15807951,"byte_end":15807965,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2822},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\decode.rs","byte_start":15808121,"byte_end":15808135,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2822},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15820698,"byte_end":15820708,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15834139,"byte_end":15834149,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2195},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15834949,"byte_end":15834957,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835201,"byte_end":15835209,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2245},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835370,"byte_end":15835376,"line_start":455,"line_end":455,"column_start":16,"column_end":22},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835758,"byte_end":15835764,"line_start":472,"line_end":472,"column_start":42,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2829},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\dispatch.rs","byte_start":15835804,"byte_end":15835810,"line_start":474,"line_end":474,"column_start":30,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2829},"to":{"krate":0,"index":2205}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15847213,"byte_end":15847220,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15852327,"byte_end":15852337,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2865},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15854016,"byte_end":15854025,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15854362,"byte_end":15854371,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2908},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15854761,"byte_end":15854770,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2908},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855021,"byte_end":15855030,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2908},"to":{"krate":2,"index":8924}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855389,"byte_end":15855399,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855545,"byte_end":15855555,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\encode.rs","byte_start":15855739,"byte_end":15855749,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15859303,"byte_end":15859311,"line_start":42,"line_end":42,"column_start":27,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2416},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15859574,"byte_end":15859582,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15868946,"byte_end":15868954,"line_start":321,"line_end":321,"column_start":29,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2416},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15869188,"byte_end":15869196,"line_start":328,"line_end":328,"column_start":24,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2416},"to":{"krate":0,"index":2458}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15869899,"byte_end":15869911,"line_start":355,"line_end":355,"column_start":6,"column_end":18},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15872156,"byte_end":15872168,"line_start":426,"line_end":426,"column_start":18,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2917},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15872372,"byte_end":15872378,"line_start":438,"line_end":438,"column_start":22,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15872492,"byte_end":15872498,"line_start":445,"line_end":445,"column_start":6,"column_end":12},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15873162,"byte_end":15873168,"line_start":470,"line_end":470,"column_start":37,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15873421,"byte_end":15873427,"line_start":479,"line_end":479,"column_start":30,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2927},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15874096,"byte_end":15874104,"line_start":507,"line_end":507,"column_start":14,"column_end":22},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15874389,"byte_end":15874397,"line_start":518,"line_end":518,"column_start":9,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15876312,"byte_end":15876320,"line_start":579,"line_end":579,"column_start":29,"column_end":37},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2487},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\io.rs","byte_start":15876574,"byte_end":15876582,"line_start":588,"line_end":588,"column_start":22,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2487},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15890369,"byte_end":15890375,"line_start":96,"line_end":96,"column_start":27,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2631},"to":{"krate":0,"index":2693}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15902803,"byte_end":15902809,"line_start":414,"line_end":414,"column_start":6,"column_end":12},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15904040,"byte_end":15904055,"line_start":453,"line_end":453,"column_start":35,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2652},"to":{"krate":0,"index":2674}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15905398,"byte_end":15905412,"line_start":499,"line_end":499,"column_start":35,"column_end":49},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2659},"to":{"krate":0,"index":2674}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\role.rs","byte_start":15941319,"byte_end":15941328,"line_start":1405,"line_end":1405,"column_start":25,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2684},"to":{"krate":2,"index":8924}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h1\\mod.rs","byte_start":15746771,"byte_end":15746776,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15733656,"byte_end":15733662,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15734003,"byte_end":15734011,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15736029,"byte_end":15736035,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15738685,"byte_end":15738691,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15739583,"byte_end":15739586,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15741509,"byte_end":15741518,"line_start":473,"line_end":473,"column_start":6,"column_end":15},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15743870,"byte_end":15743887,"line_start":537,"line_end":537,"column_start":6,"column_end":23},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15744067,"byte_end":15744084,"line_start":544,"line_end":544,"column_start":23,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2977},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\ping.rs","byte_start":15744258,"byte_end":15744275,"line_start":551,"line_end":551,"column_start":28,"column_end":45},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2977},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15980367,"byte_end":15980373,"line_start":50,"line_end":50,"column_start":18,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3176},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15981449,"byte_end":15981455,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15983626,"byte_end":15983632,"line_start":166,"line_end":166,"column_start":29,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5383},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15985299,"byte_end":15985306,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15991946,"byte_end":15991954,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15992663,"byte_end":15992671,"line_start":418,"line_end":418,"column_start":15,"column_end":23},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\server.rs","byte_start":15996980,"byte_end":15996988,"line_start":511,"line_end":511,"column_start":26,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5194},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15716547,"byte_end":15716563,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15716813,"byte_end":15716829,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4937},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15721437,"byte_end":15721447,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"kind":{"Impl":{"id":152}},"from":{"krate":45,"index":8903},"to":{"krate":0,"index":1682}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15722066,"byte_end":15722073,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1691},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15723159,"byte_end":15723169,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1708},"to":{"krate":20,"index":227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15724546,"byte_end":15724556,"line_start":334,"line_end":334,"column_start":24,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1708},"to":{"krate":20,"index":306}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15726858,"byte_end":15726876,"line_start":412,"line_end":412,"column_start":9,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15728104,"byte_end":15728112,"line_start":455,"line_end":455,"column_start":25,"column_end":33},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1736},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\h2\\mod.rs","byte_start":15728136,"byte_end":15728144,"line_start":457,"line_end":457,"column_start":17,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1736},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\proto\\mod.rs","byte_start":15713271,"byte_end":15713282,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004033,"byte_end":16004039,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004077,"byte_end":16004083,"line_start":61,"line_end":61,"column_start":31,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3248},"to":{"krate":0,"index":3239}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\accept.rs","byte_start":16004912,"byte_end":16004922,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4824},"to":{"krate":0,"index":3239}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16012714,"byte_end":16012722,"line_start":238,"line_end":238,"column_start":9,"column_end":17},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16012952,"byte_end":16012960,"line_start":248,"line_end":248,"column_start":19,"column_end":27},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3850},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16013956,"byte_end":16013960,"line_start":277,"line_end":277,"column_start":6,"column_end":10},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16014579,"byte_end":16014583,"line_start":297,"line_end":297,"column_start":9,"column_end":13},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16026983,"byte_end":16026993,"line_start":663,"line_end":663,"column_start":18,"column_end":28},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16033384,"byte_end":16033394,"line_start":833,"line_end":833,"column_start":29,"column_end":39},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4593},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16035174,"byte_end":16035184,"line_start":880,"line_end":880,"column_start":27,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4593},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16035446,"byte_end":16035460,"line_start":892,"line_end":892,"column_start":18,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3836},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16035955,"byte_end":16035960,"line_start":912,"line_end":912,"column_start":15,"column_end":20},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16036517,"byte_end":16036522,"line_start":934,"line_end":934,"column_start":26,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16037800,"byte_end":16037810,"line_start":973,"line_end":973,"column_start":36,"column_end":46},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16038552,"byte_end":16038560,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16038749,"byte_end":16038757,"line_start":1002,"line_end":1002,"column_start":15,"column_end":23},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16038933,"byte_end":16038941,"line_start":1009,"line_end":1009,"column_start":26,"column_end":34},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16040097,"byte_end":16040108,"line_start":1047,"line_end":1047,"column_start":29,"column_end":40},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16041917,"byte_end":16041922,"line_start":1094,"line_end":1094,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2501},"to":{"krate":0,"index":3484}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16042208,"byte_end":16042219,"line_start":1104,"line_end":1104,"column_start":40,"column_end":51},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3875},"to":{"krate":0,"index":3484}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16043854,"byte_end":16043864,"line_start":1152,"line_end":1152,"column_start":62,"column_end":72},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16044184,"byte_end":16044194,"line_start":1163,"line_end":1163,"column_start":43,"column_end":53},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4446},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16046886,"byte_end":16046907,"line_start":1234,"line_end":1234,"column_start":22,"column_end":43},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\conn.rs","byte_start":16047550,"byte_end":16047571,"line_start":1252,"line_end":1252,"column_start":33,"column_end":54},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3516},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16051720,"byte_end":16051726,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16052049,"byte_end":16052055,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16053227,"byte_end":16053233,"line_start":107,"line_end":107,"column_start":16,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16053580,"byte_end":16053586,"line_start":117,"line_end":117,"column_start":26,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16055690,"byte_end":16055696,"line_start":175,"line_end":175,"column_start":37,"column_end":43},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16056411,"byte_end":16056417,"line_start":194,"line_end":194,"column_start":51,"column_end":57},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16056848,"byte_end":16056855,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\server.rs","byte_start":16065675,"byte_end":16065682,"line_start":465,"line_end":465,"column_start":9,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16067992,"byte_end":16068004,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16073181,"byte_end":16073193,"line_start":156,"line_end":156,"column_start":17,"column_end":29},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3665},"to":{"krate":0,"index":3239}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16074117,"byte_end":16074129,"line_start":182,"line_end":182,"column_start":21,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3665},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16075022,"byte_end":16075032,"line_start":213,"line_end":213,"column_start":10,"column_end":20},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16076014,"byte_end":16076024,"line_start":245,"line_end":245,"column_start":24,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3971},"to":{"krate":20,"index":227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\tcp.rs","byte_start":16076305,"byte_end":16076315,"line_start":256,"line_end":256,"column_start":25,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3971},"to":{"krate":20,"index":306}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16078706,"byte_end":16078714,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16079048,"byte_end":16079056,"line_start":50,"line_end":50,"column_start":40,"column_end":48},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hyper-0.14.13\\src\\server\\shutdown.rs","byte_start":16081015,"byte_end":16081030,"line_start":101,"line_end":101,"column_start":36,"column_end":51},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4111},"to":{"krate":0,"index":3484}}]}