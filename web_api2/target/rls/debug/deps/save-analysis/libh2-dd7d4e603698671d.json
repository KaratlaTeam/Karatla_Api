{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6","program":"C:\\Users\\user\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","h2","--edition=2018","C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=dd7d4e603698671d","-C","extra-filename=-dd7d4e603698671d","--out-dir","c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libbytes-4161b9500648fa00.rmeta","--extern","fnv=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libfnv-0110b8852a23be27.rmeta","--extern","futures_core=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libfutures_core-20323f89a6f4b6c3.rmeta","--extern","futures_sink=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libfutures_sink-b0f2881bb2e4bfee.rmeta","--extern","futures_util=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libfutures_util-026481cec80f009b.rmeta","--extern","http=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libhttp-cac382c2728e458b.rmeta","--extern","indexmap=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libindexmap-db75d7e33aa28fcd.rmeta","--extern","slab=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libslab-2410dce0f33ec458.rmeta","--extern","tokio=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libtokio-8237a91d4a30cf8d.rmeta","--extern","tokio_util=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libtokio_util-52af31bbd9a51f51.rmeta","--extern","tracing=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libtracing-397a0aeda2ae269a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\user\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libh2-dd7d4e603698671d.rmeta"},"prelude":{"crate_id":{"name":"h2","disambiguator":[8651642913739284974,0]},"crate_root":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src","external_crates":[{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":14,"id":{"name":"futures_core","disambiguator":[16838258535136094744,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":15,"id":{"name":"bytes","disambiguator":[549654222157474692,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":16,"id":{"name":"tokio","disambiguator":[7841886709239122583,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":17,"id":{"name":"winapi","disambiguator":[8126687792582974682,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":18,"id":{"name":"mio","disambiguator":[17026816046084476668,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":19,"id":{"name":"log","disambiguator":[17020753373162443929,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":20,"id":{"name":"cfg_if","disambiguator":[7732148652154790736,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":21,"id":{"name":"ntapi","disambiguator":[5929914477157928238,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":22,"id":{"name":"miow","disambiguator":[11511738611527175885,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[10586119047165815971,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":24,"id":{"name":"once_cell","disambiguator":[15337698671572308192,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":25,"id":{"name":"tokio_macros","disambiguator":[6012102819735055328,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":26,"id":{"name":"memchr","disambiguator":[9035836420829874224,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":27,"id":{"name":"num_cpus","disambiguator":[11995639312194757406,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","num":28,"id":{"name":"tokio_util","disambiguator":[14867998725458552921,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","num":29,"id":{"name":"futures_sink","disambiguator":[48776870732375571,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","num":30,"id":{"name":"http","disambiguator":[110415443265173158,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\table.rs","num":31,"id":{"name":"fnv","disambiguator":[8046180949733103625,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","num":32,"id":{"name":"itoa","disambiguator":[1745848547741817249,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","num":33,"id":{"name":"futures_util","disambiguator":[9364704969286931415,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","num":34,"id":{"name":"pin_utils","disambiguator":[360942777902623877,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","num":35,"id":{"name":"futures_macro","disambiguator":[14137178926558510526,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","num":36,"id":{"name":"futures_task","disambiguator":[13178339737029359358,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","num":37,"id":{"name":"futures_channel","disambiguator":[13090046896581047596,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\buffer.rs","num":38,"id":{"name":"slab","disambiguator":[5917668779826069366,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","num":39,"id":{"name":"futures_io","disambiguator":[12038930439685879639,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","num":40,"id":{"name":"indexmap","disambiguator":[14539698057437134657,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","num":41,"id":{"name":"serde","disambiguator":[17827007215290515939,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","num":42,"id":{"name":"serde_derive","disambiguator":[6391162463382174000,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","num":43,"id":{"name":"hashbrown","disambiguator":[2857646572598512741,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","num":44,"id":{"name":"tracing","disambiguator":[2451708749243704997,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","num":45,"id":{"name":"tracing_core","disambiguator":[13799962986314724348,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","num":46,"id":{"name":"lazy_static","disambiguator":[13056093452633543229,0]}}],"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":5994,"line_start":1,"line_end":175,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4498,"byte_end":4503,"line_start":130,"line_end":130,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8193},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4505,"byte_end":4511,"line_start":130,"line_end":130,"column_start":31,"column_end":37},"alias_span":null,"name":"Reason","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8926},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4537,"byte_end":4548,"line_start":131,"line_end":131,"column_start":24,"column_end":35},"alias_span":null,"name":"FlowControl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4550,"byte_end":4554,"line_start":131,"line_end":131,"column_start":37,"column_end":41},"alias_span":null,"name":"Ping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4556,"byte_end":4564,"line_start":131,"line_end":131,"column_start":43,"column_end":51},"alias_span":null,"name":"PingPong","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4566,"byte_end":4570,"line_start":131,"line_end":131,"column_start":53,"column_end":57},"alias_span":null,"name":"Pong","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4572,"byte_end":4582,"line_start":131,"line_end":131,"column_start":59,"column_end":69},"alias_span":null,"name":"RecvStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8903},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4584,"byte_end":4594,"line_start":131,"line_end":131,"column_start":71,"column_end":81},"alias_span":null,"name":"SendStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8909},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4596,"byte_end":4604,"line_start":131,"line_end":131,"column_start":83,"column_end":91},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":5994,"line_start":1,"line_end":175,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":5},{"krate":0,"index":322},{"krate":0,"index":376},{"krate":0,"index":731},{"krate":0,"index":2198},{"krate":0,"index":2901},{"krate":0,"index":3110},{"krate":0,"index":3394},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3536}],"decl_id":null,"docs":" An asynchronous, HTTP/2.0 server and client implementation.","sig":null,"attributes":[{"value":"/ An asynchronous, HTTP/2.0 server and client implementation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":63,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":64,"byte_end":67,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library implements the [HTTP/2.0] specification. The implementation is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":68,"byte_end":147,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ asynchronous, using [futures] as the basis for the API. The implementation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":148,"byte_end":226,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ is also decoupled from TCP or TLS details. The user must handle ALPN and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":227,"byte_end":303,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ HTTP/1.1 upgrades themselves.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":304,"byte_end":337,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":338,"byte_end":341,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":342,"byte_end":363,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":364,"byte_end":367,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Add the following to your `Cargo.toml` file:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":368,"byte_end":416,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":417,"byte_end":420,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":421,"byte_end":432,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":433,"byte_end":451,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ h2 = \"0.3\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":452,"byte_end":466,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":467,"byte_end":474,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":475,"byte_end":478,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Layout","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":479,"byte_end":491,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":492,"byte_end":495,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The crate is split into [`client`] and [`server`] modules. Types that are","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":496,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ common to both clients and servers are located at the root of the crate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":574,"byte_end":650,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":651,"byte_end":654,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See module level documentation for more details on how to use `h2`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":655,"byte_end":726,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":727,"byte_end":730,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":731,"byte_end":746,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":747,"byte_end":750,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Both the client and the server require a connection to already be in a state","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":751,"byte_end":831,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ ready to start the HTTP/2.0 handshake. This library does not provide","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":832,"byte_end":904,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ facilities to do this.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":905,"byte_end":931,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":932,"byte_end":935,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ There are three ways to reach an appropriate state to start the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":936,"byte_end":1012,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1013,"byte_end":1027,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1028,"byte_end":1031,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * Opening an HTTP/1.1 connection and performing an [upgrade].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1032,"byte_end":1097,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ * Opening a connection with TLS and use ALPN to negotiate the protocol.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1098,"byte_end":1173,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ * Open a connection with prior knowledge, i.e. both the client and the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1174,"byte_end":1248,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/   server assume that the connection is immediately ready to start the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1249,"byte_end":1322,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/   HTTP/2.0 handshake once opened.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1323,"byte_end":1360,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1361,"byte_end":1364,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Once the connection is ready to start the HTTP/2.0 handshake, it can be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1365,"byte_end":1440,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ passed to [`server::handshake`] or [`client::handshake`]. At this point, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1441,"byte_end":1521,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ library will start the handshake process, which consists of:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1522,"byte_end":1586,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1587,"byte_end":1590,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ * The client sends the connection preface (a predefined sequence of 24","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1591,"byte_end":1665,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ octets).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1666,"byte_end":1678,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ * Both the client and the server sending a SETTINGS frame.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1679,"byte_end":1741,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1742,"byte_end":1745,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ See the [Starting HTTP/2] in the specification for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1746,"byte_end":1814,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1815,"byte_end":1818,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Flow control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1819,"byte_end":1837,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1838,"byte_end":1841,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [Flow control] is a fundamental feature of HTTP/2.0. The `h2` library","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1842,"byte_end":1915,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ exposes flow control to the user.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1916,"byte_end":1953,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1954,"byte_end":1957,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ An HTTP/2.0 client or server may not send unlimited data to the peer. When a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":1958,"byte_end":2038,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ stream is initiated, both the client and the server are provided with an","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2039,"byte_end":2115,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ initial window size for that stream.  A window size is the number of bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2116,"byte_end":2194,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ the endpoint can send to the peer. At any point in time, the peer may","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2195,"byte_end":2268,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ increase this window size by sending a `WINDOW_UPDATE` frame. Once a client","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2269,"byte_end":2348,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ or server has sent data filling the window for a stream, no further data may","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2349,"byte_end":2429,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ be sent on that stream until the peer increases the window.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2430,"byte_end":2493,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2494,"byte_end":2497,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ There is also a **connection level** window governing data sent across all","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2498,"byte_end":2576,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2577,"byte_end":2589,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2590,"byte_end":2593,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Managing flow control for inbound data is done through [`FlowControl`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2594,"byte_end":2669,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Managing flow control for outbound data is done through [`SendStream`]. See","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2670,"byte_end":2749,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ the struct level documentation for those two types for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2750,"byte_end":2822,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2823,"byte_end":2826,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2.0]: https://http2.github.io/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2827,"byte_end":2867,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ [futures]: https://docs.rs/futures/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2868,"byte_end":2907,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ [`client`]: client/index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2908,"byte_end":2941,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/ [`server`]: server/index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2942,"byte_end":2975,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/ [Flow control]: http://httpwg.org/specs/rfc7540.html#FlowControl","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":2976,"byte_end":3044,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ [`FlowControl`]: struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":3045,"byte_end":3089,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ [`SendStream`]: struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":3090,"byte_end":3132,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ [Starting HTTP/2]: http://httpwg.org/specs/rfc7540.html#starting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":3133,"byte_end":3201,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/ [upgrade]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":3202,"byte_end":3293,"line_start":77,"line_end":77,"column_start":1,"column_end":92}},{"value":"/ [`server::handshake`]: server/fn.handshake.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":3294,"byte_end":3345,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/ [`client::handshake`]: client/fn.handshake.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":3346,"byte_end":3397,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"deny(missing_debug_implementations, missing_docs)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":3451,"byte_end":3504,"line_start":82,"line_end":82,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":11949,"byte_end":11959,"line_start":8,"line_end":8,"column_start":5,"column_end":15},"name":"Connection","qualname":"::codec::error::SendError::Connection","value":"SendError::Connection(Error)","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":11972,"byte_end":11976,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"User","qualname":"::codec::error::SendError::User","value":"SendError::User(UserError)","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":11933,"byte_end":11942,"line_start":7,"line_end":7,"column_start":10,"column_end":19},"name":"SendError","qualname":"::codec::error::SendError","value":"pub enum SendError { Connection(Error), User(UserError), }","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3549}],"decl_id":null,"docs":" Errors caused by sending a message\n","sig":null,"attributes":[{"value":"/ Errors caused by sending a message","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":11868,"byte_end":11906,"line_start":5,"line_end":5,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12129,"byte_end":12145,"line_start":16,"line_end":16,"column_start":5,"column_end":21},"name":"InactiveStreamId","qualname":"::codec::error::UserError::InactiveStreamId","value":"UserError::InactiveStreamId","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" The stream ID is no longer accepting frames.\n","sig":null,"attributes":[{"value":"/ The stream ID is no longer accepting frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12076,"byte_end":12124,"line_start":15,"line_end":15,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12220,"byte_end":12239,"line_start":19,"line_end":19,"column_start":5,"column_end":24},"name":"UnexpectedFrameType","qualname":"::codec::error::UserError::UnexpectedFrameType","value":"UserError::UnexpectedFrameType","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" The stream is not currently expecting a frame of this type.\n","sig":null,"attributes":[{"value":"/ The stream is not currently expecting a frame of this type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12152,"byte_end":12215,"line_start":18,"line_end":18,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12282,"byte_end":12295,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"PayloadTooBig","qualname":"::codec::error::UserError::PayloadTooBig","value":"UserError::PayloadTooBig","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" The payload size is too big\n","sig":null,"attributes":[{"value":"/ The payload size is too big","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12246,"byte_end":12277,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12376,"byte_end":12384,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Rejected","qualname":"::codec::error::UserError::Rejected","value":"UserError::Rejected","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" The application attempted to initiate too many streams to remote.\n","sig":null,"attributes":[{"value":"/ The application attempted to initiate too many streams to remote.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12302,"byte_end":12371,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12454,"byte_end":12475,"line_start":28,"line_end":28,"column_start":5,"column_end":26},"name":"ReleaseCapacityTooBig","qualname":"::codec::error::UserError::ReleaseCapacityTooBig","value":"UserError::ReleaseCapacityTooBig","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" The released capacity is larger than claimed capacity.\n","sig":null,"attributes":[{"value":"/ The released capacity is larger than claimed capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12391,"byte_end":12449,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12569,"byte_end":12587,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"name":"OverflowedStreamId","qualname":"::codec::error::UserError::OverflowedStreamId","value":"UserError::OverflowedStreamId","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" The stream ID space is overflowed.","sig":null,"attributes":[{"value":"/ The stream ID space is overflowed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12482,"byte_end":12520,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12525,"byte_end":12528,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ A new connection is needed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12533,"byte_end":12564,"line_start":32,"line_end":32,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3567},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12656,"byte_end":12672,"line_start":36,"line_end":36,"column_start":5,"column_end":21},"name":"MalformedHeaders","qualname":"::codec::error::UserError::MalformedHeaders","value":"UserError::MalformedHeaders","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" Illegal headers, such as connection-specific headers.\n","sig":null,"attributes":[{"value":"/ Illegal headers, such as connection-specific headers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12594,"byte_end":12651,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3569},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12724,"byte_end":12752,"line_start":39,"line_end":39,"column_start":5,"column_end":33},"name":"MissingUriSchemeAndAuthority","qualname":"::codec::error::UserError::MissingUriSchemeAndAuthority","value":"UserError::MissingUriSchemeAndAuthority","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" Request submitted with relative URI.\n","sig":null,"attributes":[{"value":"/ Request submitted with relative URI.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12679,"byte_end":12719,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12837,"byte_end":12863,"line_start":42,"line_end":42,"column_start":5,"column_end":31},"name":"PollResetAfterSendResponse","qualname":"::codec::error::UserError::PollResetAfterSendResponse","value":"UserError::PollResetAfterSendResponse","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" Calls `SendResponse::poll_reset` after having called `send_response`.\n","sig":null,"attributes":[{"value":"/ Calls `SendResponse::poll_reset` after having called `send_response`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12759,"byte_end":12832,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12931,"byte_end":12951,"line_start":45,"line_end":45,"column_start":5,"column_end":25},"name":"SendPingWhilePending","qualname":"::codec::error::UserError::SendPingWhilePending","value":"UserError::SendPingWhilePending","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" Calls `PingPong::send_ping` before receiving a pong.\n","sig":null,"attributes":[{"value":"/ Calls `PingPong::send_ping` before receiving a pong.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12870,"byte_end":12926,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3575},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13030,"byte_end":13054,"line_start":48,"line_end":48,"column_start":5,"column_end":29},"name":"SendSettingsWhilePending","qualname":"::codec::error::UserError::SendSettingsWhilePending","value":"UserError::SendSettingsWhilePending","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" Tries to update local SETTINGS while ACK has not been received.\n","sig":null,"attributes":[{"value":"/ Tries to update local SETTINGS while ACK has not been received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12958,"byte_end":13025,"line_start":47,"line_end":47,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13133,"byte_end":13155,"line_start":51,"line_end":51,"column_start":5,"column_end":27},"name":"PeerDisabledServerPush","qualname":"::codec::error::UserError::PeerDisabledServerPush","value":"UserError::PeerDisabledServerPush","parent":{"krate":0,"index":3554},"children":[],"decl_id":null,"docs":" Tries to send push promise to peer who has disabled server push\n","sig":null,"attributes":[{"value":"/ Tries to send push promise to peer who has disabled server push","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13061,"byte_end":13128,"line_start":50,"line_end":50,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":12060,"byte_end":12069,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"UserError","qualname":"::codec::error::UserError","value":"pub enum UserError {\n    InactiveStreamId,\n    UnexpectedFrameType,\n    PayloadTooBig,\n    Rejected,\n    ReleaseCapacityTooBig,\n    OverflowedStreamId,\n    MalformedHeaders,\n    MissingUriSchemeAndAuthority,\n    PollResetAfterSendResponse,\n    SendPingWhilePending,\n    SendSettingsWhilePending,\n    PeerDisabledServerPush,\n}","parent":null,"children":[{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3563},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":3571},{"krate":0,"index":3573},{"krate":0,"index":3575},{"krate":0,"index":3577}],"decl_id":null,"docs":" Errors caused by users of the library\n","sig":null,"attributes":[{"value":"/ Errors caused by users of the library","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":11992,"byte_end":12033,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41414,"byte_end":41419,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":4320}],"decl_id":null,"docs":" Represents HTTP/2.0 operation errors.","sig":null,"attributes":[{"value":"/ Represents HTTP/2.0 operation errors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":40977,"byte_end":41018,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41019,"byte_end":41022,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `Error` covers error cases raised by protocol errors caused by the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41023,"byte_end":41093,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ peer, I/O (transport) errors, and errors caused by the user of the library.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41094,"byte_end":41173,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41174,"byte_end":41177,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If the error was caused by the remote peer, then it will contain a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41178,"byte_end":41248,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ [`Reason`] which can be obtained with the [`reason`] function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41249,"byte_end":41315,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41316,"byte_end":41319,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Reason`]: struct.Reason.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41320,"byte_end":41354,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ [`reason`]: #method.reason","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41355,"byte_end":41385,"line_start":19,"line_end":19,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42184,"byte_end":42190,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"reason","qualname":"<Error>::reason","value":"pub fn reason(&Self) -> Option<Reason>","parent":null,"children":[],"decl_id":null,"docs":" If the error was caused by the remote peer, the error reason.","sig":null,"attributes":[{"value":"/ If the error was caused by the remote peer, the error reason.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41964,"byte_end":42029,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42034,"byte_end":42037,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This is either an error received by the peer or caused by an invalid","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42042,"byte_end":42114,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ action taken by the peer (i.e. a protocol error).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42119,"byte_end":42172,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42487,"byte_end":42492,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"is_io","qualname":"<Error>::is_io","value":"pub fn is_io(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the true if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the true if the error is an io::Error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42426,"byte_end":42475,"line_start":60,"line_end":60,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42676,"byte_end":42682,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"get_io","qualname":"<Error>::get_io","value":"pub fn get_io(&Self) -> Option<&io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the error if the error is an io::Error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42614,"byte_end":42664,"line_start":68,"line_end":68,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42886,"byte_end":42893,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"into_io","qualname":"<Error>::into_io","value":"pub fn into_io(Self) -> Option<io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the error if the error is an io::Error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":42824,"byte_end":42874,"line_start":76,"line_end":76,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5075},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264246,"byte_end":264251,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Reset","qualname":"::proto::error::Error::Reset","value":"Error::Reset(StreamId, Reason, Initiator)","parent":{"krate":0,"index":5074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5080},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264286,"byte_end":264292,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"GoAway","qualname":"::proto::error::Error::GoAway","value":"Error::GoAway(Bytes, Reason, Initiator)","parent":{"krate":0,"index":5074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5085},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264324,"byte_end":264326,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"Io","qualname":"::proto::error::Error::Io","value":"Error::Io(io::ErrorKind, Option<String>)","parent":{"krate":0,"index":5074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5074},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264234,"byte_end":264239,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::proto::error::Error","value":"pub enum Error {\n    Reset(StreamId, Reason, Initiator),\n    GoAway(Bytes, Reason, Initiator),\n    Io(io::ErrorKind, Option<String>),\n}","parent":null,"children":[{"krate":0,"index":5075},{"krate":0,"index":5080},{"krate":0,"index":5085}],"decl_id":null,"docs":" Either an H2 reason  or an I/O error\n","sig":null,"attributes":[{"value":"/ Either an H2 reason  or an I/O error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264160,"byte_end":264200,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5094},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264428,"byte_end":264432,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"User","qualname":"::proto::error::Initiator::User","value":"Initiator::User","parent":{"krate":0,"index":5093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5096},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264438,"byte_end":264445,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Library","qualname":"::proto::error::Initiator::Library","value":"Initiator::Library","parent":{"krate":0,"index":5093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5098},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264451,"byte_end":264457,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Remote","qualname":"::proto::error::Initiator::Remote","value":"Initiator::Remote","parent":{"krate":0,"index":5093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264412,"byte_end":264421,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"Initiator","qualname":"::proto::error::Initiator","value":"pub enum Initiator { User, Library, Remote, }","parent":null,"children":[{"krate":0,"index":5094},{"krate":0,"index":5096},{"krate":0,"index":5098}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\peer.rs","byte_start":271455,"byte_end":271459,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Poll","qualname":"::proto::peer::Peer::Poll","value":"type Poll: fmt::Debug;","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":" Message type polled from the transport\n","sig":null,"attributes":[{"value":"/ Message type polled from the transport","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\peer.rs","byte_start":271403,"byte_end":271445,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5498},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303506,"byte_end":303512,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"Window","qualname":"::proto::streams::flow_control::Window","value":"","parent":null,"children":[],"decl_id":null,"docs":" The current capacity of a flow-controlled Window.","sig":null,"attributes":[{"value":"/ The current capacity of a flow-controlled Window.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303084,"byte_end":303137,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303138,"byte_end":303141,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This number can go negative when either side has used a certain amount","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303142,"byte_end":303216,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ of capacity when the other side advertises a reduction in size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303217,"byte_end":303284,"line_start":187,"line_end":187,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303285,"byte_end":303288,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This type tries to centralize the knowledge of addition and subtraction","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303289,"byte_end":303364,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"/ to this capacity, instead of having integer casts throughout the source.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303365,"byte_end":303441,"line_start":190,"line_end":190,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303545,"byte_end":303552,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"as_size","qualname":"<Window>::as_size","value":"pub fn as_size(&Self) -> WindowSize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303692,"byte_end":303704,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"checked_size","qualname":"<Window>::checked_size","value":"pub fn checked_size(&Self) -> WindowSize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7708},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":499020,"byte_end":499031,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"HeadersFlag","qualname":"::frame::headers::HeadersFlag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7733},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":499448,"byte_end":499463,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"name":"PushPromiseFlag","qualname":"::frame::headers::PushPromiseFlag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516369,"byte_end":516374,"line_start":691,"line_end":691,"column_start":12,"column_end":17},"name":"empty","qualname":"<HeadersFlag>::empty","value":"pub fn empty() -> HeadersFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516435,"byte_end":516439,"line_start":695,"line_end":695,"column_start":12,"column_end":16},"name":"load","qualname":"<HeadersFlag>::load","value":"pub fn load(u8) -> HeadersFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516517,"byte_end":516530,"line_start":699,"line_end":699,"column_start":12,"column_end":25},"name":"is_end_stream","qualname":"<HeadersFlag>::is_end_stream","value":"pub fn is_end_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516608,"byte_end":516622,"line_start":703,"line_end":703,"column_start":12,"column_end":26},"name":"set_end_stream","qualname":"<HeadersFlag>::set_end_stream","value":"pub fn set_end_stream(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516684,"byte_end":516698,"line_start":707,"line_end":707,"column_start":12,"column_end":26},"name":"is_end_headers","qualname":"<HeadersFlag>::is_end_headers","value":"pub fn is_end_headers(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516778,"byte_end":516793,"line_start":711,"line_end":711,"column_start":12,"column_end":27},"name":"set_end_headers","qualname":"<HeadersFlag>::set_end_headers","value":"pub fn set_end_headers(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516856,"byte_end":516865,"line_start":715,"line_end":715,"column_start":12,"column_end":21},"name":"is_padded","qualname":"<HeadersFlag>::is_padded","value":"pub fn is_padded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516935,"byte_end":516946,"line_start":719,"line_end":719,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<HeadersFlag>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517720,"byte_end":517725,"line_start":751,"line_end":751,"column_start":12,"column_end":17},"name":"empty","qualname":"<PushPromiseFlag>::empty","value":"pub fn empty() -> PushPromiseFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517794,"byte_end":517798,"line_start":755,"line_end":755,"column_start":12,"column_end":16},"name":"load","qualname":"<PushPromiseFlag>::load","value":"pub fn load(u8) -> PushPromiseFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517884,"byte_end":517898,"line_start":759,"line_end":759,"column_start":12,"column_end":26},"name":"is_end_headers","qualname":"<PushPromiseFlag>::is_end_headers","value":"pub fn is_end_headers(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517978,"byte_end":517993,"line_start":763,"line_end":763,"column_start":12,"column_end":27},"name":"set_end_headers","qualname":"<PushPromiseFlag>::set_end_headers","value":"pub fn set_end_headers(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":518056,"byte_end":518065,"line_start":767,"line_end":767,"column_start":12,"column_end":21},"name":"is_padded","qualname":"<PushPromiseFlag>::is_padded","value":"pub fn is_padded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8193},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531686,"byte_end":531692,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Reason","qualname":"::frame::reason::Reason","value":"","parent":null,"children":[],"decl_id":null,"docs":" HTTP/2.0 error codes.","sig":null,"attributes":[{"value":"/ HTTP/2.0 error codes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":530982,"byte_end":531007,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531008,"byte_end":531011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Error codes are used in `RST_STREAM` and `GOAWAY` frames to convey the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531012,"byte_end":531086,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ reasons for the stream or connection error. For example,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531087,"byte_end":531147,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ [`SendStream::send_reset`] takes a `Reason` argument. Also, the `Error` type","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531148,"byte_end":531228,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ may contain a `Reason`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531229,"byte_end":531256,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531257,"byte_end":531260,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Error codes share a common code space. Some error codes apply only to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531261,"byte_end":531334,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ streams, others apply only to connections, and others may apply to either.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531335,"byte_end":531413,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ See [RFC 7540] for more information.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531414,"byte_end":531454,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531455,"byte_end":531458,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [Error Codes in the spec][spec].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531459,"byte_end":531499,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531500,"byte_end":531503,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [spec]: http://httpwg.org/specs/rfc7540.html#ErrorCodes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531504,"byte_end":531563,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ [`SendStream::send_reset`]: struct.SendStream.html#method.send_reset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531564,"byte_end":531636,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531907,"byte_end":531915,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"NO_ERROR","qualname":"::frame::reason::Reason::NO_ERROR","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The associated condition is not a result of an error.","sig":null,"attributes":[{"value":"/ The associated condition is not a result of an error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531718,"byte_end":531775,"line_start":22,"line_end":22,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531780,"byte_end":531783,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For example, a GOAWAY might include this code to indicate graceful","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531788,"byte_end":531858,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ shutdown of a connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531863,"byte_end":531892,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532099,"byte_end":532113,"line_start":30,"line_end":30,"column_start":15,"column_end":29},"name":"PROTOCOL_ERROR","qualname":"::frame::reason::Reason::PROTOCOL_ERROR","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint detected an unspecific protocol error.","sig":null,"attributes":[{"value":"/ The endpoint detected an unspecific protocol error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531941,"byte_end":531996,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532001,"byte_end":532004,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This error is for use when a more specific error code is not available.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532009,"byte_end":532084,"line_start":29,"line_end":29,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532212,"byte_end":532226,"line_start":32,"line_end":32,"column_start":15,"column_end":29},"name":"INTERNAL_ERROR","qualname":"::frame::reason::Reason::INTERNAL_ERROR","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint encountered an unexpected internal error.\n","sig":null,"attributes":[{"value":"/ The endpoint encountered an unexpected internal error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532139,"byte_end":532197,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532342,"byte_end":532360,"line_start":34,"line_end":34,"column_start":15,"column_end":33},"name":"FLOW_CONTROL_ERROR","qualname":"::frame::reason::Reason::FLOW_CONTROL_ERROR","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint detected that its peer violated the flow-control protocol.\n","sig":null,"attributes":[{"value":"/ The endpoint detected that its peer violated the flow-control protocol.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532252,"byte_end":532327,"line_start":33,"line_end":33,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532498,"byte_end":532514,"line_start":37,"line_end":37,"column_start":15,"column_end":31},"name":"SETTINGS_TIMEOUT","qualname":"::frame::reason::Reason::SETTINGS_TIMEOUT","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint sent a SETTINGS frame but did not receive a response in\n a timely manner.\n","sig":null,"attributes":[{"value":"/ The endpoint sent a SETTINGS frame but did not receive a response in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532386,"byte_end":532458,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ a timely manner.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532463,"byte_end":532483,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532620,"byte_end":532633,"line_start":39,"line_end":39,"column_start":15,"column_end":28},"name":"STREAM_CLOSED","qualname":"::frame::reason::Reason::STREAM_CLOSED","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint received a frame after a stream was half-closed.\n","sig":null,"attributes":[{"value":"/ The endpoint received a frame after a stream was half-closed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532540,"byte_end":532605,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532729,"byte_end":532745,"line_start":41,"line_end":41,"column_start":15,"column_end":31},"name":"FRAME_SIZE_ERROR","qualname":"::frame::reason::Reason::FRAME_SIZE_ERROR","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint received a frame with an invalid size.\n","sig":null,"attributes":[{"value":"/ The endpoint received a frame with an invalid size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532659,"byte_end":532714,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532877,"byte_end":532891,"line_start":44,"line_end":44,"column_start":15,"column_end":29},"name":"REFUSED_STREAM","qualname":"::frame::reason::Reason::REFUSED_STREAM","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint refused the stream prior to performing any application\n processing.\n","sig":null,"attributes":[{"value":"/ The endpoint refused the stream prior to performing any application","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532771,"byte_end":532842,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ processing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532847,"byte_end":532862,"line_start":43,"line_end":43,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533005,"byte_end":533011,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"name":"CANCEL","qualname":"::frame::reason::Reason::CANCEL","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Used by the endpoint to indicate that the stream is no longer needed.\n","sig":null,"attributes":[{"value":"/ Used by the endpoint to indicate that the stream is no longer needed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":532917,"byte_end":532990,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533149,"byte_end":533166,"line_start":49,"line_end":49,"column_start":15,"column_end":32},"name":"COMPRESSION_ERROR","qualname":"::frame::reason::Reason::COMPRESSION_ERROR","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint is unable to maintain the header compression context for\n the connection.\n","sig":null,"attributes":[{"value":"/ The endpoint is unable to maintain the header compression context for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533037,"byte_end":533110,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ the connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533115,"byte_end":533134,"line_start":48,"line_end":48,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533310,"byte_end":533323,"line_start":52,"line_end":52,"column_start":15,"column_end":28},"name":"CONNECT_ERROR","qualname":"::frame::reason::Reason::CONNECT_ERROR","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The connection established in response to a CONNECT request was reset\n or abnormally closed.\n","sig":null,"attributes":[{"value":"/ The connection established in response to a CONNECT request was reset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533192,"byte_end":533265,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ or abnormally closed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533270,"byte_end":533295,"line_start":51,"line_end":51,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533478,"byte_end":533495,"line_start":55,"line_end":55,"column_start":15,"column_end":32},"name":"ENHANCE_YOUR_CALM","qualname":"::frame::reason::Reason::ENHANCE_YOUR_CALM","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint detected that its peer is exhibiting a behavior that might\n be generating excessive load.\n","sig":null,"attributes":[{"value":"/ The endpoint detected that its peer is exhibiting a behavior that might","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533350,"byte_end":533425,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ be generating excessive load.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533430,"byte_end":533463,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533636,"byte_end":533655,"line_start":58,"line_end":58,"column_start":15,"column_end":34},"name":"INADEQUATE_SECURITY","qualname":"::frame::reason::Reason::INADEQUATE_SECURITY","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The underlying transport has properties that do not meet minimum\n security requirements.\n","sig":null,"attributes":[{"value":"/ The underlying transport has properties that do not meet minimum","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533522,"byte_end":533590,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ security requirements.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533595,"byte_end":533621,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":2600},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533763,"byte_end":533780,"line_start":60,"line_end":60,"column_start":15,"column_end":32},"name":"HTTP_1_1_REQUIRED","qualname":"::frame::reason::Reason::HTTP_1_1_REQUIRED","value":"Reason","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" The endpoint requires that HTTP/1.1 be used instead of HTTP/2.\n","sig":null,"attributes":[{"value":"/ The endpoint requires that HTTP/1.1 be used instead of HTTP/2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533682,"byte_end":533748,"line_start":59,"line_end":59,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533867,"byte_end":533878,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"description","qualname":"<Reason>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get a string description of the error code.\n","sig":null,"attributes":[{"value":"/ Get a string description of the error code.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":533808,"byte_end":533855,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8277},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":538268,"byte_end":538281,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"SettingsFlags","qualname":"::frame::settings::SettingsFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547155,"byte_end":547160,"line_start":335,"line_end":335,"column_start":12,"column_end":17},"name":"empty","qualname":"<SettingsFlags>::empty","value":"pub fn empty() -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547225,"byte_end":547229,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"load","qualname":"<SettingsFlags>::load","value":"pub fn load(u8) -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547311,"byte_end":547314,"line_start":343,"line_end":343,"column_start":12,"column_end":15},"name":"ack","qualname":"<SettingsFlags>::ack","value":"pub fn ack() -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547381,"byte_end":547387,"line_start":347,"line_end":347,"column_start":12,"column_end":18},"name":"is_ack","qualname":"<SettingsFlags>::is_ack","value":"pub fn is_ack(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8340},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548361,"byte_end":548369,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::frame::stream_id::StreamId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream identifier, as described in [Section 5.1.1] of RFC 7540.","sig":null,"attributes":[{"value":"/ A stream identifier, as described in [Section 5.1.1] of RFC 7540.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":547760,"byte_end":547829,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":547830,"byte_end":547833,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Streams are identified with an unsigned 31-bit integer. Streams","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":547834,"byte_end":547901,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ initiated by a client MUST use odd-numbered stream identifiers; those","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":547902,"byte_end":547975,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ initiated by the server MUST use even-numbered stream identifiers.  A","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":547976,"byte_end":548049,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ stream identifier of zero (0x0) is used for connection control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548050,"byte_end":548116,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ messages; the stream identifier of zero cannot be used to establish a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548117,"byte_end":548190,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ new stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548191,"byte_end":548206,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548207,"byte_end":548210,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [Section 5.1.1]: https://tools.ietf.org/html/rfc7540#section-5.1.1","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548211,"byte_end":548281,"line_start":12,"line_end":12,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8362},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548418,"byte_end":548434,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"StreamIdOverflow","qualname":"::frame::stream_id::StreamIdOverflow","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548526,"byte_end":548530,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::frame::stream_id::StreamId::ZERO","value":"StreamId","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Stream ID 0.\n","sig":null,"attributes":[{"value":"/ Stream ID 0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548495,"byte_end":548511,"line_start":22,"line_end":22,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548610,"byte_end":548613,"line_start":26,"line_end":26,"column_start":15,"column_end":18},"name":"MAX","qualname":"::frame::stream_id::StreamId::MAX","value":"StreamId","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" The maximum allowed stream ID.\n","sig":null,"attributes":[{"value":"/ The maximum allowed stream ID.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548561,"byte_end":548595,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548705,"byte_end":548710,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"parse","qualname":"<StreamId>::parse","value":"pub fn parse(&[u8]) -> (StreamId, bool)","parent":null,"children":[],"decl_id":null,"docs":" Parse the stream ID\n","sig":null,"attributes":[{"value":"/ Parse the stream ID","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548656,"byte_end":548679,"line_start":28,"line_end":28,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548684,"byte_end":548693,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549221,"byte_end":549240,"line_start":43,"line_end":43,"column_start":12,"column_end":31},"name":"is_client_initiated","qualname":"<StreamId>::is_client_initiated","value":"pub fn is_client_initiated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID corresponds to a stream that\n was initiated by the client.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID corresponds to a stream that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549109,"byte_end":549172,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/ was initiated by the client.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549177,"byte_end":549209,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549437,"byte_end":549456,"line_start":50,"line_end":50,"column_start":12,"column_end":31},"name":"is_server_initiated","qualname":"<StreamId>::is_server_initiated","value":"pub fn is_server_initiated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID corresponds to a stream that\n was initiated by the server.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID corresponds to a stream that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549325,"byte_end":549388,"line_start":48,"line_end":48,"column_start":5,"column_end":68}},{"value":"/ was initiated by the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549393,"byte_end":549425,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549608,"byte_end":549612,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"zero","qualname":"<StreamId>::zero","value":"pub fn zero() -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Return a new `StreamId` for stream 0.\n","sig":null,"attributes":[{"value":"/ Return a new `StreamId` for stream 0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549541,"byte_end":549582,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549587,"byte_end":549596,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549718,"byte_end":549725,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<StreamId>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID is zero.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID is zero.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549663,"byte_end":549706,"line_start":61,"line_end":61,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549949,"byte_end":549956,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"next_id","qualname":"<StreamId>::next_id","value":"pub fn next_id(&Self) -> Result<StreamId, StreamIdOverflow>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next stream ID initiated by the same peer as this stream\n ID, or an error if incrementing this stream ID would overflow the\n maximum.\n","sig":null,"attributes":[{"value":"/ Returns the next stream ID initiated by the same peer as this stream","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549774,"byte_end":549846,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ ID, or an error if incrementing this stream ID would overflow the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549851,"byte_end":549920,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ maximum.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":549925,"byte_end":549937,"line_start":68,"line_end":68,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2916},{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":3000},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3009},{"krate":0,"index":8473},{"krate":0,"index":8476},{"krate":0,"index":3013},{"krate":0,"index":8479},{"krate":0,"index":8482},{"krate":0,"index":8484},{"krate":0,"index":8486},{"krate":0,"index":8488},{"krate":0,"index":8491},{"krate":0,"index":8493},{"krate":0,"index":8495},{"krate":0,"index":8497},{"krate":0,"index":8504},{"krate":0,"index":8506},{"krate":0,"index":8508},{"krate":0,"index":8510},{"krate":0,"index":3017},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3033},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3054},{"krate":0,"index":3058},{"krate":0,"index":3069},{"krate":0,"index":3074},{"krate":0,"index":3078},{"krate":0,"index":3081},{"krate":0,"index":3084},{"krate":0,"index":3090},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3104}],"decl_id":null,"docs":" Client implementation of the HTTP/2.0 protocol.","sig":null,"attributes":[{"value":"/ Client implementation of the HTTP/2.0 protocol.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554394,"byte_end":554445,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554446,"byte_end":554449,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554450,"byte_end":554471,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554472,"byte_end":554475,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Running an HTTP/2.0 client requires the caller to establish the underlying","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554476,"byte_end":554554,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ connection as well as get the connection to a state that is ready to begin","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554555,"byte_end":554633,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ the HTTP/2.0 handshake. See [here](../index.html#handshake) for more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554634,"byte_end":554706,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554707,"byte_end":554719,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554720,"byte_end":554723,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This could be as basic as using Tokio's [`TcpStream`] to connect to a remote","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554724,"byte_end":554804,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ host, but usually it means using either ALPN or HTTP/1.1 protocol upgrades.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554805,"byte_end":554884,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554885,"byte_end":554888,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Once a connection is obtained, it is passed to [`handshake`], which will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554889,"byte_end":554965,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ begin the [HTTP/2.0 handshake]. This returns a future that completes once","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":554966,"byte_end":555043,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ the handshake process is performed and HTTP/2.0 streams may be initialized.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555044,"byte_end":555123,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555124,"byte_end":555127,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`handshake`] uses default configuration values. There are a number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555128,"byte_end":555202,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ settings that can be changed by using [`Builder`] instead.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555203,"byte_end":555265,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555266,"byte_end":555269,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Once the handshake future completes, the caller is provided with a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555270,"byte_end":555340,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ [`Connection`] instance and a [`SendRequest`] instance. The [`Connection`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555341,"byte_end":555419,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ instance is used to drive the connection (see [Managing the connection]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555420,"byte_end":555497,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ The [`SendRequest`] instance is used to initialize new streams (see [Making","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555498,"byte_end":555577,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ requests]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555578,"byte_end":555593,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555594,"byte_end":555597,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Making requests","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555598,"byte_end":555619,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555620,"byte_end":555623,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Requests are made using the [`SendRequest`] handle provided by the handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555624,"byte_end":555704,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ future. Once a request is submitted, an HTTP/2.0 stream is initialized and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555705,"byte_end":555783,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ the request is sent to the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555784,"byte_end":555822,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555823,"byte_end":555826,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A request body and request trailers are sent using [`SendRequest`] and the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555827,"byte_end":555905,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ server's response is returned once the [`ResponseFuture`] future completes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555906,"byte_end":555985,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ Both the [`SendStream`] and [`ResponseFuture`] instances are returned by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":555986,"byte_end":556062,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ [`SendRequest::send_request`] and are tied to the HTTP/2.0 stream","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556063,"byte_end":556132,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ initialized by the sent request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556133,"byte_end":556169,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556170,"byte_end":556173,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The [`SendRequest::poll_ready`] function returns `Ready` when a new HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556174,"byte_end":556254,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ stream can be created, i.e. as long as the current number of active streams","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556255,"byte_end":556334,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ is below [`MAX_CONCURRENT_STREAMS`]. If a new stream cannot be created, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556335,"byte_end":556414,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ caller will be notified once an existing stream closes, freeing capacity for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556415,"byte_end":556495,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ the caller.  The caller should use [`SendRequest::poll_ready`] to check for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556496,"byte_end":556575,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ capacity before sending a request to the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556576,"byte_end":556628,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556629,"byte_end":556632,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] enforces the [`MAX_CONCURRENT_STREAMS`] setting. The user","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556633,"byte_end":556710,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ must not send a request if `poll_ready` does not return `Ready`. Attempting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556711,"byte_end":556790,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ to do so will result in an [`Error`] being returned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556791,"byte_end":556847,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556848,"byte_end":556851,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Managing the connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556852,"byte_end":556881,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556882,"byte_end":556885,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to manage connection state. The caller","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556886,"byte_end":556964,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ is required to call [`Connection::poll`] in order to advance state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":556965,"byte_end":557036,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ [`SendRequest::send_request`] and other functions have no effect unless","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557037,"byte_end":557112,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ [`Connection::poll`] is called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557113,"byte_end":557148,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557149,"byte_end":557152,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance should only be dropped once [`Connection::poll`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557153,"byte_end":557233,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ returns `Ready`. At this point, the underlying socket has been closed and no","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557234,"byte_end":557314,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ further work needs to be done.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557315,"byte_end":557349,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557350,"byte_end":557353,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The easiest way to ensure that the [`Connection`] instance gets polled is to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557354,"byte_end":557434,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ submit the [`Connection`] instance to an [executor]. The executor will then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557435,"byte_end":557514,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ manage polling the connection until the connection is complete.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557515,"byte_end":557582,"line_start":62,"line_end":62,"column_start":1,"column_end":68}},{"value":"/ Alternatively, the caller can call `poll` manually.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557583,"byte_end":557638,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557639,"byte_end":557642,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557643,"byte_end":557656,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557657,"byte_end":557660,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust, no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557661,"byte_end":557680,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557681,"byte_end":557684,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ use h2::client;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557685,"byte_end":557704,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557705,"byte_end":557708,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ use http::{Request, Method};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557709,"byte_end":557741,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557742,"byte_end":557768,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557769,"byte_end":557799,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557800,"byte_end":557803,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557804,"byte_end":557822,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ pub async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557823,"byte_end":557878,"line_start":76,"line_end":76,"column_start":1,"column_end":56}},{"value":"/     // Establish TCP connection to the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557879,"byte_end":557929,"line_start":77,"line_end":77,"column_start":1,"column_end":51}},{"value":"/     let tcp = TcpStream::connect(\"127.0.0.1:5928\").await?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557930,"byte_end":557992,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     let (h2, connection) = client::handshake(tcp).await?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":557993,"byte_end":558054,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558055,"byte_end":558088,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/         connection.await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558089,"byte_end":558127,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558128,"byte_end":558139,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558140,"byte_end":558143,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     let mut h2 = h2.ready().await?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558144,"byte_end":558183,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/     // Prepare the HTTP request to send to the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558184,"byte_end":558242,"line_start":85,"line_end":85,"column_start":1,"column_end":59}},{"value":"/     let request = Request::builder()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558243,"byte_end":558283,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/                     .method(Method::GET)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558284,"byte_end":558328,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                     .uri(\"https://www.example.com/\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558329,"byte_end":558385,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/                     .body(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558386,"byte_end":558419,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/                     .unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558420,"byte_end":558454,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558455,"byte_end":558458,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     // Send the request. The second tuple item allows the caller","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558459,"byte_end":558527,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/     // to stream a request body.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558528,"byte_end":558564,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/     let (response, _) = h2.send_request(request, true).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558565,"byte_end":558633,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558634,"byte_end":558637,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     let (head, mut body) = response.await?.into_parts();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558638,"byte_end":558698,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558699,"byte_end":558702,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     println!(\"Received response: {:?}\", head);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558703,"byte_end":558753,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558754,"byte_end":558757,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     // The `flow_control` handle allows the caller to manage","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558758,"byte_end":558822,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/     // flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558823,"byte_end":558847,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/     //","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558848,"byte_end":558858,"line_start":102,"line_end":102,"column_start":1,"column_end":11}},{"value":"/     // Whenever data is received, the caller is responsible for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558859,"byte_end":558926,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/     // releasing capacity back to the server once it has freed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558927,"byte_end":558993,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/     // the data from memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":558994,"byte_end":559026,"line_start":105,"line_end":105,"column_start":1,"column_end":33}},{"value":"/     let mut flow_control = body.flow_control().clone();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559027,"byte_end":559086,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559087,"byte_end":559090,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     while let Some(chunk) = body.data().await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559091,"byte_end":559142,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/         let chunk = chunk?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559143,"byte_end":559174,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/         println!(\"RX: {:?}\", chunk);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559175,"byte_end":559215,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559216,"byte_end":559219,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Let the server send more data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559220,"byte_end":559265,"line_start":112,"line_end":112,"column_start":1,"column_end":46}},{"value":"/         let _ = flow_control.release_capacity(chunk.len());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559266,"byte_end":559329,"line_start":113,"line_end":113,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559330,"byte_end":559339,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559340,"byte_end":559343,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559344,"byte_end":559358,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559359,"byte_end":559364,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559365,"byte_end":559372,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559373,"byte_end":559376,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559377,"byte_end":559463,"line_start":120,"line_end":120,"column_start":1,"column_end":87}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559464,"byte_end":559500,"line_start":121,"line_end":121,"column_start":1,"column_end":37}},{"value":"/ [executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559501,"byte_end":559579,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559580,"byte_end":559624,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559625,"byte_end":559670,"line_start":124,"line_end":124,"column_start":1,"column_end":46}},{"value":"/ [Making requests]: #making-requests","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559671,"byte_end":559710,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/ [Managing the connection]: #managing-the-connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559711,"byte_end":559766,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559767,"byte_end":559809,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ [`Connection::poll`]: struct.Connection.html#method.poll","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559810,"byte_end":559870,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`SendRequest::send_request`]: struct.SendRequest.html#method.send_request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559871,"byte_end":559949,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ [`MAX_CONCURRENT_STREAMS`]: http://httpwg.org/specs/rfc7540.html#SettingValues","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":559950,"byte_end":560032,"line_start":130,"line_end":130,"column_start":1,"column_end":83}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560033,"byte_end":560077,"line_start":131,"line_end":131,"column_start":1,"column_end":45}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560078,"byte_end":560128,"line_start":132,"line_end":132,"column_start":1,"column_end":51}},{"value":"/ [`SendRequest::poll_ready`]: struct.SendRequest.html#method.poll_ready","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560129,"byte_end":560203,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/ [HTTP/2.0 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560204,"byte_end":560283,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560284,"byte_end":560320,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/ [`Error`]: ../struct.Error.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560321,"byte_end":560356,"line_start":136,"line_end":136,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561927,"byte_end":561938,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"SendRequest","qualname":"::client::SendRequest","value":"SendRequest {  }","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012}],"decl_id":null,"docs":" Initializes new HTTP/2.0 streams on a connection by sending a request.","sig":null,"attributes":[{"value":"/ Initializes new HTTP/2.0 streams on a connection by sending a request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560867,"byte_end":560941,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560942,"byte_end":560945,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This type does no work itself. Instead, it is a handle to the inner","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":560946,"byte_end":561017,"line_start":156,"line_end":156,"column_start":1,"column_end":72}},{"value":"/ connection state held by [`Connection`]. If the associated connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561018,"byte_end":561091,"line_start":157,"line_end":157,"column_start":1,"column_end":74}},{"value":"/ instance is dropped, all `SendRequest` functions will return [`Error`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561092,"byte_end":561167,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561168,"byte_end":561171,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] instances are able to move to and operate on separate tasks","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561172,"byte_end":561251,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ / threads than their associated [`Connection`] instance. Internally, there","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561252,"byte_end":561330,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ is a buffer used to stage requests before they get written to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561331,"byte_end":561400,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ connection. There is no guarantee that requests get written to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561401,"byte_end":561471,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/ connection in FIFO order as HTTP/2.0 prioritization logic can play a role.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561472,"byte_end":561550,"line_start":164,"line_end":164,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561551,"byte_end":561554,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] implements [`Clone`], enabling the creation of many","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561555,"byte_end":561626,"line_start":166,"line_end":166,"column_start":1,"column_end":72}},{"value":"/ instances that are backed by a single connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561627,"byte_end":561680,"line_start":167,"line_end":167,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561681,"byte_end":561684,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ See [module] level documentation for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561685,"byte_end":561739,"line_start":169,"line_end":169,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561740,"byte_end":561743,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561744,"byte_end":561768,"line_start":171,"line_end":171,"column_start":1,"column_end":25}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561769,"byte_end":561811,"line_start":172,"line_end":172,"column_start":1,"column_end":43}},{"value":"/ [`Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561812,"byte_end":561879,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ [`Error`]: ../struct.Error.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":561880,"byte_end":561915,"line_start":174,"line_end":174,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8473},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562149,"byte_end":562165,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"ReadySendRequest","qualname":"::client::ReadySendRequest","value":"ReadySendRequest {  }","parent":null,"children":[{"krate":0,"index":8475}],"decl_id":null,"docs":" Returns a `SendRequest` instance once it is ready to send at least one\n request.\n","sig":null,"attributes":[{"value":"/ Returns a `SendRequest` instance once it is ready to send at least one","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562033,"byte_end":562107,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562108,"byte_end":562120,"line_start":181,"line_end":181,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3013},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563922,"byte_end":563932,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"Connection","qualname":"::client::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":3016}],"decl_id":null,"docs":" Manages all state associated with an HTTP/2.0 client connection.","sig":null,"attributes":[{"value":"/ Manages all state associated with an HTTP/2.0 client connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562214,"byte_end":562282,"line_start":187,"line_end":187,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562283,"byte_end":562286,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ A `Connection` is backed by an I/O resource (usually a TCP socket) and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562287,"byte_end":562361,"line_start":189,"line_end":189,"column_start":1,"column_end":75}},{"value":"/ implements the HTTP/2.0 client logic for that connection. It is responsible","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562362,"byte_end":562441,"line_start":190,"line_end":190,"column_start":1,"column_end":80}},{"value":"/ for driving the internal state forward, performing the work requested of the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562442,"byte_end":562522,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/ associated handles ([`SendRequest`], [`ResponseFuture`], [`SendStream`],","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562523,"byte_end":562599,"line_start":192,"line_end":192,"column_start":1,"column_end":77}},{"value":"/ [`RecvStream`]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562600,"byte_end":562620,"line_start":193,"line_end":193,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562621,"byte_end":562624,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ `Connection` values are created by calling [`handshake`]. Once a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562625,"byte_end":562693,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/ `Connection` value is obtained, the caller must repeatedly call [`poll`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562694,"byte_end":562770,"line_start":196,"line_end":196,"column_start":1,"column_end":77}},{"value":"/ until `Ready` is returned. The easiest way to do this is to submit the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562771,"byte_end":562845,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/ `Connection` instance to an [executor].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562846,"byte_end":562889,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562890,"byte_end":562893,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562894,"byte_end":562918,"line_start":200,"line_end":200,"column_start":1,"column_end":25}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562919,"byte_end":562955,"line_start":201,"line_end":201,"column_start":1,"column_end":37}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":562956,"byte_end":563000,"line_start":202,"line_end":202,"column_start":1,"column_end":45}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563001,"byte_end":563051,"line_start":203,"line_end":203,"column_start":1,"column_end":51}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563052,"byte_end":563097,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563098,"byte_end":563143,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563144,"byte_end":563170,"line_start":206,"line_end":206,"column_start":1,"column_end":27}},{"value":"/ [executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563171,"byte_end":563249,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563250,"byte_end":563253,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563254,"byte_end":563268,"line_start":209,"line_end":209,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563269,"byte_end":563272,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563273,"byte_end":563280,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563281,"byte_end":563326,"line_start":212,"line_end":212,"column_start":1,"column_end":46}},{"value":"/ # use h2::client;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563327,"byte_end":563348,"line_start":213,"line_end":213,"column_start":1,"column_end":22}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563349,"byte_end":563373,"line_start":214,"line_end":214,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563374,"byte_end":563379,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T>(my_io: T) -> Result<(), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563380,"byte_end":563436,"line_start":216,"line_end":216,"column_start":1,"column_end":57}},{"value":"/ # where T: AsyncRead + AsyncWrite + Send + Unpin + 'static,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563437,"byte_end":563500,"line_start":217,"line_end":217,"column_start":1,"column_end":64}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563501,"byte_end":563508,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/     let (send_request, connection) = client::handshake(my_io).await?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563509,"byte_end":563582,"line_start":219,"line_end":219,"column_start":1,"column_end":74}},{"value":"/     // Submit the connection handle to an executor.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563583,"byte_end":563638,"line_start":220,"line_end":220,"column_start":1,"column_end":56}},{"value":"/     tokio::spawn(async { connection.await.expect(\"connection failed\"); });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563639,"byte_end":563717,"line_start":221,"line_end":221,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563718,"byte_end":563721,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/     // Now, use `send_request` to initialize HTTP/2.0 streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563722,"byte_end":563788,"line_start":223,"line_end":223,"column_start":1,"column_end":67}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563789,"byte_end":563803,"line_start":224,"line_end":224,"column_start":1,"column_end":15}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563804,"byte_end":563816,"line_start":225,"line_end":225,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563817,"byte_end":563824,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563825,"byte_end":563830,"line_start":227,"line_end":227,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563831,"byte_end":563853,"line_start":228,"line_end":228,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563854,"byte_end":563861,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563862,"byte_end":563910,"line_start":230,"line_end":230,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8479},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564110,"byte_end":564124,"line_start":238,"line_end":238,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":8480},{"krate":0,"index":8481}],"decl_id":null,"docs":" A future of an HTTP response.\n","sig":null,"attributes":[{"value":"/ A future of an HTTP response.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":563999,"byte_end":564032,"line_start":235,"line_end":235,"column_start":1,"column_end":34}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564050,"byte_end":564098,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8484},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564594,"byte_end":564614,"line_start":251,"line_end":251,"column_start":12,"column_end":32},"name":"PushedResponseFuture","qualname":"::client::PushedResponseFuture","value":"PushedResponseFuture {  }","parent":null,"children":[{"krate":0,"index":8485}],"decl_id":null,"docs":" A future of a pushed HTTP response.","sig":null,"attributes":[{"value":"/ A future of a pushed HTTP response.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564198,"byte_end":564237,"line_start":243,"line_end":243,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564238,"byte_end":564241,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ We have to differentiate between pushed and non pushed because of the spec","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564242,"byte_end":564320,"line_start":245,"line_end":245,"column_start":1,"column_end":79}},{"value":"/ <https://httpwg.org/specs/rfc7540.html#PUSH_PROMISE>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564321,"byte_end":564377,"line_start":246,"line_end":246,"column_start":1,"column_end":57}},{"value":"/ > PUSH_PROMISE frames MUST only be sent on a peer-initiated stream","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564378,"byte_end":564448,"line_start":247,"line_end":247,"column_start":1,"column_end":71}},{"value":"/ > that is in either the \"open\" or \"half-closed (remote)\" state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564449,"byte_end":564516,"line_start":248,"line_end":248,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564534,"byte_end":564582,"line_start":250,"line_end":250,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8488},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564731,"byte_end":564742,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"PushPromise","qualname":"::client::PushPromise","value":"PushPromise {  }","parent":null,"children":[{"krate":0,"index":8489},{"krate":0,"index":8490}],"decl_id":null,"docs":" A pushed response and corresponding request headers\n","sig":null,"attributes":[{"value":"/ A pushed response and corresponding request headers","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564647,"byte_end":564702,"line_start":255,"line_end":255,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":8493},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565013,"byte_end":565025,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"PushPromises","qualname":"::client::PushPromises","value":"PushPromises {  }","parent":null,"children":[{"krate":0,"index":8494}],"decl_id":null,"docs":" A stream of pushed responses and corresponding promised requests\n","sig":null,"attributes":[{"value":"/ A stream of pushed responses and corresponding promised requests","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564867,"byte_end":564935,"line_start":265,"line_end":265,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":564953,"byte_end":565001,"line_start":267,"line_end":267,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8497},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566232,"byte_end":566239,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":8498},{"krate":0,"index":8499},{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8502},{"krate":0,"index":8503}],"decl_id":null,"docs":" Builds client connections with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds client connections with custom configuration values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565066,"byte_end":565129,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565130,"byte_end":565133,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565134,"byte_end":565202,"line_start":274,"line_end":274,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565203,"byte_end":565206,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The client is constructed by calling [`handshake`] and passing the I/O","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565207,"byte_end":565281,"line_start":276,"line_end":276,"column_start":1,"column_end":75}},{"value":"/ handle that will back the HTTP/2.0 server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565282,"byte_end":565328,"line_start":277,"line_end":277,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565329,"byte_end":565332,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565333,"byte_end":565398,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565399,"byte_end":565402,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various client","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565403,"byte_end":565473,"line_start":281,"line_end":281,"column_start":1,"column_end":71}},{"value":"/ configuration settings.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565474,"byte_end":565501,"line_start":282,"line_end":282,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565502,"byte_end":565505,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ [`Builder::new`]: struct.Builder.html#method.new","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565506,"byte_end":565558,"line_start":284,"line_end":284,"column_start":1,"column_end":53}},{"value":"/ [`handshake`]: struct.Builder.html#method.handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565559,"byte_end":565614,"line_start":285,"line_end":285,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565615,"byte_end":565618,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565619,"byte_end":565633,"line_start":287,"line_end":287,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565634,"byte_end":565637,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565638,"byte_end":565645,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565646,"byte_end":565691,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565692,"byte_end":565716,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565717,"byte_end":565740,"line_start":292,"line_end":292,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565741,"byte_end":565746,"line_start":293,"line_end":293,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565747,"byte_end":565810,"line_start":294,"line_end":294,"column_start":1,"column_end":64}},{"value":"/     -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565811,"byte_end":565885,"line_start":295,"line_end":295,"column_start":1,"column_end":75}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565886,"byte_end":565893,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565894,"byte_end":565969,"line_start":297,"line_end":297,"column_start":1,"column_end":76}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565970,"byte_end":565987,"line_start":298,"line_end":298,"column_start":1,"column_end":18}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":565988,"byte_end":566023,"line_start":299,"line_end":299,"column_start":1,"column_end":36}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566024,"byte_end":566063,"line_start":300,"line_end":300,"column_start":1,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566064,"byte_end":566101,"line_start":301,"line_end":301,"column_start":1,"column_end":38}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566102,"byte_end":566128,"line_start":302,"line_end":302,"column_start":1,"column_end":27}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566129,"byte_end":566151,"line_start":303,"line_end":303,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566152,"byte_end":566159,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566160,"byte_end":566165,"line_start":305,"line_end":305,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566166,"byte_end":566188,"line_start":306,"line_end":306,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":566189,"byte_end":566196,"line_start":307,"line_end":307,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567600,"byte_end":567610,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<SendRequest<B>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ready` when the connection can initialize a new HTTP/2.0\n stream.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the connection can initialize a new HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567215,"byte_end":567284,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567289,"byte_end":567300,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567305,"byte_end":567308,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This function must return `Ready` before `send_request` is called. When","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567313,"byte_end":567388,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ `Poll::Pending` is returned, the task will be notified once the readiness","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567393,"byte_end":567470,"line_start":346,"line_end":346,"column_start":5,"column_end":82}},{"value":"/ state changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567475,"byte_end":567493,"line_start":347,"line_end":347,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567498,"byte_end":567501,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567506,"byte_end":567551,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567556,"byte_end":567559,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ [module]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567564,"byte_end":567588,"line_start":351,"line_end":351,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568775,"byte_end":568780,"line_start":386,"line_end":386,"column_start":12,"column_end":17},"name":"ready","qualname":"<SendRequest<B>>::ready","value":"pub fn ready(Self) -> ReadySendRequest<B>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning a future that returns `self` back once it is\n ready to send a request.","sig":null,"attributes":[{"value":"/ Consumes `self`, returning a future that returns `self` back once it is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567818,"byte_end":567893,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/ ready to send a request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567898,"byte_end":567926,"line_start":359,"line_end":359,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567931,"byte_end":567934,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function should be called before calling `send_request`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567939,"byte_end":568004,"line_start":361,"line_end":361,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568009,"byte_end":568012,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This is a functional combinator for [`poll_ready`]. The returned future","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568017,"byte_end":568092,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ will call `SendStream::poll_ready` until `Ready`, then returns `self` to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568097,"byte_end":568173,"line_start":364,"line_end":364,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568178,"byte_end":568193,"line_start":365,"line_end":365,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568198,"byte_end":568201,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568206,"byte_end":568220,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568225,"byte_end":568228,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568233,"byte_end":568244,"line_start":369,"line_end":369,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568249,"byte_end":568273,"line_start":370,"line_end":370,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568278,"byte_end":568296,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568301,"byte_end":568361,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568366,"byte_end":568373,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568378,"byte_end":568451,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568456,"byte_end":568470,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568475,"byte_end":568538,"line_start":376,"line_end":376,"column_start":5,"column_end":68}},{"value":"/ // Use `send_request` here.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568543,"byte_end":568574,"line_start":377,"line_end":377,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568579,"byte_end":568586,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568591,"byte_end":568613,"line_start":379,"line_end":379,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568618,"byte_end":568625,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568630,"byte_end":568633,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568638,"byte_end":568683,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568688,"byte_end":568691,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ [`poll_ready`]: #method.poll_ready","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568696,"byte_end":568734,"line_start":384,"line_end":384,"column_start":5,"column_end":43}},{"value":"/ [module]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568739,"byte_end":568763,"line_start":385,"line_end":385,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573485,"byte_end":573497,"line_start":497,"line_end":497,"column_start":12,"column_end":24},"name":"send_request","qualname":"<SendRequest<B>>::send_request","value":"pub fn send_request(&mut Self, Request<()>, bool)\n-> Result<(ResponseFuture, SendStream<B>), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a HTTP/2.0 request to the server.","sig":null,"attributes":[{"value":"/ Sends a HTTP/2.0 request to the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568870,"byte_end":568913,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568918,"byte_end":568921,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ `send_request` initializes a new HTTP/2.0 stream on the associated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":568926,"byte_end":568996,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ connection, then sends the given request using this new stream. Only the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569001,"byte_end":569077,"line_start":393,"line_end":393,"column_start":5,"column_end":81}},{"value":"/ request head is sent.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569082,"byte_end":569107,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569112,"byte_end":569115,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ On success, a [`ResponseFuture`] instance and [`SendStream`] instance","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569120,"byte_end":569193,"line_start":396,"line_end":396,"column_start":5,"column_end":78}},{"value":"/ are returned. The [`ResponseFuture`] instance is used to get the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569198,"byte_end":569266,"line_start":397,"line_end":397,"column_start":5,"column_end":73}},{"value":"/ server's response and the [`SendStream`] instance is used to send a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569271,"byte_end":569342,"line_start":398,"line_end":398,"column_start":5,"column_end":76}},{"value":"/ request body or trailers to the server over the same HTTP/2.0 stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569347,"byte_end":569420,"line_start":399,"line_end":399,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569425,"byte_end":569428,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ To send a request body or trailers, set `end_of_stream` to `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569433,"byte_end":569504,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ Then, use the returned [`SendStream`] instance to stream request body","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569509,"byte_end":569582,"line_start":402,"line_end":402,"column_start":5,"column_end":78}},{"value":"/ chunks or send trailers. If `end_of_stream` is **not** set to `false`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569587,"byte_end":569660,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/ then attempting to call [`SendStream::send_data`] or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569665,"byte_end":569721,"line_start":404,"line_end":404,"column_start":5,"column_end":61}},{"value":"/ [`SendStream::send_trailers`] will result in an error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569726,"byte_end":569784,"line_start":405,"line_end":405,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569789,"byte_end":569792,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If no request body or trailers are to be sent, set `end_of_stream` to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569797,"byte_end":569870,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ `true` and drop the returned [`SendStream`] instance.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569875,"byte_end":569932,"line_start":408,"line_end":408,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569937,"byte_end":569940,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # A note on HTTP versions","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569945,"byte_end":569974,"line_start":410,"line_end":410,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569979,"byte_end":569982,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The provided `Request` will be encoded differently depending on the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":569987,"byte_end":570058,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ value of its version field. If the version is set to 2.0, then the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570063,"byte_end":570133,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/ request is encoded as per the specification recommends.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570138,"byte_end":570197,"line_start":414,"line_end":414,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570202,"byte_end":570205,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If the version is set to a lower value, then the request is encoded to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570210,"byte_end":570284,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ preserve the characteristics of HTTP 1.1 and lower. Specifically, host","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570289,"byte_end":570363,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ headers are permitted and the `:authority` pseudo header is not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570368,"byte_end":570435,"line_start":418,"line_end":418,"column_start":5,"column_end":72}},{"value":"/ included.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570440,"byte_end":570453,"line_start":419,"line_end":419,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570458,"byte_end":570461,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ The caller should always set the request's version field to 2.0 unless","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570466,"byte_end":570540,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ specifically transmitting an HTTP 1.1 request over 2.0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570545,"byte_end":570604,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570609,"byte_end":570612,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570617,"byte_end":570631,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570636,"byte_end":570639,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Sending a request with no body","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570644,"byte_end":570678,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570683,"byte_end":570686,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570691,"byte_end":570702,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570707,"byte_end":570731,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570736,"byte_end":570754,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570759,"byte_end":570819,"line_start":431,"line_end":431,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570824,"byte_end":570831,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570836,"byte_end":570909,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570914,"byte_end":570928,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":570933,"byte_end":570996,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ // Prepare the HTTP request to send to the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571001,"byte_end":571055,"line_start":436,"line_end":436,"column_start":5,"column_end":59}},{"value":"/ let request = Request::get(\"https://www.example.com/\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571060,"byte_end":571118,"line_start":437,"line_end":437,"column_start":5,"column_end":63}},{"value":"/     .body(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571123,"byte_end":571140,"line_start":438,"line_end":438,"column_start":5,"column_end":22}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571145,"byte_end":571163,"line_start":439,"line_end":439,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571168,"byte_end":571171,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ // Send the request to the server. Since we are not sending a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571176,"byte_end":571241,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/ // body or trailers, we can drop the `SendStream` instance.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571246,"byte_end":571309,"line_start":442,"line_end":442,"column_start":5,"column_end":68}},{"value":"/ let (response, _) = send_request.send_request(request, true).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571314,"byte_end":571388,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ let response = response.await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571393,"byte_end":571436,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ // Process the response","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571441,"byte_end":571468,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571473,"byte_end":571480,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571485,"byte_end":571507,"line_start":447,"line_end":447,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571512,"byte_end":571519,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571524,"byte_end":571527,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Sending a request with a body and trailers","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571532,"byte_end":571578,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571583,"byte_end":571586,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571591,"byte_end":571602,"line_start":452,"line_end":452,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571607,"byte_end":571631,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571636,"byte_end":571654,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571659,"byte_end":571719,"line_start":455,"line_end":455,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571724,"byte_end":571731,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571736,"byte_end":571809,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571814,"byte_end":571828,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571833,"byte_end":571896,"line_start":459,"line_end":459,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571901,"byte_end":571904,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ // Prepare the HTTP request to send to the server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571909,"byte_end":571963,"line_start":461,"line_end":461,"column_start":5,"column_end":59}},{"value":"/ let request = Request::get(\"https://www.example.com/\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":571968,"byte_end":572026,"line_start":462,"line_end":462,"column_start":5,"column_end":63}},{"value":"/     .body(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572031,"byte_end":572048,"line_start":463,"line_end":463,"column_start":5,"column_end":22}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572053,"byte_end":572071,"line_start":464,"line_end":464,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572076,"byte_end":572079,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ // Send the request to the server. If we are not sending a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572084,"byte_end":572146,"line_start":466,"line_end":466,"column_start":5,"column_end":67}},{"value":"/ // body or trailers, we can drop the `SendStream` instance.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572151,"byte_end":572214,"line_start":467,"line_end":467,"column_start":5,"column_end":68}},{"value":"/ let (response, mut send_stream) = send_request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572219,"byte_end":572269,"line_start":468,"line_end":468,"column_start":5,"column_end":55}},{"value":"/     .send_request(request, false).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572274,"byte_end":572321,"line_start":469,"line_end":469,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572326,"byte_end":572329,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // At this point, one option would be to wait for send capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572334,"byte_end":572402,"line_start":471,"line_end":471,"column_start":5,"column_end":73}},{"value":"/ // Doing so would allow us to not hold data in memory that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572407,"byte_end":572469,"line_start":472,"line_end":472,"column_start":5,"column_end":67}},{"value":"/ // cannot be sent. However, this is not a requirement, so this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572474,"byte_end":572540,"line_start":473,"line_end":473,"column_start":5,"column_end":71}},{"value":"/ // example will skip that step. See `SendStream` documentation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572545,"byte_end":572611,"line_start":474,"line_end":474,"column_start":5,"column_end":71}},{"value":"/ // for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572616,"byte_end":572640,"line_start":475,"line_end":475,"column_start":5,"column_end":29}},{"value":"/ send_stream.send_data(b\"hello\", false).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572645,"byte_end":572697,"line_start":476,"line_end":476,"column_start":5,"column_end":57}},{"value":"/ send_stream.send_data(b\"world\", false).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572702,"byte_end":572754,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572759,"byte_end":572762,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ // Send the trailers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572767,"byte_end":572792,"line_start":479,"line_end":479,"column_start":5,"column_end":30}},{"value":"/ let mut trailers = HeaderMap::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572797,"byte_end":572837,"line_start":480,"line_end":480,"column_start":5,"column_end":45}},{"value":"/ trailers.insert(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572842,"byte_end":572862,"line_start":481,"line_end":481,"column_start":5,"column_end":25}},{"value":"/     header::HeaderName::from_bytes(b\"my-trailer\").unwrap(),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572867,"byte_end":572930,"line_start":482,"line_end":482,"column_start":5,"column_end":68}},{"value":"/     header::HeaderValue::from_bytes(b\"hello\").unwrap());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":572935,"byte_end":572995,"line_start":483,"line_end":483,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573000,"byte_end":573003,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ send_stream.send_trailers(trailers).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573008,"byte_end":573057,"line_start":485,"line_end":485,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573062,"byte_end":573065,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let response = response.await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573070,"byte_end":573113,"line_start":487,"line_end":487,"column_start":5,"column_end":48}},{"value":"/ // Process the response","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573118,"byte_end":573145,"line_start":488,"line_end":488,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573150,"byte_end":573157,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573162,"byte_end":573184,"line_start":490,"line_end":490,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573189,"byte_end":573196,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573201,"byte_end":573204,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573209,"byte_end":573259,"line_start":493,"line_end":493,"column_start":5,"column_end":55}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573264,"byte_end":573309,"line_start":494,"line_end":494,"column_start":5,"column_end":50}},{"value":"/ [`SendStream::send_data`]: ../struct.SendStream.html#method.send_data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573314,"byte_end":573387,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ [`SendStream::send_trailers`]: ../struct.SendStream.html#method.send_trailers","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":573392,"byte_end":573473,"line_start":496,"line_end":496,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576690,"byte_end":576693,"line_start":615,"line_end":615,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new client builder instance initialized with default\n configuration values.","sig":null,"attributes":[{"value":"/ Returns a new client builder instance initialized with default","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575840,"byte_end":575906,"line_start":589,"line_end":589,"column_start":5,"column_end":71}},{"value":"/ configuration values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575911,"byte_end":575936,"line_start":590,"line_end":590,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575941,"byte_end":575944,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575949,"byte_end":576010,"line_start":592,"line_end":592,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576015,"byte_end":576018,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576023,"byte_end":576037,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576042,"byte_end":576045,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576050,"byte_end":576057,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576062,"byte_end":576107,"line_start":597,"line_end":597,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576112,"byte_end":576136,"line_start":598,"line_end":598,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576141,"byte_end":576164,"line_start":599,"line_end":599,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576169,"byte_end":576174,"line_start":600,"line_end":600,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576179,"byte_end":576242,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576247,"byte_end":576319,"line_start":602,"line_end":602,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576324,"byte_end":576331,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576336,"byte_end":576411,"line_start":604,"line_end":604,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576416,"byte_end":576433,"line_start":605,"line_end":605,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576438,"byte_end":576473,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576478,"byte_end":576517,"line_start":607,"line_end":607,"column_start":5,"column_end":44}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576522,"byte_end":576559,"line_start":608,"line_end":608,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576564,"byte_end":576590,"line_start":609,"line_end":609,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576595,"byte_end":576617,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576622,"byte_end":576629,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576634,"byte_end":576639,"line_start":612,"line_end":612,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576644,"byte_end":576666,"line_start":613,"line_end":613,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":576671,"byte_end":576678,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578059,"byte_end":578078,"line_start":656,"line_end":656,"column_start":12,"column_end":31},"name":"initial_window_size","qualname":"<Builder>::initial_window_size","value":"pub fn initial_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for stream-level","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577083,"byte_end":577149,"line_start":626,"line_end":626,"column_start":5,"column_end":71}},{"value":"/ flow control for received data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577154,"byte_end":577189,"line_start":627,"line_end":627,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577194,"byte_end":577197,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The initial window of a stream is used as part of flow control. For more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577202,"byte_end":577278,"line_start":629,"line_end":629,"column_start":5,"column_end":81}},{"value":"/ details, see [`FlowControl`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577283,"byte_end":577316,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577321,"byte_end":577324,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577329,"byte_end":577361,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577366,"byte_end":577369,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577374,"byte_end":577421,"line_start":634,"line_end":634,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577426,"byte_end":577429,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577434,"byte_end":577448,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577453,"byte_end":577456,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577461,"byte_end":577468,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577473,"byte_end":577518,"line_start":639,"line_end":639,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577523,"byte_end":577547,"line_start":640,"line_end":640,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577552,"byte_end":577575,"line_start":641,"line_end":641,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577580,"byte_end":577585,"line_start":642,"line_end":642,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577590,"byte_end":577653,"line_start":643,"line_end":643,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577658,"byte_end":577730,"line_start":644,"line_end":644,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577735,"byte_end":577742,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577747,"byte_end":577822,"line_start":646,"line_end":646,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577827,"byte_end":577844,"line_start":647,"line_end":647,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577849,"byte_end":577884,"line_start":648,"line_end":648,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577889,"byte_end":577928,"line_start":649,"line_end":649,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577933,"byte_end":577959,"line_start":650,"line_end":650,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577964,"byte_end":577986,"line_start":651,"line_end":651,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":577991,"byte_end":577998,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578003,"byte_end":578008,"line_start":653,"line_end":653,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578013,"byte_end":578035,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578040,"byte_end":578047,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579194,"byte_end":579224,"line_start":691,"line_end":691,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Builder>::initial_connection_window_size","value":"pub fn initial_connection_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for connection-level flow control\n for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for connection-level flow control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578199,"byte_end":578282,"line_start":661,"line_end":661,"column_start":5,"column_end":88}},{"value":"/ for received data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578287,"byte_end":578309,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578314,"byte_end":578317,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ The initial window of a connection is used as part of flow control. For more details,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578322,"byte_end":578411,"line_start":664,"line_end":664,"column_start":5,"column_end":94}},{"value":"/ see [`FlowControl`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578416,"byte_end":578440,"line_start":665,"line_end":665,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578445,"byte_end":578448,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578453,"byte_end":578485,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578490,"byte_end":578493,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578498,"byte_end":578545,"line_start":669,"line_end":669,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578550,"byte_end":578553,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578558,"byte_end":578572,"line_start":671,"line_end":671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578577,"byte_end":578580,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578585,"byte_end":578592,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578597,"byte_end":578642,"line_start":674,"line_end":674,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578647,"byte_end":578671,"line_start":675,"line_end":675,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578676,"byte_end":578699,"line_start":676,"line_end":676,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578704,"byte_end":578709,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578714,"byte_end":578777,"line_start":678,"line_end":678,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578782,"byte_end":578854,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578859,"byte_end":578866,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578871,"byte_end":578946,"line_start":681,"line_end":681,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578951,"byte_end":578968,"line_start":682,"line_end":682,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":578973,"byte_end":579008,"line_start":683,"line_end":683,"column_start":5,"column_end":40}},{"value":"/     .initial_connection_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579013,"byte_end":579063,"line_start":684,"line_end":684,"column_start":5,"column_end":55}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579068,"byte_end":579094,"line_start":685,"line_end":685,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579099,"byte_end":579121,"line_start":686,"line_end":686,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579126,"byte_end":579133,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579138,"byte_end":579143,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579148,"byte_end":579170,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579175,"byte_end":579182,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580514,"byte_end":580528,"line_start":730,"line_end":730,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Builder>::max_frame_size","value":"pub fn max_frame_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the size (in octets) of the largest HTTP/2.0 frame payload that the\n configured client is able to accept.","sig":null,"attributes":[{"value":"/ Indicates the size (in octets) of the largest HTTP/2.0 frame payload that the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579351,"byte_end":579432,"line_start":696,"line_end":696,"column_start":5,"column_end":86}},{"value":"/ configured client is able to accept.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579437,"byte_end":579477,"line_start":697,"line_end":697,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579482,"byte_end":579485,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ The sender may send data frames that are **smaller** than this value,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579490,"byte_end":579563,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/ but any data larger than `max` will be broken up into multiple `DATA`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579568,"byte_end":579641,"line_start":700,"line_end":700,"column_start":5,"column_end":78}},{"value":"/ frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579646,"byte_end":579657,"line_start":701,"line_end":701,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579662,"byte_end":579665,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ The value **must** be between 16,384 and 16,777,215. The default value is 16,384.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579670,"byte_end":579755,"line_start":703,"line_end":703,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579760,"byte_end":579763,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579768,"byte_end":579782,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579787,"byte_end":579790,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579795,"byte_end":579802,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579807,"byte_end":579852,"line_start":708,"line_end":708,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579857,"byte_end":579881,"line_start":709,"line_end":709,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579886,"byte_end":579909,"line_start":710,"line_end":710,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579914,"byte_end":579919,"line_start":711,"line_end":711,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579924,"byte_end":579987,"line_start":712,"line_end":712,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":579992,"byte_end":580064,"line_start":713,"line_end":713,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580069,"byte_end":580076,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580081,"byte_end":580156,"line_start":715,"line_end":715,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580161,"byte_end":580178,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580183,"byte_end":580218,"line_start":717,"line_end":717,"column_start":5,"column_end":40}},{"value":"/     .max_frame_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580223,"byte_end":580257,"line_start":718,"line_end":718,"column_start":5,"column_end":39}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580262,"byte_end":580288,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580293,"byte_end":580315,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580320,"byte_end":580327,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580332,"byte_end":580337,"line_start":722,"line_end":722,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580342,"byte_end":580364,"line_start":723,"line_end":723,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580369,"byte_end":580376,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580381,"byte_end":580384,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580389,"byte_end":580401,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580406,"byte_end":580409,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is not within the legal range specified","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580414,"byte_end":580487,"line_start":728,"line_end":728,"column_start":5,"column_end":78}},{"value":"/ above.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580492,"byte_end":580502,"line_start":729,"line_end":729,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581788,"byte_end":581808,"line_start":765,"line_end":765,"column_start":12,"column_end":32},"name":"max_header_list_size","qualname":"<Builder>::max_header_list_size","value":"pub fn max_header_list_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max size of received header frames.","sig":null,"attributes":[{"value":"/ Sets the max size of received header frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580642,"byte_end":580690,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580695,"byte_end":580698,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This advisory setting informs a peer of the maximum size of header list","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580703,"byte_end":580778,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/ that the sender is prepared to accept, in octets. The value is based on","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580783,"byte_end":580858,"line_start":738,"line_end":738,"column_start":5,"column_end":80}},{"value":"/ the uncompressed size of header fields, including the length of the name","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580863,"byte_end":580939,"line_start":739,"line_end":739,"column_start":5,"column_end":81}},{"value":"/ and value in octets plus an overhead of 32 octets for each header field.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":580944,"byte_end":581020,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581025,"byte_end":581028,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ This setting is also used to limit the maximum amount of data that is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581033,"byte_end":581106,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ buffered to decode HEADERS frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581111,"byte_end":581149,"line_start":743,"line_end":743,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581154,"byte_end":581157,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581162,"byte_end":581176,"line_start":745,"line_end":745,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581181,"byte_end":581184,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581189,"byte_end":581196,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581201,"byte_end":581246,"line_start":748,"line_end":748,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581251,"byte_end":581275,"line_start":749,"line_end":749,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581280,"byte_end":581303,"line_start":750,"line_end":750,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581308,"byte_end":581313,"line_start":751,"line_end":751,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581318,"byte_end":581381,"line_start":752,"line_end":752,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581386,"byte_end":581458,"line_start":753,"line_end":753,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581463,"byte_end":581470,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581475,"byte_end":581550,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581555,"byte_end":581572,"line_start":756,"line_end":756,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581577,"byte_end":581612,"line_start":757,"line_end":757,"column_start":5,"column_end":40}},{"value":"/     .max_header_list_size(16 * 1024)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581617,"byte_end":581657,"line_start":758,"line_end":758,"column_start":5,"column_end":45}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581662,"byte_end":581688,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581693,"byte_end":581715,"line_start":760,"line_end":760,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581720,"byte_end":581727,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581732,"byte_end":581737,"line_start":762,"line_end":762,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581742,"byte_end":581764,"line_start":763,"line_end":763,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581769,"byte_end":581776,"line_start":764,"line_end":764,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583719,"byte_end":583741,"line_start":814,"line_end":814,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Builder>::max_concurrent_streams","value":"pub fn max_concurrent_streams(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581928,"byte_end":581978,"line_start":770,"line_end":770,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581983,"byte_end":581986,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ The maximum concurrent streams setting only controls the maximum number","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":581991,"byte_end":582066,"line_start":772,"line_end":772,"column_start":5,"column_end":80}},{"value":"/ of streams that can be initiated by the remote peer. In other words,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582071,"byte_end":582143,"line_start":773,"line_end":773,"column_start":5,"column_end":77}},{"value":"/ when this setting is set to 100, this does not limit the number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582148,"byte_end":582218,"line_start":774,"line_end":774,"column_start":5,"column_end":75}},{"value":"/ concurrent streams that can be created by the caller.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582223,"byte_end":582280,"line_start":775,"line_end":775,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582285,"byte_end":582288,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ It is recommended that this value be no smaller than 100, so as to not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582293,"byte_end":582367,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ unnecessarily limit parallelism. However, any value is legal, including","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582372,"byte_end":582447,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ 0. If `max` is set to 0, then the remote will not be permitted to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582452,"byte_end":582521,"line_start":779,"line_end":779,"column_start":5,"column_end":74}},{"value":"/ initiate streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582526,"byte_end":582547,"line_start":780,"line_end":780,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582552,"byte_end":582555,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Note that streams in the reserved state, i.e., push promises that have","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582560,"byte_end":582634,"line_start":782,"line_end":782,"column_start":5,"column_end":79}},{"value":"/ been reserved but the stream has not started, do not count against this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582639,"byte_end":582714,"line_start":783,"line_end":783,"column_start":5,"column_end":80}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582719,"byte_end":582731,"line_start":784,"line_end":784,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582736,"byte_end":582739,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ Also note that if the remote *does* exceed the value set here, it is not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582744,"byte_end":582820,"line_start":786,"line_end":786,"column_start":5,"column_end":81}},{"value":"/ a protocol level error. Instead, the `h2` library will immediately reset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582825,"byte_end":582901,"line_start":787,"line_end":787,"column_start":5,"column_end":81}},{"value":"/ the stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582906,"byte_end":582921,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582926,"byte_end":582929,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2.0 spec for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":582934,"byte_end":582996,"line_start":790,"line_end":790,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583001,"byte_end":583004,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583009,"byte_end":583083,"line_start":792,"line_end":792,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583088,"byte_end":583091,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583096,"byte_end":583110,"line_start":794,"line_end":794,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583115,"byte_end":583118,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583123,"byte_end":583130,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583135,"byte_end":583180,"line_start":797,"line_end":797,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583185,"byte_end":583209,"line_start":798,"line_end":798,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583214,"byte_end":583237,"line_start":799,"line_end":799,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583242,"byte_end":583247,"line_start":800,"line_end":800,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583252,"byte_end":583315,"line_start":801,"line_end":801,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583320,"byte_end":583392,"line_start":802,"line_end":802,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583397,"byte_end":583404,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583409,"byte_end":583484,"line_start":804,"line_end":804,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583489,"byte_end":583506,"line_start":805,"line_end":805,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583511,"byte_end":583546,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583551,"byte_end":583588,"line_start":807,"line_end":807,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583593,"byte_end":583619,"line_start":808,"line_end":808,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583624,"byte_end":583646,"line_start":809,"line_end":809,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583651,"byte_end":583658,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583663,"byte_end":583668,"line_start":811,"line_end":811,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583673,"byte_end":583695,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583700,"byte_end":583707,"line_start":813,"line_end":813,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585228,"byte_end":585252,"line_start":855,"line_end":855,"column_start":12,"column_end":36},"name":"initial_max_send_streams","qualname":"<Builder>::initial_max_send_streams","value":"pub fn initial_max_send_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the initial maximum of locally initiated (send) streams.","sig":null,"attributes":[{"value":"/ Sets the initial maximum of locally initiated (send) streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583863,"byte_end":583928,"line_start":819,"line_end":819,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583933,"byte_end":583936,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ The initial settings will be overwritten by the remote peer when","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":583941,"byte_end":584009,"line_start":821,"line_end":821,"column_start":5,"column_end":73}},{"value":"/ the Settings frame is received. The new value will be set to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584014,"byte_end":584082,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ `max_concurrent_streams()` from the frame.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584087,"byte_end":584133,"line_start":823,"line_end":823,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584138,"byte_end":584141,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ This setting prevents the caller from exceeding this number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584146,"byte_end":584212,"line_start":825,"line_end":825,"column_start":5,"column_end":71}},{"value":"/ streams that are counted towards the concurrency limit.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584217,"byte_end":584276,"line_start":826,"line_end":826,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584281,"byte_end":584284,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ Sending streams past the limit returned by the peer will be treated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584289,"byte_end":584360,"line_start":828,"line_end":828,"column_start":5,"column_end":76}},{"value":"/ as a stream error of type PROTOCOL_ERROR or REFUSED_STREAM.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584365,"byte_end":584428,"line_start":829,"line_end":829,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584433,"byte_end":584436,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2.0 spec for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584441,"byte_end":584503,"line_start":831,"line_end":831,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584508,"byte_end":584511,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584516,"byte_end":584590,"line_start":833,"line_end":833,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584595,"byte_end":584598,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584603,"byte_end":584617,"line_start":835,"line_end":835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584622,"byte_end":584625,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584630,"byte_end":584637,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584642,"byte_end":584687,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584692,"byte_end":584716,"line_start":839,"line_end":839,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584721,"byte_end":584744,"line_start":840,"line_end":840,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584749,"byte_end":584754,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584759,"byte_end":584822,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584827,"byte_end":584899,"line_start":843,"line_end":843,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584904,"byte_end":584911,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584916,"byte_end":584991,"line_start":845,"line_end":845,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":584996,"byte_end":585013,"line_start":846,"line_end":846,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585018,"byte_end":585053,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .initial_max_send_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585058,"byte_end":585097,"line_start":848,"line_end":848,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585102,"byte_end":585128,"line_start":849,"line_end":849,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585133,"byte_end":585155,"line_start":850,"line_end":850,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585160,"byte_end":585167,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585172,"byte_end":585177,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585182,"byte_end":585204,"line_start":853,"line_end":853,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585209,"byte_end":585216,"line_start":854,"line_end":854,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586954,"byte_end":586982,"line_start":900,"line_end":900,"column_start":12,"column_end":40},"name":"max_concurrent_reset_streams","qualname":"<Builder>::max_concurrent_reset_streams","value":"pub fn max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585368,"byte_end":585432,"line_start":860,"line_end":860,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585437,"byte_end":585440,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset, the HTTP/2.0 specification requires","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585445,"byte_end":585519,"line_start":862,"line_end":862,"column_start":5,"column_end":79}},{"value":"/ that any further frames received for that stream must be ignored for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585524,"byte_end":585596,"line_start":863,"line_end":863,"column_start":5,"column_end":77}},{"value":"/ \"some time\".","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585601,"byte_end":585617,"line_start":864,"line_end":864,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585622,"byte_end":585625,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585630,"byte_end":585706,"line_start":866,"line_end":866,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585711,"byte_end":585786,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585791,"byte_end":585826,"line_start":868,"line_end":868,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585831,"byte_end":585834,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ The `max_concurrent_reset_streams` setting configures sets an upper","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585839,"byte_end":585910,"line_start":870,"line_end":870,"column_start":5,"column_end":76}},{"value":"/ bound on the amount of state that is maintained. When this max value is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585915,"byte_end":585990,"line_start":871,"line_end":871,"column_start":5,"column_end":80}},{"value":"/ reached, the oldest reset stream is purged from memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":585995,"byte_end":586054,"line_start":872,"line_end":872,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586059,"byte_end":586062,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586067,"byte_end":586143,"line_start":874,"line_end":874,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586148,"byte_end":586219,"line_start":875,"line_end":875,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586224,"byte_end":586271,"line_start":876,"line_end":876,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586276,"byte_end":586279,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ The default value is 10.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586284,"byte_end":586312,"line_start":878,"line_end":878,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586317,"byte_end":586320,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586325,"byte_end":586339,"line_start":880,"line_end":880,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586344,"byte_end":586347,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586352,"byte_end":586359,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586364,"byte_end":586409,"line_start":883,"line_end":883,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586414,"byte_end":586438,"line_start":884,"line_end":884,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586443,"byte_end":586466,"line_start":885,"line_end":885,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586471,"byte_end":586476,"line_start":886,"line_end":886,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586481,"byte_end":586544,"line_start":887,"line_end":887,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586549,"byte_end":586621,"line_start":888,"line_end":888,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586626,"byte_end":586633,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586638,"byte_end":586713,"line_start":890,"line_end":890,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586718,"byte_end":586735,"line_start":891,"line_end":891,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586740,"byte_end":586775,"line_start":892,"line_end":892,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_reset_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586780,"byte_end":586823,"line_start":893,"line_end":893,"column_start":5,"column_end":48}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586828,"byte_end":586854,"line_start":894,"line_end":894,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586859,"byte_end":586881,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586886,"byte_end":586893,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586898,"byte_end":586903,"line_start":897,"line_end":897,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586908,"byte_end":586930,"line_start":898,"line_end":898,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":586935,"byte_end":586942,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588697,"byte_end":588718,"line_start":946,"line_end":946,"column_start":12,"column_end":33},"name":"reset_stream_duration","qualname":"<Builder>::reset_stream_duration","value":"pub fn reset_stream_duration(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the duration to remember locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the duration to remember locally reset streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587082,"byte_end":587138,"line_start":905,"line_end":905,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587143,"byte_end":587146,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset, the HTTP/2.0 specification requires","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587151,"byte_end":587225,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ that any further frames received for that stream must be ignored for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587230,"byte_end":587302,"line_start":908,"line_end":908,"column_start":5,"column_end":77}},{"value":"/ \"some time\".","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587307,"byte_end":587323,"line_start":909,"line_end":909,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587328,"byte_end":587331,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587336,"byte_end":587412,"line_start":911,"line_end":911,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587417,"byte_end":587492,"line_start":912,"line_end":912,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587497,"byte_end":587532,"line_start":913,"line_end":913,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587537,"byte_end":587540,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The `reset_stream_duration` setting configures the max amount of time","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587545,"byte_end":587618,"line_start":915,"line_end":915,"column_start":5,"column_end":78}},{"value":"/ this state will be maintained in memory. Once the duration elapses, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587623,"byte_end":587698,"line_start":916,"line_end":916,"column_start":5,"column_end":80}},{"value":"/ stream state is purged from memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587703,"byte_end":587742,"line_start":917,"line_end":917,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587747,"byte_end":587750,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587755,"byte_end":587831,"line_start":919,"line_end":919,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587836,"byte_end":587907,"line_start":920,"line_end":920,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587912,"byte_end":587959,"line_start":921,"line_end":921,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587964,"byte_end":587967,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ The default value is 30 seconds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":587972,"byte_end":588008,"line_start":923,"line_end":923,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588013,"byte_end":588016,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588021,"byte_end":588035,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588040,"byte_end":588043,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588048,"byte_end":588055,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588060,"byte_end":588105,"line_start":928,"line_end":928,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588110,"byte_end":588134,"line_start":929,"line_end":929,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588139,"byte_end":588169,"line_start":930,"line_end":930,"column_start":5,"column_end":35}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588174,"byte_end":588197,"line_start":931,"line_end":931,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588202,"byte_end":588207,"line_start":932,"line_end":932,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588212,"byte_end":588275,"line_start":933,"line_end":933,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588280,"byte_end":588352,"line_start":934,"line_end":934,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588357,"byte_end":588364,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588369,"byte_end":588444,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588449,"byte_end":588466,"line_start":937,"line_end":937,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588471,"byte_end":588506,"line_start":938,"line_end":938,"column_start":5,"column_end":40}},{"value":"/     .reset_stream_duration(Duration::from_secs(10))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588511,"byte_end":588566,"line_start":939,"line_end":939,"column_start":5,"column_end":60}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588571,"byte_end":588597,"line_start":940,"line_end":940,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588602,"byte_end":588624,"line_start":941,"line_end":941,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588629,"byte_end":588636,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588641,"byte_end":588646,"line_start":943,"line_end":943,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588651,"byte_end":588673,"line_start":944,"line_end":944,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588678,"byte_end":588685,"line_start":945,"line_end":945,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590011,"byte_end":590022,"line_start":984,"line_end":984,"column_start":12,"column_end":23},"name":"enable_push","qualname":"<Builder>::enable_push","value":"pub fn enable_push(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables server push promises.","sig":null,"attributes":[{"value":"/ Enables or disables server push promises.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588826,"byte_end":588871,"line_start":951,"line_end":951,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588876,"byte_end":588879,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ This value is included in the initial SETTINGS handshake. When set, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588884,"byte_end":588959,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/ server MUST NOT send a push promise. Setting this value to value to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":588964,"byte_end":589035,"line_start":954,"line_end":954,"column_start":5,"column_end":76}},{"value":"/ false in the initial SETTINGS handshake guarantees that the remote server","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589040,"byte_end":589117,"line_start":955,"line_end":955,"column_start":5,"column_end":82}},{"value":"/ will never send a push promise.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589122,"byte_end":589157,"line_start":956,"line_end":956,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589162,"byte_end":589165,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ This setting can be changed during the life of a single HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589170,"byte_end":589238,"line_start":958,"line_end":958,"column_start":5,"column_end":73}},{"value":"/ connection by sending another settings frame updating the value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589243,"byte_end":589311,"line_start":959,"line_end":959,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589316,"byte_end":589319,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ Default value: `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589324,"byte_end":589350,"line_start":961,"line_end":961,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589355,"byte_end":589358,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589363,"byte_end":589377,"line_start":963,"line_end":963,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589382,"byte_end":589385,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589390,"byte_end":589397,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589402,"byte_end":589447,"line_start":966,"line_end":966,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589452,"byte_end":589476,"line_start":967,"line_end":967,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589481,"byte_end":589511,"line_start":968,"line_end":968,"column_start":5,"column_end":35}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589516,"byte_end":589539,"line_start":969,"line_end":969,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589544,"byte_end":589549,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589554,"byte_end":589617,"line_start":971,"line_end":971,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589622,"byte_end":589694,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589699,"byte_end":589706,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589711,"byte_end":589786,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589791,"byte_end":589808,"line_start":975,"line_end":975,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589813,"byte_end":589848,"line_start":976,"line_end":976,"column_start":5,"column_end":40}},{"value":"/     .enable_push(false)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589853,"byte_end":589880,"line_start":977,"line_end":977,"column_start":5,"column_end":32}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589885,"byte_end":589911,"line_start":978,"line_end":978,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589916,"byte_end":589938,"line_start":979,"line_end":979,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589943,"byte_end":589950,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589955,"byte_end":589960,"line_start":981,"line_end":981,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589965,"byte_end":589987,"line_start":982,"line_end":982,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":589992,"byte_end":589999,"line_start":983,"line_end":983,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592748,"byte_end":592757,"line_start":1061,"line_end":1061,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"pub fn handshake<T, B>(&Self, T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin, B: Buf + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2.0 client backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2.0 client backed by `io`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590477,"byte_end":590537,"line_start":1000,"line_end":1000,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590542,"byte_end":590545,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590550,"byte_end":590625,"line_start":1002,"line_end":1002,"column_start":5,"column_end":80}},{"value":"/ the [HTTP/2.0 handshake]. The handshake is completed once both the connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590630,"byte_end":590711,"line_start":1003,"line_end":1003,"column_start":5,"column_end":86}},{"value":"/ preface and the initial settings frame is sent by the client.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590716,"byte_end":590781,"line_start":1004,"line_end":1004,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590786,"byte_end":590789,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ The handshake future does not wait for the initial settings frame from the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590794,"byte_end":590872,"line_start":1006,"line_end":1006,"column_start":5,"column_end":83}},{"value":"/ server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590877,"byte_end":590888,"line_start":1007,"line_end":1007,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590893,"byte_end":590896,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ Returns a future which resolves to the [`Connection`] / [`SendRequest`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590901,"byte_end":590976,"line_start":1009,"line_end":1009,"column_start":5,"column_end":80}},{"value":"/ tuple once the HTTP/2.0 handshake has been completed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":590981,"byte_end":591038,"line_start":1010,"line_end":1010,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591043,"byte_end":591046,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ This function also allows the caller to configure the send payload data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591051,"byte_end":591126,"line_start":1012,"line_end":1012,"column_start":5,"column_end":80}},{"value":"/ type. See [Outbound data type] for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591131,"byte_end":591183,"line_start":1013,"line_end":1013,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591188,"byte_end":591191,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ [HTTP/2.0 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591196,"byte_end":591275,"line_start":1015,"line_end":1015,"column_start":5,"column_end":84}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591280,"byte_end":591322,"line_start":1016,"line_end":1016,"column_start":5,"column_end":47}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591327,"byte_end":591371,"line_start":1017,"line_end":1017,"column_start":5,"column_end":49}},{"value":"/ [Outbound data type]: ../index.html#outbound-data-type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591376,"byte_end":591435,"line_start":1018,"line_end":1018,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591440,"byte_end":591443,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591448,"byte_end":591462,"line_start":1020,"line_end":1020,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591467,"byte_end":591470,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591475,"byte_end":591491,"line_start":1022,"line_end":1022,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591496,"byte_end":591499,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591504,"byte_end":591511,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591516,"byte_end":591561,"line_start":1025,"line_end":1025,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591566,"byte_end":591590,"line_start":1026,"line_end":1026,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591595,"byte_end":591618,"line_start":1027,"line_end":1027,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591623,"byte_end":591628,"line_start":1028,"line_end":1028,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591633,"byte_end":591696,"line_start":1029,"line_end":1029,"column_start":5,"column_end":68}},{"value":"/     -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591701,"byte_end":591775,"line_start":1030,"line_end":1030,"column_start":5,"column_end":79}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591780,"byte_end":591787,"line_start":1031,"line_end":1031,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591792,"byte_end":591867,"line_start":1032,"line_end":1032,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591872,"byte_end":591889,"line_start":1033,"line_end":1033,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591894,"byte_end":591929,"line_start":1034,"line_end":1034,"column_start":5,"column_end":40}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591934,"byte_end":591960,"line_start":1035,"line_end":1035,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591965,"byte_end":591987,"line_start":1036,"line_end":1036,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":591992,"byte_end":591999,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592004,"byte_end":592009,"line_start":1038,"line_end":1038,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592014,"byte_end":592036,"line_start":1039,"line_end":1039,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592041,"byte_end":592048,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592053,"byte_end":592056,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Configures the send-payload data type. In this case, the outbound data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592061,"byte_end":592135,"line_start":1042,"line_end":1042,"column_start":5,"column_end":79}},{"value":"/ type will be `&'static [u8]`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592140,"byte_end":592173,"line_start":1043,"line_end":1043,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592178,"byte_end":592181,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592186,"byte_end":592193,"line_start":1045,"line_end":1045,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592198,"byte_end":592243,"line_start":1046,"line_end":1046,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592248,"byte_end":592272,"line_start":1047,"line_end":1047,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592277,"byte_end":592282,"line_start":1048,"line_end":1048,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592287,"byte_end":592350,"line_start":1049,"line_end":1049,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<&'static [u8]>, Connection<T, &'static [u8]>)), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592355,"byte_end":592443,"line_start":1050,"line_end":1050,"column_start":5,"column_end":93}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592448,"byte_end":592455,"line_start":1051,"line_end":1051,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592460,"byte_end":592535,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592540,"byte_end":592557,"line_start":1053,"line_end":1053,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592562,"byte_end":592597,"line_start":1054,"line_end":1054,"column_start":5,"column_end":40}},{"value":"/     .handshake::<_, &'static [u8]>(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592602,"byte_end":592648,"line_start":1055,"line_end":1055,"column_start":5,"column_end":51}},{"value":"/ # client_fut.await","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592653,"byte_end":592675,"line_start":1056,"line_end":1056,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592680,"byte_end":592687,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592692,"byte_end":592697,"line_start":1058,"line_end":1058,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592702,"byte_end":592724,"line_start":1059,"line_end":1059,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":592729,"byte_end":592736,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594404,"byte_end":594413,"line_start":1114,"line_end":1114,"column_start":14,"column_end":23},"name":"handshake","qualname":"::client::handshake","value":"pub async fn handshake<T>(T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2.0 client with default configuration\n values backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2.0 client with default configuration","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593115,"byte_end":593186,"line_start":1079,"line_end":1079,"column_start":1,"column_end":72}},{"value":"/ values backed by `io`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593187,"byte_end":593213,"line_start":1080,"line_end":1080,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593214,"byte_end":593217,"line_start":1081,"line_end":1081,"column_start":1,"column_end":4}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593218,"byte_end":593293,"line_start":1082,"line_end":1082,"column_start":1,"column_end":76}},{"value":"/ the [HTTP/2.0 handshake]. See [Handshake] for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593294,"byte_end":593357,"line_start":1083,"line_end":1083,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593358,"byte_end":593361,"line_start":1084,"line_end":1084,"column_start":1,"column_end":4}},{"value":"/ Returns a future which resolves to the [`Connection`] / [`SendRequest`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593362,"byte_end":593437,"line_start":1085,"line_end":1085,"column_start":1,"column_end":76}},{"value":"/ tuple once the HTTP/2.0 handshake has been completed. The returned","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593438,"byte_end":593508,"line_start":1086,"line_end":1086,"column_start":1,"column_end":71}},{"value":"/ [`Connection`] instance will be using default configuration values. Use","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593509,"byte_end":593584,"line_start":1087,"line_end":1087,"column_start":1,"column_end":76}},{"value":"/ [`Builder`] to customize the configuration values used by a [`Connection`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593585,"byte_end":593663,"line_start":1088,"line_end":1088,"column_start":1,"column_end":79}},{"value":"/ instance.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593664,"byte_end":593677,"line_start":1089,"line_end":1089,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593678,"byte_end":593681,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2.0 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593682,"byte_end":593761,"line_start":1091,"line_end":1091,"column_start":1,"column_end":80}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593762,"byte_end":593802,"line_start":1092,"line_end":1092,"column_start":1,"column_end":41}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593803,"byte_end":593845,"line_start":1093,"line_end":1093,"column_start":1,"column_end":43}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593846,"byte_end":593890,"line_start":1094,"line_end":1094,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593891,"byte_end":593894,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593895,"byte_end":593909,"line_start":1096,"line_end":1096,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593910,"byte_end":593913,"line_start":1097,"line_end":1097,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593914,"byte_end":593921,"line_start":1098,"line_end":1098,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593922,"byte_end":593967,"line_start":1099,"line_end":1099,"column_start":1,"column_end":46}},{"value":"/ # use h2::client;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593968,"byte_end":593989,"line_start":1100,"line_end":1100,"column_start":1,"column_end":22}},{"value":"/ # use h2::client::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593990,"byte_end":594014,"line_start":1101,"line_end":1101,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594015,"byte_end":594020,"line_start":1102,"line_end":1102,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) -> Result<(), h2::Error>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594021,"byte_end":594109,"line_start":1103,"line_end":1103,"column_start":1,"column_end":89}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594110,"byte_end":594117,"line_start":1104,"line_end":1104,"column_start":1,"column_end":8}},{"value":"/ let (send_request, connection) = client::handshake(my_io).await?;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594118,"byte_end":594187,"line_start":1105,"line_end":1105,"column_start":1,"column_end":70}},{"value":"/ // The HTTP/2.0 handshake has completed, now start polling","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594188,"byte_end":594250,"line_start":1106,"line_end":1106,"column_start":1,"column_end":63}},{"value":"/ // `connection` and use `send_request` to send requests to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594251,"byte_end":594317,"line_start":1107,"line_end":1107,"column_start":1,"column_end":67}},{"value":"/ // server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594318,"byte_end":594332,"line_start":1108,"line_end":1108,"column_start":1,"column_end":15}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594333,"byte_end":594345,"line_start":1109,"line_end":1109,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594346,"byte_end":594353,"line_start":1110,"line_end":1110,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594354,"byte_end":594359,"line_start":1111,"line_end":1111,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594360,"byte_end":594382,"line_start":1112,"line_end":1112,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":594383,"byte_end":594390,"line_start":1113,"line_end":1113,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597464,"byte_end":597486,"line_start":1208,"line_end":1208,"column_start":12,"column_end":34},"name":"set_target_window_size","qualname":"<Connection<T, B>>::set_target_window_size","value":"pub fn set_target_window_size(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the target window size for the whole connection.","sig":null,"attributes":[{"value":"/ Sets the target window size for the whole connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":596672,"byte_end":596729,"line_start":1191,"line_end":1191,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":596734,"byte_end":596737,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ If `size` is greater than the current value, then a `WINDOW_UPDATE`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":596742,"byte_end":596813,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ frame will be immediately sent to the remote, increasing the connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":596818,"byte_end":596893,"line_start":1194,"line_end":1194,"column_start":5,"column_end":80}},{"value":"/ level window by `size - current_value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":596898,"byte_end":596941,"line_start":1195,"line_end":1195,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":596946,"byte_end":596949,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current value, nothing will happen","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":596954,"byte_end":597019,"line_start":1197,"line_end":1197,"column_start":5,"column_end":70}},{"value":"/ immediately. However, as window capacity is released by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597024,"byte_end":597083,"line_start":1198,"line_end":1198,"column_start":5,"column_end":64}},{"value":"/ [`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597088,"byte_end":597157,"line_start":1199,"line_end":1199,"column_start":5,"column_end":74}},{"value":"/ out until the number of \"in flight\" bytes drops below `size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597162,"byte_end":597227,"line_start":1200,"line_end":1200,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597232,"byte_end":597235,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597240,"byte_end":597272,"line_start":1202,"line_end":1202,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597277,"byte_end":597280,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ See [`FlowControl`] documentation for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597285,"byte_end":597340,"line_start":1204,"line_end":1204,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597345,"byte_end":597348,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597353,"byte_end":597400,"line_start":1206,"line_end":1206,"column_start":5,"column_end":52}},{"value":"/ [library level]: ../index.html#flow-control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597405,"byte_end":597452,"line_start":1207,"line_end":1207,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598116,"byte_end":598139,"line_start":1226,"line_end":1226,"column_start":12,"column_end":35},"name":"set_initial_window_size","qualname":"<Connection<T, B>>::set_initial_window_size","value":"pub fn set_initial_window_size(&mut Self, u32) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597620,"byte_end":597692,"line_start":1213,"line_end":1213,"column_start":5,"column_end":77}},{"value":"/ flow control for received data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597697,"byte_end":597732,"line_start":1214,"line_end":1214,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597737,"byte_end":597740,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ The `SETTINGS` will be sent to the remote, and only applied once the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597745,"byte_end":597817,"line_start":1216,"line_end":1216,"column_start":5,"column_end":77}},{"value":"/ remote acknowledges the change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597822,"byte_end":597857,"line_start":1217,"line_end":1217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597862,"byte_end":597865,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ This can be used to increase or decrease the window size for existing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597870,"byte_end":597943,"line_start":1219,"line_end":1219,"column_start":5,"column_end":78}},{"value":"/ streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597948,"byte_end":597960,"line_start":1220,"line_end":1220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597965,"byte_end":597968,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597973,"byte_end":597985,"line_start":1222,"line_end":1222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597990,"byte_end":597993,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":597998,"byte_end":598070,"line_start":1224,"line_end":1224,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598075,"byte_end":598104,"line_start":1225,"line_end":1225,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598494,"byte_end":598503,"line_start":1237,"line_end":1237,"column_start":12,"column_end":21},"name":"ping_pong","qualname":"<Connection<T, B>>::ping_pong","value":"pub fn ping_pong(&mut Self) -> Option<PingPong>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `PingPong` instance from the connection.","sig":null,"attributes":[{"value":"/ Takes a `PingPong` instance from the connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598318,"byte_end":598370,"line_start":1232,"line_end":1232,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598375,"byte_end":598378,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598383,"byte_end":598393,"line_start":1234,"line_end":1234,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598398,"byte_end":598401,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ This may only be called once. Calling multiple times will return `None`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598406,"byte_end":598482,"line_start":1236,"line_end":1236,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599042,"byte_end":599069,"line_start":1250,"line_end":1250,"column_start":12,"column_end":39},"name":"max_concurrent_send_streams","qualname":"<Connection<T, B>>::max_concurrent_send_streams","value":"pub fn max_concurrent_send_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by this client.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598604,"byte_end":598678,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ by this client.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598683,"byte_end":598702,"line_start":1242,"line_end":1242,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598707,"byte_end":598710,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ This limit is configured by the server peer by sending the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598715,"byte_end":598777,"line_start":1244,"line_end":1244,"column_start":5,"column_end":67}},{"value":"/ [`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598782,"byte_end":598857,"line_start":1245,"line_end":1245,"column_start":5,"column_end":80}},{"value":"/ This method returns the currently acknowledged value recieved from the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598862,"byte_end":598936,"line_start":1246,"line_end":1246,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598941,"byte_end":598952,"line_start":1247,"line_end":1247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598957,"byte_end":598960,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ [settings]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":598965,"byte_end":599030,"line_start":1249,"line_end":1249,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599732,"byte_end":599759,"line_start":1265,"line_end":1265,"column_start":12,"column_end":39},"name":"max_concurrent_recv_streams","qualname":"<Connection<T, B>>::max_concurrent_recv_streams","value":"pub fn max_concurrent_recv_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the server on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599137,"byte_end":599211,"line_start":1254,"line_end":1254,"column_start":5,"column_end":79}},{"value":"/ by the server on this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599216,"byte_end":599253,"line_start":1255,"line_end":1255,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599258,"byte_end":599261,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ This returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599266,"byte_end":599334,"line_start":1257,"line_end":1257,"column_start":5,"column_end":73}},{"value":"/ parameter][1] sent in a `SETTINGS` frame that has been","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599339,"byte_end":599397,"line_start":1258,"line_end":1258,"column_start":5,"column_end":63}},{"value":"/ acknowledged by the remote peer. The value to be sent is configured by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599402,"byte_end":599476,"line_start":1259,"line_end":1259,"column_start":5,"column_end":79}},{"value":"/ the [`Builder::max_concurrent_streams`][2] method before handshaking","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599481,"byte_end":599553,"line_start":1260,"line_end":1260,"column_start":5,"column_end":77}},{"value":"/ with the remote peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599558,"byte_end":599583,"line_start":1261,"line_end":1261,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599588,"byte_end":599591,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599596,"byte_end":599654,"line_start":1263,"line_end":1263,"column_start":5,"column_end":63}},{"value":"/ [2]: ../struct.Builder.html#method.max_concurrent_streams","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599659,"byte_end":599720,"line_start":1264,"line_end":1264,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601031,"byte_end":601040,"line_start":1313,"line_end":1313,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<ResponseFuture>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600878,"byte_end":600927,"line_start":1308,"line_end":1308,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600932,"byte_end":600935,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600940,"byte_end":600952,"line_start":1310,"line_end":1310,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600957,"byte_end":600960,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600965,"byte_end":601019,"line_start":1312,"line_end":1312,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601313,"byte_end":601326,"line_start":1322,"line_end":1322,"column_start":12,"column_end":25},"name":"push_promises","qualname":"<ResponseFuture>::push_promises","value":"pub fn push_promises(&mut Self) -> PushPromises","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of PushPromises","sig":null,"attributes":[{"value":"/ Returns a stream of PushPromises","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601142,"byte_end":601178,"line_start":1316,"line_end":1316,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601183,"byte_end":601186,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601191,"byte_end":601203,"line_start":1318,"line_end":1318,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601208,"byte_end":601211,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ If this method has been called before","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601216,"byte_end":601257,"line_start":1320,"line_end":1320,"column_start":5,"column_end":46}},{"value":"/ or the stream was itself was pushed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601262,"byte_end":601301,"line_start":1321,"line_end":1321,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601701,"byte_end":601713,"line_start":1337,"line_end":1337,"column_start":18,"column_end":30},"name":"push_promise","qualname":"<PushPromises>::push_promise","value":"pub async fn push_promise<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the next `PushPromise`.\n","sig":null,"attributes":[{"value":"/ Get the next `PushPromise`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601652,"byte_end":601683,"line_start":1336,"line_end":1336,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601891,"byte_end":601908,"line_start":1342,"line_end":1342,"column_start":12,"column_end":29},"name":"poll_push_promise","qualname":"<PushPromises>::poll_push_promise","value":"pub fn poll_push_promise(&mut Self, &mut Context)\n-> Poll<Option<Result<PushPromise, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603026,"byte_end":603033,"line_start":1376,"line_end":1376,"column_start":12,"column_end":19},"name":"request","qualname":"<PushPromise>::request","value":"pub fn request(&Self) -> &Request<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the push promise's request headers.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the push promise's request headers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":602952,"byte_end":603014,"line_start":1375,"line_end":1375,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603174,"byte_end":603185,"line_start":1381,"line_end":1381,"column_start":12,"column_end":23},"name":"request_mut","qualname":"<PushPromise>::request_mut","value":"pub fn request_mut(&mut Self) -> &mut Request<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the push promise's request headers.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the push promise's request headers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603092,"byte_end":603162,"line_start":1380,"line_end":1380,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603362,"byte_end":603372,"line_start":1387,"line_end":1387,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PushPromise>::into_parts","value":"pub fn into_parts(Self) -> (Request<()>, PushedResponseFuture)","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the push promise's request headers and\n response future.\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the push promise's request headers and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603256,"byte_end":603325,"line_start":1385,"line_end":1385,"column_start":5,"column_end":74}},{"value":"/ response future.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603330,"byte_end":603350,"line_start":1386,"line_end":1386,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603932,"byte_end":603941,"line_start":1408,"line_end":1408,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<PushedResponseFuture>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603779,"byte_end":603828,"line_start":1403,"line_end":1403,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603833,"byte_end":603836,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603841,"byte_end":603853,"line_start":1405,"line_end":1405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603858,"byte_end":603861,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603866,"byte_end":603920,"line_start":1407,"line_end":1407,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3134},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3147},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3154},{"krate":0,"index":3157},{"krate":0,"index":3160},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3174},{"krate":0,"index":3177},{"krate":0,"index":3180},{"krate":0,"index":3183},{"krate":0,"index":3186},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3193},{"krate":0,"index":3196},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3216},{"krate":0,"index":3219},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3226},{"krate":0,"index":3229},{"krate":0,"index":3235},{"krate":0,"index":8562},{"krate":0,"index":8567},{"krate":0,"index":8569},{"krate":0,"index":8571},{"krate":0,"index":8574},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3256},{"krate":0,"index":3260},{"krate":0,"index":8577},{"krate":0,"index":8579},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3287},{"krate":0,"index":3291},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3314},{"krate":0,"index":3320},{"krate":0,"index":3324},{"krate":0,"index":3329},{"krate":0,"index":3334},{"krate":0,"index":3340},{"krate":0,"index":3347},{"krate":0,"index":3351},{"krate":0,"index":3361},{"krate":0,"index":3378},{"krate":0,"index":3382},{"krate":0,"index":3386},{"krate":0,"index":3390}],"decl_id":null,"docs":" Server implementation of the HTTP/2.0 protocol.","sig":null,"attributes":[{"value":"/ Server implementation of the HTTP/2.0 protocol.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607075,"byte_end":607126,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607127,"byte_end":607130,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607131,"byte_end":607152,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607153,"byte_end":607156,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Running an HTTP/2.0 server requires the caller to manage accepting the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607157,"byte_end":607231,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ connections as well as getting the connections to a state that is ready to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607232,"byte_end":607310,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ begin the HTTP/2.0 handshake. See [here](../index.html#handshake) for more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607311,"byte_end":607389,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607390,"byte_end":607402,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607403,"byte_end":607406,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This could be as basic as using Tokio's [`TcpListener`] to accept","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607407,"byte_end":607476,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ connections, but usually it means using either ALPN or HTTP/1.1 protocol","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607477,"byte_end":607553,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ upgrades.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607554,"byte_end":607567,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607568,"byte_end":607571,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once a connection is obtained, it is passed to [`handshake`],","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607572,"byte_end":607637,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ which will begin the [HTTP/2.0 handshake]. This returns a future that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607638,"byte_end":607711,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ completes once the handshake process is performed and HTTP/2.0 streams may","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607712,"byte_end":607790,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ be received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607791,"byte_end":607807,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607808,"byte_end":607811,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`handshake`] uses default configuration values. There are a number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607812,"byte_end":607886,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ settings that can be changed by using [`Builder`] instead.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607887,"byte_end":607949,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607950,"byte_end":607953,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Inbound streams","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607954,"byte_end":607975,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607976,"byte_end":607979,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to accept inbound HTTP/2.0 streams. It","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":607980,"byte_end":608058,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ does this by implementing [`futures::Stream`]. When a new stream is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608059,"byte_end":608130,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ received, a call to [`Connection::accept`] will return `(request, response)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608131,"byte_end":608212,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ The `request` handle (of type [`http::Request<RecvStream>`]) contains the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608213,"byte_end":608290,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ HTTP request head as well as provides a way to receive the inbound data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608291,"byte_end":608366,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ stream and the trailers. The `response` handle (of type [`SendResponse`])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608367,"byte_end":608444,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ allows responding to the request, stream the response payload, send","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608445,"byte_end":608516,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ trailers, and send push promises.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608517,"byte_end":608554,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608555,"byte_end":608558,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The send ([`SendStream`]) and receive ([`RecvStream`]) halves of the stream","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608559,"byte_end":608638,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ can be operated independently.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608639,"byte_end":608673,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608674,"byte_end":608677,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Managing the connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608678,"byte_end":608707,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608708,"byte_end":608711,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to manage connection state. The caller","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608712,"byte_end":608790,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ is required to call either [`Connection::accept`] or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608791,"byte_end":608847,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ [`Connection::poll_close`] in order to advance the connection state. Simply","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608848,"byte_end":608927,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ operating on [`SendStream`] or [`RecvStream`] will have no effect unless the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":608928,"byte_end":609008,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ connection state is advanced.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609009,"byte_end":609042,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609043,"byte_end":609046,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It is not required to call **both** [`Connection::accept`] and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609047,"byte_end":609113,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ [`Connection::poll_close`]. If the caller is ready to accept a new stream,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609114,"byte_end":609192,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ then only [`Connection::accept`] should be called. When the caller **does","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609193,"byte_end":609270,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ not** want to accept a new stream, [`Connection::poll_close`] should be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609271,"byte_end":609346,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609347,"byte_end":609358,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609359,"byte_end":609362,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance should only be dropped once","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609363,"byte_end":609422,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/ [`Connection::poll_close`] returns `Ready`. Once [`Connection::accept`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609423,"byte_end":609498,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ returns `Ready(None)`, there will no longer be any more inbound streams. At","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609499,"byte_end":609578,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ this point, only [`Connection::poll_close`] should be called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609579,"byte_end":609644,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609645,"byte_end":609648,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Shutting down the server","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609649,"byte_end":609679,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609680,"byte_end":609683,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Graceful shutdown of the server is [not yet","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609684,"byte_end":609731,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ implemented](https://github.com/hyperium/h2/issues/69).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609732,"byte_end":609791,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609792,"byte_end":609795,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609796,"byte_end":609809,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609810,"byte_end":609813,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A basic HTTP/2.0 server example that runs over TCP and assumes [prior","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609814,"byte_end":609887,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ knowledge], i.e. both the client and the server assume that the TCP socket","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609888,"byte_end":609966,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ will use the HTTP/2.0 protocol without prior negotiation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":609967,"byte_end":610028,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610029,"byte_end":610032,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610033,"byte_end":610046,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ use h2::server;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610047,"byte_end":610066,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/ use http::{Response, StatusCode};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610067,"byte_end":610104,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610105,"byte_end":610137,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610138,"byte_end":610141,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610142,"byte_end":610160,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ pub async fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610161,"byte_end":610186,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:5928\").await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610187,"byte_end":610265,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610266,"byte_end":610269,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     // Accept all incoming TCP connections.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610270,"byte_end":610317,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610318,"byte_end":610332,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/         if let Ok((socket, _peer_addr)) = listener.accept().await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610333,"byte_end":610404,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/             // Spawn a new task to process each connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610405,"byte_end":610468,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/             tokio::spawn(async {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610469,"byte_end":610505,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/                 // Start the HTTP/2.0 connection handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610506,"byte_end":610568,"line_start":80,"line_end":80,"column_start":1,"column_end":63}},{"value":"/                 let mut h2 = server::handshake(socket).await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610569,"byte_end":610643,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/                 // Accept all inbound HTTP/2.0 streams sent over the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610644,"byte_end":610716,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/                 // connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610717,"byte_end":610751,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/                 while let Some(request) = h2.accept().await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610752,"byte_end":610817,"line_start":84,"line_end":84,"column_start":1,"column_end":66}},{"value":"/                     let (request, mut respond) = request.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610818,"byte_end":610888,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/                     println!(\"Received request: {:?}\", request);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610889,"byte_end":610957,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610958,"byte_end":610961,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/                     // Build a response with no body","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":610962,"byte_end":611018,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/                     let response = Response::builder()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611019,"byte_end":611077,"line_start":89,"line_end":89,"column_start":1,"column_end":59}},{"value":"/                         .status(StatusCode::OK)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611078,"byte_end":611129,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/                         .body(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611130,"byte_end":611167,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/                         .unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611168,"byte_end":611206,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611207,"byte_end":611210,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/                     // Send the response back to the client","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611211,"byte_end":611274,"line_start":94,"line_end":94,"column_start":1,"column_end":64}},{"value":"/                     respond.send_response(response, true)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611275,"byte_end":611336,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/                         .unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611337,"byte_end":611375,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/                 }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611376,"byte_end":611397,"line_start":97,"line_end":97,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611398,"byte_end":611401,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/             });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611402,"byte_end":611421,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611422,"byte_end":611435,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611436,"byte_end":611445,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611446,"byte_end":611451,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611452,"byte_end":611459,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611460,"byte_end":611463,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [prior knowledge]: http://httpwg.org/specs/rfc7540.html#known-http","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611464,"byte_end":611534,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611535,"byte_end":611571,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [HTTP/2.0 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611572,"byte_end":611651,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611652,"byte_end":611688,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611689,"byte_end":611731,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/ [`Connection::poll`]: struct.Connection.html#method.poll","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611732,"byte_end":611792,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/ [`Connection::poll_close`]: struct.Connection.html#method.poll_close","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611793,"byte_end":611865,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ [`futures::Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611866,"byte_end":611951,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"/ [`http::Request<RecvStream>`]: ../struct.RecvStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":611952,"byte_end":612012,"line_start":113,"line_end":113,"column_start":1,"column_end":61}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612013,"byte_end":612058,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612059,"byte_end":612104,"line_start":115,"line_end":115,"column_start":1,"column_end":46}},{"value":"/ [`TcpListener`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612105,"byte_end":612195,"line_start":116,"line_end":116,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613306,"byte_end":613315,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"Handshake","qualname":"::server::Handshake","value":"Handshake {  }","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234}],"decl_id":null,"docs":" In progress HTTP/2.0 connection handshake future.","sig":null,"attributes":[{"value":"/ In progress HTTP/2.0 connection handshake future.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612749,"byte_end":612802,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612803,"byte_end":612806,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This type implements `Future`, yielding a `Connection` instance once the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612807,"byte_end":612883,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ handshake has completed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612884,"byte_end":612912,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612913,"byte_end":612916,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The handshake is completed once the connection preface is fully received","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612917,"byte_end":612993,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ from the client **and** the initial settings frame is sent to the client.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":612994,"byte_end":613071,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613072,"byte_end":613075,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The handshake future does not wait for the initial settings frame from the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613076,"byte_end":613154,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ client.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613155,"byte_end":613166,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613167,"byte_end":613170,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613171,"byte_end":613216,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613217,"byte_end":613220,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613221,"byte_end":613245,"line_start":146,"line_end":146,"column_start":1,"column_end":25}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613246,"byte_end":613294,"line_start":147,"line_end":147,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615003,"byte_end":615013,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"Connection","qualname":"::server::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":3238}],"decl_id":null,"docs":" Accepts inbound HTTP/2.0 streams on a connection.","sig":null,"attributes":[{"value":"/ Accepts inbound HTTP/2.0 streams on a connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613569,"byte_end":613622,"line_start":157,"line_end":157,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613623,"byte_end":613626,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ A `Connection` is backed by an I/O resource (usually a TCP socket) and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613627,"byte_end":613701,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ implements the HTTP/2.0 server logic for that connection. It is responsible","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613702,"byte_end":613781,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ for receiving inbound streams initiated by the client as well as driving the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613782,"byte_end":613862,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ internal state forward.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613863,"byte_end":613890,"line_start":162,"line_end":162,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613891,"byte_end":613894,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ `Connection` values are created by calling [`handshake`]. Once a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613895,"byte_end":613963,"line_start":164,"line_end":164,"column_start":1,"column_end":69}},{"value":"/ `Connection` value is obtained, the caller must call [`poll`] or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":613964,"byte_end":614032,"line_start":165,"line_end":165,"column_start":1,"column_end":69}},{"value":"/ [`poll_close`] in order to drive the internal connection state forward.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614033,"byte_end":614108,"line_start":166,"line_end":166,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614109,"byte_end":614112,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more details","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614113,"byte_end":614166,"line_start":168,"line_end":168,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614167,"byte_end":614170,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614171,"byte_end":614201,"line_start":170,"line_end":170,"column_start":1,"column_end":31}},{"value":"/ [`handshake`]: struct.Connection.html#method.handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614202,"byte_end":614260,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/ [`poll`]: struct.Connection.html#method.poll","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614261,"byte_end":614309,"line_start":172,"line_end":172,"column_start":1,"column_end":49}},{"value":"/ [`poll_close`]: struct.Connection.html#method.poll_close","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614310,"byte_end":614370,"line_start":173,"line_end":173,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614371,"byte_end":614374,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614375,"byte_end":614389,"line_start":175,"line_end":175,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614390,"byte_end":614393,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614394,"byte_end":614401,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614402,"byte_end":614447,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ # use h2::server;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614448,"byte_end":614469,"line_start":179,"line_end":179,"column_start":1,"column_end":22}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614470,"byte_end":614494,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614495,"byte_end":614500,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614501,"byte_end":614566,"line_start":182,"line_end":182,"column_start":1,"column_end":66}},{"value":"/ let mut server = server::handshake(my_io).await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614567,"byte_end":614628,"line_start":183,"line_end":183,"column_start":1,"column_end":62}},{"value":"/ while let Some(request) = server.accept().await {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614629,"byte_end":614682,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614683,"byte_end":614716,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/         let (request, respond) = request.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614717,"byte_end":614771,"line_start":186,"line_end":186,"column_start":1,"column_end":55}},{"value":"/         // Process the request and send the response back to the client","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614772,"byte_end":614847,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/         // using `respond`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614848,"byte_end":614879,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614880,"byte_end":614891,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614892,"byte_end":614897,"line_start":190,"line_end":190,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614898,"byte_end":614905,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614906,"byte_end":614911,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614912,"byte_end":614934,"line_start":193,"line_end":193,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614935,"byte_end":614942,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":614943,"byte_end":614991,"line_start":195,"line_end":195,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8562},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616154,"byte_end":616161,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"Builder","qualname":"::server::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":8563},{"krate":0,"index":8564},{"krate":0,"index":8565},{"krate":0,"index":8566}],"decl_id":null,"docs":" Builds server connections with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds server connections with custom configuration values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615077,"byte_end":615140,"line_start":200,"line_end":200,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615141,"byte_end":615144,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615145,"byte_end":615213,"line_start":202,"line_end":202,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615214,"byte_end":615217,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ The server is constructed by calling [`handshake`] and passing the I/O","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615218,"byte_end":615292,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ handle that will back the HTTP/2.0 server.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615293,"byte_end":615339,"line_start":205,"line_end":205,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615340,"byte_end":615343,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615344,"byte_end":615409,"line_start":207,"line_end":207,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615410,"byte_end":615413,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various server","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615414,"byte_end":615484,"line_start":209,"line_end":209,"column_start":1,"column_end":71}},{"value":"/ configuration settings.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615485,"byte_end":615512,"line_start":210,"line_end":210,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615513,"byte_end":615516,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`Builder::new`]: struct.Builder.html#method.new","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615517,"byte_end":615569,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`handshake`]: struct.Builder.html#method.handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615570,"byte_end":615625,"line_start":213,"line_end":213,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615626,"byte_end":615629,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615630,"byte_end":615644,"line_start":215,"line_end":215,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615645,"byte_end":615648,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615649,"byte_end":615656,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615657,"byte_end":615702,"line_start":218,"line_end":218,"column_start":1,"column_end":46}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615703,"byte_end":615727,"line_start":219,"line_end":219,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615728,"byte_end":615733,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615734,"byte_end":615791,"line_start":221,"line_end":221,"column_start":1,"column_end":58}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615792,"byte_end":615813,"line_start":222,"line_end":222,"column_start":1,"column_end":22}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615814,"byte_end":615821,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615822,"byte_end":615897,"line_start":224,"line_end":224,"column_start":1,"column_end":76}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615898,"byte_end":615915,"line_start":225,"line_end":225,"column_start":1,"column_end":18}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615916,"byte_end":615951,"line_start":226,"line_end":226,"column_start":1,"column_end":36}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615952,"byte_end":615991,"line_start":227,"line_end":227,"column_start":1,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":615992,"byte_end":616029,"line_start":228,"line_end":228,"column_start":1,"column_end":38}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616030,"byte_end":616056,"line_start":229,"line_end":229,"column_start":1,"column_end":27}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616057,"byte_end":616073,"line_start":230,"line_end":230,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616074,"byte_end":616081,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616082,"byte_end":616087,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616088,"byte_end":616110,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616111,"byte_end":616118,"line_start":234,"line_end":234,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8571},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617146,"byte_end":617158,"line_start":266,"line_end":266,"column_start":12,"column_end":24},"name":"SendResponse","qualname":"::server::SendResponse","value":"SendResponse {  }","parent":null,"children":[{"krate":0,"index":8573}],"decl_id":null,"docs":" Send a response back to the client","sig":null,"attributes":[{"value":"/ Send a response back to the client","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616572,"byte_end":616610,"line_start":250,"line_end":250,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616611,"byte_end":616614,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ A `SendResponse` instance is provided when receiving a request and is used","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616615,"byte_end":616693,"line_start":252,"line_end":252,"column_start":1,"column_end":79}},{"value":"/ to send the associated response back to the client. It is also used to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616694,"byte_end":616768,"line_start":253,"line_end":253,"column_start":1,"column_end":75}},{"value":"/ explicitly reset the stream with a custom reason.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616769,"byte_end":616822,"line_start":254,"line_end":254,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616823,"byte_end":616826,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ It will also be used to initiate push promises linked with the associated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616827,"byte_end":616904,"line_start":256,"line_end":256,"column_start":1,"column_end":78}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616905,"byte_end":616916,"line_start":257,"line_end":257,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616917,"byte_end":616920,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ If the `SendResponse` instance is dropped without sending a response, then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":616921,"byte_end":616999,"line_start":259,"line_end":259,"column_start":1,"column_end":79}},{"value":"/ the HTTP/2.0 stream will be reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617000,"byte_end":617038,"line_start":260,"line_end":260,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617039,"byte_end":617042,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617043,"byte_end":617088,"line_start":262,"line_end":262,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617089,"byte_end":617092,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617093,"byte_end":617117,"line_start":264,"line_end":264,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617731,"byte_end":617749,"line_start":284,"line_end":284,"column_start":12,"column_end":30},"name":"SendPushedResponse","qualname":"::server::SendPushedResponse","value":"SendPushedResponse {  }","parent":null,"children":[{"krate":0,"index":3241}],"decl_id":null,"docs":" Send a response to a promised request","sig":null,"attributes":[{"value":"/ Send a response to a promised request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617204,"byte_end":617245,"line_start":270,"line_end":270,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617246,"byte_end":617249,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ A `SendPushedResponse` instance is provided when promising a request and is used","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617250,"byte_end":617334,"line_start":272,"line_end":272,"column_start":1,"column_end":85}},{"value":"/ to send the associated response to the client. It is also used to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617335,"byte_end":617404,"line_start":273,"line_end":273,"column_start":1,"column_end":70}},{"value":"/ explicitly reset the stream with a custom reason.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617405,"byte_end":617458,"line_start":274,"line_end":274,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617459,"byte_end":617462,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ It can not be used to initiate push promises.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617463,"byte_end":617512,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617513,"byte_end":617516,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ If the `SendPushedResponse` instance is dropped without sending a response, then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617517,"byte_end":617601,"line_start":278,"line_end":278,"column_start":1,"column_end":85}},{"value":"/ the HTTP/2.0 stream will be reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617602,"byte_end":617640,"line_start":279,"line_end":279,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617641,"byte_end":617644,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617645,"byte_end":617690,"line_start":281,"line_end":281,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617691,"byte_end":617694,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617695,"byte_end":617719,"line_start":283,"line_end":283,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619859,"byte_end":619868,"line_start":352,"line_end":352,"column_start":8,"column_end":17},"name":"handshake","qualname":"::server::handshake","value":"pub fn handshake<T>(T) -> Handshake<T, Bytes> where T: AsyncRead +\nAsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2.0 server with default configuration\n values backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2.0 server with default configuration","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":618722,"byte_end":618793,"line_start":321,"line_end":321,"column_start":1,"column_end":72}},{"value":"/ values backed by `io`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":618794,"byte_end":618820,"line_start":322,"line_end":322,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":618821,"byte_end":618824,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":618825,"byte_end":618900,"line_start":324,"line_end":324,"column_start":1,"column_end":76}},{"value":"/ the [HTTP/2.0 handshake]. See [Handshake] for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":618901,"byte_end":618964,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":618965,"byte_end":618968,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Returns a future which resolves to the [`Connection`] instance once the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":618969,"byte_end":619044,"line_start":327,"line_end":327,"column_start":1,"column_end":76}},{"value":"/ HTTP/2.0 handshake has been completed. The returned [`Connection`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619045,"byte_end":619115,"line_start":328,"line_end":328,"column_start":1,"column_end":71}},{"value":"/ instance will be using default configuration values. Use [`Builder`] to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619116,"byte_end":619191,"line_start":329,"line_end":329,"column_start":1,"column_end":76}},{"value":"/ customize the configuration values used by a [`Connection`] instance.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619192,"byte_end":619265,"line_start":330,"line_end":330,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619266,"byte_end":619269,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2.0 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619270,"byte_end":619349,"line_start":332,"line_end":332,"column_start":1,"column_end":80}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619350,"byte_end":619390,"line_start":333,"line_end":333,"column_start":1,"column_end":41}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619391,"byte_end":619433,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619434,"byte_end":619437,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619438,"byte_end":619452,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619453,"byte_end":619456,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619457,"byte_end":619464,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619465,"byte_end":619510,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ # use h2::server;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619511,"byte_end":619532,"line_start":340,"line_end":340,"column_start":1,"column_end":22}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619533,"byte_end":619557,"line_start":341,"line_end":341,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619558,"byte_end":619563,"line_start":342,"line_end":342,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619564,"byte_end":619627,"line_start":343,"line_end":343,"column_start":1,"column_end":64}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619628,"byte_end":619635,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"/ let connection = server::handshake(my_io).await.unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619636,"byte_end":619697,"line_start":345,"line_end":345,"column_start":1,"column_end":62}},{"value":"/ // The HTTP/2.0 handshake has completed, now use `connection` to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619698,"byte_end":619766,"line_start":346,"line_end":346,"column_start":1,"column_end":69}},{"value":"/ // accept inbound HTTP/2.0 streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619767,"byte_end":619806,"line_start":347,"line_end":347,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619807,"byte_end":619814,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619815,"byte_end":619820,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619821,"byte_end":619843,"line_start":350,"line_end":350,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":619844,"byte_end":619851,"line_start":351,"line_end":351,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":621093,"byte_end":621099,"line_start":399,"line_end":399,"column_start":18,"column_end":24},"name":"accept","qualname":"<Connection<T, B>>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accept the next incoming request on this connection.\n","sig":null,"attributes":[{"value":"/ Accept the next incoming request on this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":621019,"byte_end":621075,"line_start":398,"line_end":398,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":621313,"byte_end":621324,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Connection<T, B>>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<Option<Result<(Request<RecvStream>, SendResponse<B>), crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623079,"byte_end":623101,"line_start":449,"line_end":449,"column_start":12,"column_end":34},"name":"set_target_window_size","qualname":"<Connection<T, B>>::set_target_window_size","value":"pub fn set_target_window_size(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the target window size for the whole connection.","sig":null,"attributes":[{"value":"/ Sets the target window size for the whole connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622287,"byte_end":622344,"line_start":432,"line_end":432,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622349,"byte_end":622352,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ If `size` is greater than the current value, then a `WINDOW_UPDATE`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622357,"byte_end":622428,"line_start":434,"line_end":434,"column_start":5,"column_end":76}},{"value":"/ frame will be immediately sent to the remote, increasing the connection","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622433,"byte_end":622508,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ level window by `size - current_value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622513,"byte_end":622556,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622561,"byte_end":622564,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current value, nothing will happen","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622569,"byte_end":622634,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/ immediately. However, as window capacity is released by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622639,"byte_end":622698,"line_start":439,"line_end":439,"column_start":5,"column_end":64}},{"value":"/ [`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622703,"byte_end":622772,"line_start":440,"line_end":440,"column_start":5,"column_end":74}},{"value":"/ out until the number of \"in flight\" bytes drops below `size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622777,"byte_end":622842,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622847,"byte_end":622850,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622855,"byte_end":622887,"line_start":443,"line_end":443,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622892,"byte_end":622895,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ See [`FlowControl`] documentation for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622900,"byte_end":622955,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622960,"byte_end":622963,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":622968,"byte_end":623015,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/ [library level]: ../index.html#flow-control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623020,"byte_end":623067,"line_start":448,"line_end":448,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623736,"byte_end":623759,"line_start":467,"line_end":467,"column_start":12,"column_end":35},"name":"set_initial_window_size","qualname":"<Connection<T, B>>::set_initial_window_size","value":"pub fn set_initial_window_size(&mut Self, u32) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623240,"byte_end":623312,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ flow control for received data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623317,"byte_end":623352,"line_start":455,"line_end":455,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623357,"byte_end":623360,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The `SETTINGS` will be sent to the remote, and only applied once the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623365,"byte_end":623437,"line_start":457,"line_end":457,"column_start":5,"column_end":77}},{"value":"/ remote acknowledges the change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623442,"byte_end":623477,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623482,"byte_end":623485,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This can be used to increase or decrease the window size for existing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623490,"byte_end":623563,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623568,"byte_end":623580,"line_start":461,"line_end":461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623585,"byte_end":623588,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623593,"byte_end":623605,"line_start":463,"line_end":463,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623610,"byte_end":623613,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623618,"byte_end":623690,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623695,"byte_end":623724,"line_start":466,"line_end":466,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624605,"byte_end":624616,"line_start":486,"line_end":486,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Connection<T, B>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ready` when the underlying connection has closed.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the underlying connection has closed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":623943,"byte_end":624005,"line_start":473,"line_end":473,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624010,"byte_end":624013,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ If any new inbound streams are received during a call to `poll_closed`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624018,"byte_end":624093,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ they will be queued and returned on the next call to [`poll_accept`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624098,"byte_end":624171,"line_start":476,"line_end":476,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624176,"byte_end":624179,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This function will advance the internal connection state, driving","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624184,"byte_end":624253,"line_start":478,"line_end":478,"column_start":5,"column_end":74}},{"value":"/ progress on all the other handles (e.g. [`RecvStream`] and [`SendStream`]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624258,"byte_end":624337,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624342,"byte_end":624345,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ See [here](index.html#managing-the-connection) for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624350,"byte_end":624418,"line_start":481,"line_end":481,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624423,"byte_end":624426,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [`poll_accept`]: struct.Connection.html#method.poll_accept","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624431,"byte_end":624493,"line_start":483,"line_end":483,"column_start":5,"column_end":67}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624498,"byte_end":624543,"line_start":484,"line_end":484,"column_start":5,"column_end":50}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624548,"byte_end":624593,"line_start":485,"line_end":485,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624823,"byte_end":624833,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"poll_close","qualname":"<Connection<T, B>>::poll_close","value":"pub fn poll_close(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to poll_closed\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624765,"byte_end":624811,"line_start":491,"line_end":491,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625518,"byte_end":625533,"line_start":508,"line_end":508,"column_start":12,"column_end":27},"name":"abrupt_shutdown","qualname":"<Connection<T, B>>::abrupt_shutdown","value":"pub fn abrupt_shutdown(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Sets the connection to a GOAWAY state.","sig":null,"attributes":[{"value":"/ Sets the connection to a GOAWAY state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624939,"byte_end":624981,"line_start":496,"line_end":496,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624986,"byte_end":624989,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Does not terminate the connection. Must continue being polled to close","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":624994,"byte_end":625068,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625073,"byte_end":625088,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625093,"byte_end":625096,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ After flushing the GOAWAY frame, the connection is closed. Any","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625101,"byte_end":625167,"line_start":501,"line_end":501,"column_start":5,"column_end":71}},{"value":"/ outstanding streams do not prevent the connection from closing. This","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625172,"byte_end":625244,"line_start":502,"line_end":502,"column_start":5,"column_end":77}},{"value":"/ should usually be reserved for shutting down when something bad","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625249,"byte_end":625316,"line_start":503,"line_end":503,"column_start":5,"column_end":72}},{"value":"/ external to `h2` has happened, and open streams cannot be properly","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625321,"byte_end":625391,"line_start":504,"line_end":504,"column_start":5,"column_end":75}},{"value":"/ handled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625396,"byte_end":625408,"line_start":505,"line_end":505,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625413,"byte_end":625416,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ For graceful shutdowns, see [`graceful_shutdown`](Connection::graceful_shutdown).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625421,"byte_end":625506,"line_start":507,"line_end":507,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626099,"byte_end":626116,"line_start":522,"line_end":522,"column_start":12,"column_end":29},"name":"graceful_shutdown","qualname":"<Connection<T, B>>::graceful_shutdown","value":"pub fn graceful_shutdown(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Starts a [graceful shutdown][1] process.","sig":null,"attributes":[{"value":"/ Starts a [graceful shutdown][1] process.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625625,"byte_end":625669,"line_start":512,"line_end":512,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625674,"byte_end":625677,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Must continue being polled to close connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625682,"byte_end":625733,"line_start":514,"line_end":514,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625738,"byte_end":625741,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ It's possible to receive more requests after calling this method, since","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625746,"byte_end":625821,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ they might have been in-flight from the client already. After about","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625826,"byte_end":625897,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ 1 RTT, no new requests should be accepted. Once all active streams","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625902,"byte_end":625972,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ have completed, the connection is closed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":625977,"byte_end":626022,"line_start":519,"line_end":519,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626027,"byte_end":626030,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [1]: http://httpwg.org/specs/rfc7540.html#GOAWAY","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626035,"byte_end":626087,"line_start":521,"line_end":521,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626363,"byte_end":626372,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"ping_pong","qualname":"<Connection<T, B>>::ping_pong","value":"pub fn ping_pong(&mut Self) -> Option<PingPong>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `PingPong` instance from the connection.","sig":null,"attributes":[{"value":"/ Takes a `PingPong` instance from the connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626187,"byte_end":626239,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626244,"byte_end":626247,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626252,"byte_end":626262,"line_start":528,"line_end":528,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626267,"byte_end":626270,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ This may only be called once. Calling multiple times will return `None`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626275,"byte_end":626351,"line_start":530,"line_end":530,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626927,"byte_end":626954,"line_start":544,"line_end":544,"column_start":12,"column_end":39},"name":"max_concurrent_send_streams","qualname":"<Connection<T, B>>::max_concurrent_send_streams","value":"pub fn max_concurrent_send_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the server on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626478,"byte_end":626552,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ by the server on this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626557,"byte_end":626594,"line_start":536,"line_end":536,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626599,"byte_end":626602,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This limit is configured by the client peer by sending the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626607,"byte_end":626669,"line_start":538,"line_end":538,"column_start":5,"column_end":67}},{"value":"/ [`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626674,"byte_end":626749,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ This method returns the currently acknowledged value recieved from the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626754,"byte_end":626828,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626833,"byte_end":626844,"line_start":541,"line_end":541,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626849,"byte_end":626852,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":626857,"byte_end":626915,"line_start":543,"line_end":543,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627622,"byte_end":627649,"line_start":559,"line_end":559,"column_start":12,"column_end":39},"name":"max_concurrent_recv_streams","qualname":"<Connection<T, B>>::max_concurrent_recv_streams","value":"pub fn max_concurrent_recv_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the client on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627027,"byte_end":627101,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/ by the client on this connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627106,"byte_end":627143,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627148,"byte_end":627151,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627156,"byte_end":627224,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/ parameter][1] sent in a `SETTINGS` frame that has been","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627229,"byte_end":627287,"line_start":552,"line_end":552,"column_start":5,"column_end":63}},{"value":"/ acknowledged by the remote peer. The value to be sent is configured by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627292,"byte_end":627366,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ the [`Builder::max_concurrent_streams`][2] method before handshaking","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627371,"byte_end":627443,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"/ with the remote peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627448,"byte_end":627473,"line_start":555,"line_end":555,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627478,"byte_end":627481,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627486,"byte_end":627544,"line_start":557,"line_end":557,"column_start":5,"column_end":63}},{"value":"/ [2]: ../struct.Builder.html#method.max_concurrent_streams","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":627549,"byte_end":627610,"line_start":558,"line_end":558,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629165,"byte_end":629168,"line_start":617,"line_end":617,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new server builder instance initialized with default\n configuration values.","sig":null,"attributes":[{"value":"/ Returns a new server builder instance initialized with default","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628406,"byte_end":628472,"line_start":592,"line_end":592,"column_start":5,"column_end":71}},{"value":"/ configuration values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628477,"byte_end":628502,"line_start":593,"line_end":593,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628507,"byte_end":628510,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628515,"byte_end":628576,"line_start":595,"line_end":595,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628581,"byte_end":628584,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628589,"byte_end":628603,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628608,"byte_end":628611,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628616,"byte_end":628623,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628628,"byte_end":628673,"line_start":600,"line_end":600,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628678,"byte_end":628702,"line_start":601,"line_end":601,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628707,"byte_end":628712,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628717,"byte_end":628774,"line_start":603,"line_end":603,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628779,"byte_end":628800,"line_start":604,"line_end":604,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628805,"byte_end":628812,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628817,"byte_end":628892,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628897,"byte_end":628914,"line_start":607,"line_end":607,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628919,"byte_end":628954,"line_start":608,"line_end":608,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628959,"byte_end":628998,"line_start":609,"line_end":609,"column_start":5,"column_end":44}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629003,"byte_end":629040,"line_start":610,"line_end":610,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629045,"byte_end":629071,"line_start":611,"line_end":611,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629076,"byte_end":629092,"line_start":612,"line_end":612,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629097,"byte_end":629104,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629109,"byte_end":629114,"line_start":614,"line_end":614,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629119,"byte_end":629141,"line_start":615,"line_end":615,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629146,"byte_end":629153,"line_start":616,"line_end":616,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630361,"byte_end":630380,"line_start":655,"line_end":655,"column_start":12,"column_end":31},"name":"initial_window_size","qualname":"<Builder>::initial_window_size","value":"pub fn initial_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for stream-level","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629476,"byte_end":629542,"line_start":626,"line_end":626,"column_start":5,"column_end":71}},{"value":"/ flow control for received data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629547,"byte_end":629582,"line_start":627,"line_end":627,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629587,"byte_end":629590,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The initial window of a stream is used as part of flow control. For more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629595,"byte_end":629671,"line_start":629,"line_end":629,"column_start":5,"column_end":81}},{"value":"/ details, see [`FlowControl`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629676,"byte_end":629709,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629714,"byte_end":629717,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629722,"byte_end":629754,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629759,"byte_end":629762,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629767,"byte_end":629814,"line_start":634,"line_end":634,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629819,"byte_end":629822,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629827,"byte_end":629841,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629846,"byte_end":629849,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629854,"byte_end":629861,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629866,"byte_end":629911,"line_start":639,"line_end":639,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629916,"byte_end":629940,"line_start":640,"line_end":640,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629945,"byte_end":629950,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":629955,"byte_end":630012,"line_start":642,"line_end":642,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630017,"byte_end":630038,"line_start":643,"line_end":643,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630043,"byte_end":630050,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630055,"byte_end":630130,"line_start":645,"line_end":645,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630135,"byte_end":630152,"line_start":646,"line_end":646,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630157,"byte_end":630192,"line_start":647,"line_end":647,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630197,"byte_end":630236,"line_start":648,"line_end":648,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630241,"byte_end":630267,"line_start":649,"line_end":649,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630272,"byte_end":630288,"line_start":650,"line_end":650,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630293,"byte_end":630300,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630305,"byte_end":630310,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630315,"byte_end":630337,"line_start":653,"line_end":653,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630342,"byte_end":630349,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631405,"byte_end":631435,"line_start":689,"line_end":689,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Builder>::initial_connection_window_size","value":"pub fn initial_connection_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for connection-level flow control\n for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for connection-level flow control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630501,"byte_end":630584,"line_start":660,"line_end":660,"column_start":5,"column_end":88}},{"value":"/ for received data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630589,"byte_end":630611,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630616,"byte_end":630619,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ The initial window of a connection is used as part of flow control. For more details,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630624,"byte_end":630713,"line_start":663,"line_end":663,"column_start":5,"column_end":94}},{"value":"/ see [`FlowControl`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630718,"byte_end":630742,"line_start":664,"line_end":664,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630747,"byte_end":630750,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630755,"byte_end":630787,"line_start":666,"line_end":666,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630792,"byte_end":630795,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630800,"byte_end":630847,"line_start":668,"line_end":668,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630852,"byte_end":630855,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630860,"byte_end":630874,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630879,"byte_end":630882,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630887,"byte_end":630894,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630899,"byte_end":630944,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630949,"byte_end":630973,"line_start":674,"line_end":674,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630978,"byte_end":630983,"line_start":675,"line_end":675,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":630988,"byte_end":631045,"line_start":676,"line_end":676,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631050,"byte_end":631071,"line_start":677,"line_end":677,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631076,"byte_end":631083,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631088,"byte_end":631163,"line_start":679,"line_end":679,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631168,"byte_end":631185,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631190,"byte_end":631225,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/     .initial_connection_window_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631230,"byte_end":631280,"line_start":682,"line_end":682,"column_start":5,"column_end":55}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631285,"byte_end":631311,"line_start":683,"line_end":683,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631316,"byte_end":631332,"line_start":684,"line_end":684,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631337,"byte_end":631344,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631349,"byte_end":631354,"line_start":686,"line_end":686,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631359,"byte_end":631381,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631386,"byte_end":631393,"line_start":688,"line_end":688,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632634,"byte_end":632648,"line_start":727,"line_end":727,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Builder>::max_frame_size","value":"pub fn max_frame_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the size (in octets) of the largest HTTP/2.0 frame payload that the\n configured server is able to accept.","sig":null,"attributes":[{"value":"/ Indicates the size (in octets) of the largest HTTP/2.0 frame payload that the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631562,"byte_end":631643,"line_start":694,"line_end":694,"column_start":5,"column_end":86}},{"value":"/ configured server is able to accept.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631648,"byte_end":631688,"line_start":695,"line_end":695,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631693,"byte_end":631696,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The sender may send data frames that are **smaller** than this value,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631701,"byte_end":631774,"line_start":697,"line_end":697,"column_start":5,"column_end":78}},{"value":"/ but any data larger than `max` will be broken up into multiple `DATA`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631779,"byte_end":631852,"line_start":698,"line_end":698,"column_start":5,"column_end":78}},{"value":"/ frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631857,"byte_end":631868,"line_start":699,"line_end":699,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631873,"byte_end":631876,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ The value **must** be between 16,384 and 16,777,215. The default value is 16,384.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631881,"byte_end":631966,"line_start":701,"line_end":701,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631971,"byte_end":631974,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631979,"byte_end":631993,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":631998,"byte_end":632001,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632006,"byte_end":632013,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632018,"byte_end":632063,"line_start":706,"line_end":706,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632068,"byte_end":632092,"line_start":707,"line_end":707,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632097,"byte_end":632102,"line_start":708,"line_end":708,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632107,"byte_end":632164,"line_start":709,"line_end":709,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632169,"byte_end":632190,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632195,"byte_end":632202,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632207,"byte_end":632282,"line_start":712,"line_end":712,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632287,"byte_end":632304,"line_start":713,"line_end":713,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632309,"byte_end":632344,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/     .max_frame_size(1_000_000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632349,"byte_end":632383,"line_start":715,"line_end":715,"column_start":5,"column_end":39}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632388,"byte_end":632414,"line_start":716,"line_end":716,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632419,"byte_end":632435,"line_start":717,"line_end":717,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632440,"byte_end":632447,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632452,"byte_end":632457,"line_start":719,"line_end":719,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632462,"byte_end":632484,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632489,"byte_end":632496,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632501,"byte_end":632504,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632509,"byte_end":632521,"line_start":723,"line_end":723,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632526,"byte_end":632529,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is not within the legal range specified","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632534,"byte_end":632607,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ above.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632612,"byte_end":632622,"line_start":726,"line_end":726,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633817,"byte_end":633837,"line_start":761,"line_end":761,"column_start":12,"column_end":32},"name":"max_header_list_size","qualname":"<Builder>::max_header_list_size","value":"pub fn max_header_list_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max size of received header frames.","sig":null,"attributes":[{"value":"/ Sets the max size of received header frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632762,"byte_end":632810,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632815,"byte_end":632818,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This advisory setting informs a peer of the maximum size of header list","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632823,"byte_end":632898,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ that the sender is prepared to accept, in octets. The value is based on","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632903,"byte_end":632978,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ the uncompressed size of header fields, including the length of the name","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":632983,"byte_end":633059,"line_start":736,"line_end":736,"column_start":5,"column_end":81}},{"value":"/ and value in octets plus an overhead of 32 octets for each header field.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633064,"byte_end":633140,"line_start":737,"line_end":737,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633145,"byte_end":633148,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ This setting is also used to limit the maximum amount of data that is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633153,"byte_end":633226,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ buffered to decode HEADERS frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633231,"byte_end":633269,"line_start":740,"line_end":740,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633274,"byte_end":633277,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633282,"byte_end":633296,"line_start":742,"line_end":742,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633301,"byte_end":633304,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633309,"byte_end":633316,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633321,"byte_end":633366,"line_start":745,"line_end":745,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633371,"byte_end":633395,"line_start":746,"line_end":746,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633400,"byte_end":633405,"line_start":747,"line_end":747,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633410,"byte_end":633467,"line_start":748,"line_end":748,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633472,"byte_end":633493,"line_start":749,"line_end":749,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633498,"byte_end":633505,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633510,"byte_end":633585,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633590,"byte_end":633607,"line_start":752,"line_end":752,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633612,"byte_end":633647,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .max_header_list_size(16 * 1024)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633652,"byte_end":633692,"line_start":754,"line_end":754,"column_start":5,"column_end":45}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633697,"byte_end":633723,"line_start":755,"line_end":755,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633728,"byte_end":633744,"line_start":756,"line_end":756,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633749,"byte_end":633756,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633761,"byte_end":633766,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633771,"byte_end":633793,"line_start":759,"line_end":759,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633798,"byte_end":633805,"line_start":760,"line_end":760,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635657,"byte_end":635679,"line_start":809,"line_end":809,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Builder>::max_concurrent_streams","value":"pub fn max_concurrent_streams(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":633957,"byte_end":634007,"line_start":766,"line_end":766,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634012,"byte_end":634015,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ The maximum concurrent streams setting only controls the maximum number","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634020,"byte_end":634095,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/ of streams that can be initiated by the remote peer. In other words,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634100,"byte_end":634172,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ when this setting is set to 100, this does not limit the number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634177,"byte_end":634247,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ concurrent streams that can be created by the caller.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634252,"byte_end":634309,"line_start":771,"line_end":771,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634314,"byte_end":634317,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ It is recommended that this value be no smaller than 100, so as to not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634322,"byte_end":634396,"line_start":773,"line_end":773,"column_start":5,"column_end":79}},{"value":"/ unnecessarily limit parallelism. However, any value is legal, including","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634401,"byte_end":634476,"line_start":774,"line_end":774,"column_start":5,"column_end":80}},{"value":"/ 0. If `max` is set to 0, then the remote will not be permitted to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634481,"byte_end":634550,"line_start":775,"line_end":775,"column_start":5,"column_end":74}},{"value":"/ initiate streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634555,"byte_end":634576,"line_start":776,"line_end":776,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634581,"byte_end":634584,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Note that streams in the reserved state, i.e., push promises that have","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634589,"byte_end":634663,"line_start":778,"line_end":778,"column_start":5,"column_end":79}},{"value":"/ been reserved but the stream has not started, do not count against this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634668,"byte_end":634743,"line_start":779,"line_end":779,"column_start":5,"column_end":80}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634748,"byte_end":634760,"line_start":780,"line_end":780,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634765,"byte_end":634768,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Also note that if the remote *does* exceed the value set here, it is not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634773,"byte_end":634849,"line_start":782,"line_end":782,"column_start":5,"column_end":81}},{"value":"/ a protocol level error. Instead, the `h2` library will immediately reset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634854,"byte_end":634930,"line_start":783,"line_end":783,"column_start":5,"column_end":81}},{"value":"/ the stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634935,"byte_end":634950,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634955,"byte_end":634958,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2.0 spec for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":634963,"byte_end":635025,"line_start":786,"line_end":786,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635030,"byte_end":635033,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635038,"byte_end":635112,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635117,"byte_end":635120,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635125,"byte_end":635139,"line_start":790,"line_end":790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635144,"byte_end":635147,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635152,"byte_end":635159,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635164,"byte_end":635209,"line_start":793,"line_end":793,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635214,"byte_end":635238,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635243,"byte_end":635248,"line_start":795,"line_end":795,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635253,"byte_end":635310,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635315,"byte_end":635336,"line_start":797,"line_end":797,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635341,"byte_end":635348,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635353,"byte_end":635428,"line_start":799,"line_end":799,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635433,"byte_end":635450,"line_start":800,"line_end":800,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635455,"byte_end":635490,"line_start":801,"line_end":801,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635495,"byte_end":635532,"line_start":802,"line_end":802,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635537,"byte_end":635563,"line_start":803,"line_end":803,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635568,"byte_end":635584,"line_start":804,"line_end":804,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635589,"byte_end":635596,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635601,"byte_end":635606,"line_start":806,"line_end":806,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635611,"byte_end":635633,"line_start":807,"line_end":807,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635638,"byte_end":635645,"line_start":808,"line_end":808,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637431,"byte_end":637459,"line_start":855,"line_end":855,"column_start":12,"column_end":40},"name":"max_concurrent_reset_streams","qualname":"<Builder>::max_concurrent_reset_streams","value":"pub fn max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635801,"byte_end":635865,"line_start":814,"line_end":814,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635870,"byte_end":635873,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset by either calling","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635878,"byte_end":635933,"line_start":816,"line_end":816,"column_start":5,"column_end":60}},{"value":"/ [`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":635938,"byte_end":636013,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/ before completing the stream, the HTTP/2.0 specification requires that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636018,"byte_end":636092,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/ any further frames received for that stream must be ignored for \"some","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636097,"byte_end":636170,"line_start":819,"line_end":819,"column_start":5,"column_end":78}},{"value":"/ time\".","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636175,"byte_end":636185,"line_start":820,"line_end":820,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636190,"byte_end":636193,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636198,"byte_end":636274,"line_start":822,"line_end":822,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636279,"byte_end":636354,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636359,"byte_end":636394,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636399,"byte_end":636402,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The `max_concurrent_reset_streams` setting configures sets an upper","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636407,"byte_end":636478,"line_start":826,"line_end":826,"column_start":5,"column_end":76}},{"value":"/ bound on the amount of state that is maintained. When this max value is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636483,"byte_end":636558,"line_start":827,"line_end":827,"column_start":5,"column_end":80}},{"value":"/ reached, the oldest reset stream is purged from memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636563,"byte_end":636622,"line_start":828,"line_end":828,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636627,"byte_end":636630,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636635,"byte_end":636711,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636716,"byte_end":636787,"line_start":831,"line_end":831,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636792,"byte_end":636839,"line_start":832,"line_end":832,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636844,"byte_end":636847,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ The default value is 10.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636852,"byte_end":636880,"line_start":834,"line_end":834,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636885,"byte_end":636888,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636893,"byte_end":636907,"line_start":836,"line_end":836,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636912,"byte_end":636915,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636920,"byte_end":636927,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636932,"byte_end":636977,"line_start":839,"line_end":839,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":636982,"byte_end":637006,"line_start":840,"line_end":840,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637011,"byte_end":637016,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637021,"byte_end":637078,"line_start":842,"line_end":842,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637083,"byte_end":637104,"line_start":843,"line_end":843,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637109,"byte_end":637116,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637121,"byte_end":637196,"line_start":845,"line_end":845,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637201,"byte_end":637218,"line_start":846,"line_end":846,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637223,"byte_end":637258,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_reset_streams(1000)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637263,"byte_end":637306,"line_start":848,"line_end":848,"column_start":5,"column_end":48}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637311,"byte_end":637337,"line_start":849,"line_end":849,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637342,"byte_end":637358,"line_start":850,"line_end":850,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637363,"byte_end":637370,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637375,"byte_end":637380,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637385,"byte_end":637407,"line_start":853,"line_end":853,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637412,"byte_end":637419,"line_start":854,"line_end":854,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639226,"byte_end":639247,"line_start":902,"line_end":902,"column_start":12,"column_end":33},"name":"reset_stream_duration","qualname":"<Builder>::reset_stream_duration","value":"pub fn reset_stream_duration(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637559,"byte_end":637623,"line_start":860,"line_end":860,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637628,"byte_end":637631,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset by either calling","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637636,"byte_end":637691,"line_start":862,"line_end":862,"column_start":5,"column_end":60}},{"value":"/ [`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637696,"byte_end":637771,"line_start":863,"line_end":863,"column_start":5,"column_end":80}},{"value":"/ before completing the stream, the HTTP/2.0 specification requires that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637776,"byte_end":637850,"line_start":864,"line_end":864,"column_start":5,"column_end":79}},{"value":"/ any further frames received for that stream must be ignored for \"some","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637855,"byte_end":637928,"line_start":865,"line_end":865,"column_start":5,"column_end":78}},{"value":"/ time\".","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637933,"byte_end":637943,"line_start":866,"line_end":866,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637948,"byte_end":637951,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":637956,"byte_end":638032,"line_start":868,"line_end":868,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638037,"byte_end":638112,"line_start":869,"line_end":869,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638117,"byte_end":638152,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638157,"byte_end":638160,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ The `reset_stream_duration` setting configures the max amount of time","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638165,"byte_end":638238,"line_start":872,"line_end":872,"column_start":5,"column_end":78}},{"value":"/ this state will be maintained in memory. Once the duration elapses, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638243,"byte_end":638318,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/ stream state is purged from memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638323,"byte_end":638362,"line_start":874,"line_end":874,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638367,"byte_end":638370,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638375,"byte_end":638451,"line_start":876,"line_end":876,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638456,"byte_end":638527,"line_start":877,"line_end":877,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638532,"byte_end":638579,"line_start":878,"line_end":878,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638584,"byte_end":638587,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ The default value is 30 seconds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638592,"byte_end":638628,"line_start":880,"line_end":880,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638633,"byte_end":638636,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638641,"byte_end":638655,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638660,"byte_end":638663,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638668,"byte_end":638675,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638680,"byte_end":638725,"line_start":885,"line_end":885,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638730,"byte_end":638754,"line_start":886,"line_end":886,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638759,"byte_end":638789,"line_start":887,"line_end":887,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638794,"byte_end":638799,"line_start":888,"line_end":888,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638804,"byte_end":638861,"line_start":889,"line_end":889,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638866,"byte_end":638887,"line_start":890,"line_end":890,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638892,"byte_end":638899,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638904,"byte_end":638979,"line_start":892,"line_end":892,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":638984,"byte_end":639001,"line_start":893,"line_end":893,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639006,"byte_end":639041,"line_start":894,"line_end":894,"column_start":5,"column_end":40}},{"value":"/     .reset_stream_duration(Duration::from_secs(10))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639046,"byte_end":639101,"line_start":895,"line_end":895,"column_start":5,"column_end":60}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639106,"byte_end":639132,"line_start":896,"line_end":896,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639137,"byte_end":639153,"line_start":897,"line_end":897,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639158,"byte_end":639165,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639170,"byte_end":639175,"line_start":899,"line_end":899,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639180,"byte_end":639202,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639207,"byte_end":639214,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641264,"byte_end":641273,"line_start":963,"line_end":963,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"pub fn handshake<T, B>(&Self, T) -> Handshake<T, B> where T: AsyncRead +\nAsyncWrite + Unpin, B: Buf + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2.0 server backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2.0 server backed by `io`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639355,"byte_end":639415,"line_start":907,"line_end":907,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639420,"byte_end":639423,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639428,"byte_end":639503,"line_start":909,"line_end":909,"column_start":5,"column_end":80}},{"value":"/ the [HTTP/2.0 handshake]. See [Handshake] for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639508,"byte_end":639571,"line_start":910,"line_end":910,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639576,"byte_end":639579,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ Returns a future which resolves to the [`Connection`] instance once the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639584,"byte_end":639659,"line_start":912,"line_end":912,"column_start":5,"column_end":80}},{"value":"/ HTTP/2.0 handshake has been completed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639664,"byte_end":639706,"line_start":913,"line_end":913,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639711,"byte_end":639714,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This function also allows the caller to configure the send payload data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639719,"byte_end":639794,"line_start":915,"line_end":915,"column_start":5,"column_end":80}},{"value":"/ type. See [Outbound data type] for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639799,"byte_end":639851,"line_start":916,"line_end":916,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639856,"byte_end":639859,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ [HTTP/2.0 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639864,"byte_end":639943,"line_start":918,"line_end":918,"column_start":5,"column_end":84}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639948,"byte_end":639988,"line_start":919,"line_end":919,"column_start":5,"column_end":45}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":639993,"byte_end":640035,"line_start":920,"line_end":920,"column_start":5,"column_end":47}},{"value":"/ [Outbound data type]: ../index.html#outbound-data-type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640040,"byte_end":640099,"line_start":921,"line_end":921,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640104,"byte_end":640107,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640112,"byte_end":640126,"line_start":923,"line_end":923,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640131,"byte_end":640134,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640139,"byte_end":640155,"line_start":925,"line_end":925,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640160,"byte_end":640163,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640168,"byte_end":640175,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640180,"byte_end":640225,"line_start":928,"line_end":928,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640230,"byte_end":640254,"line_start":929,"line_end":929,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640259,"byte_end":640264,"line_start":930,"line_end":930,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640269,"byte_end":640326,"line_start":931,"line_end":931,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640331,"byte_end":640352,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640357,"byte_end":640364,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640369,"byte_end":640444,"line_start":934,"line_end":934,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640449,"byte_end":640466,"line_start":935,"line_end":935,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640471,"byte_end":640506,"line_start":936,"line_end":936,"column_start":5,"column_end":40}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640511,"byte_end":640537,"line_start":937,"line_end":937,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640542,"byte_end":640558,"line_start":938,"line_end":938,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640563,"byte_end":640570,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640575,"byte_end":640580,"line_start":940,"line_end":940,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640585,"byte_end":640607,"line_start":941,"line_end":941,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640612,"byte_end":640619,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640624,"byte_end":640627,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ Configures the send-payload data type. In this case, the outbound data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640632,"byte_end":640706,"line_start":944,"line_end":944,"column_start":5,"column_end":79}},{"value":"/ type will be `&'static [u8]`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640711,"byte_end":640744,"line_start":945,"line_end":945,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640749,"byte_end":640752,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640757,"byte_end":640764,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640769,"byte_end":640814,"line_start":948,"line_end":948,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640819,"byte_end":640843,"line_start":949,"line_end":949,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640848,"byte_end":640853,"line_start":950,"line_end":950,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640858,"byte_end":640915,"line_start":951,"line_end":951,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T, &'static [u8]>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640920,"byte_end":640956,"line_start":952,"line_end":952,"column_start":5,"column_end":41}},{"value":"/ # {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640961,"byte_end":640968,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2.0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":640973,"byte_end":641048,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/ // handshake.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641053,"byte_end":641070,"line_start":955,"line_end":955,"column_start":5,"column_end":22}},{"value":"/ let server_fut: Handshake<_, &'static [u8]> = Builder::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641075,"byte_end":641139,"line_start":956,"line_end":956,"column_start":5,"column_end":69}},{"value":"/     .handshake(my_io);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641144,"byte_end":641170,"line_start":957,"line_end":957,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641175,"byte_end":641191,"line_start":958,"line_end":958,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641196,"byte_end":641203,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641208,"byte_end":641213,"line_start":960,"line_end":960,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641218,"byte_end":641240,"line_start":961,"line_end":961,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641245,"byte_end":641252,"line_start":962,"line_end":962,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642343,"byte_end":642356,"line_start":997,"line_end":997,"column_start":12,"column_end":25},"name":"send_response","qualname":"<SendResponse<B>>::send_response","value":"pub fn send_response(&mut Self, Response<()>, bool)\n-> Result<SendStream<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Send a response to a client request.","sig":null,"attributes":[{"value":"/ Send a response to a client request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641614,"byte_end":641654,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641659,"byte_end":641662,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendStream`] instance is returned. This instance can be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641667,"byte_end":641742,"line_start":983,"line_end":983,"column_start":5,"column_end":80}},{"value":"/ used to stream the response body and send trailers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641747,"byte_end":641802,"line_start":984,"line_end":984,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641807,"byte_end":641810,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ If a body or trailers will be sent on the returned [`SendStream`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641815,"byte_end":641884,"line_start":986,"line_end":986,"column_start":5,"column_end":74}},{"value":"/ instance, then `end_of_stream` must be set to `false` when calling this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641889,"byte_end":641964,"line_start":987,"line_end":987,"column_start":5,"column_end":80}},{"value":"/ function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641969,"byte_end":641982,"line_start":988,"line_end":988,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641987,"byte_end":641990,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ The [`SendResponse`] instance is already associated with a received","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641995,"byte_end":642066,"line_start":990,"line_end":990,"column_start":5,"column_end":76}},{"value":"/ request.  This function may only be called once per instance and only if","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642071,"byte_end":642147,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ [`send_reset`] has not been previously called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642152,"byte_end":642202,"line_start":992,"line_end":992,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642207,"byte_end":642210,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ [`SendResponse`]: #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642215,"byte_end":642238,"line_start":994,"line_end":994,"column_start":5,"column_end":28}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642243,"byte_end":642288,"line_start":995,"line_end":995,"column_start":5,"column_end":50}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642293,"byte_end":642331,"line_start":996,"line_end":996,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642820,"byte_end":642832,"line_start":1013,"line_end":1013,"column_start":12,"column_end":24},"name":"push_request","qualname":"<SendResponse<B>>::push_request","value":"pub fn push_request(&mut Self, Request<()>)\n-> Result<SendPushedResponse<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Push a request and response to the client","sig":null,"attributes":[{"value":"/ Push a request and response to the client","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642658,"byte_end":642703,"line_start":1008,"line_end":1008,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642708,"byte_end":642711,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendResponse`] instance is returned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642716,"byte_end":642772,"line_start":1010,"line_end":1010,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642777,"byte_end":642780,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ [`SendResponse`]: #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":642785,"byte_end":642808,"line_start":1012,"line_end":1012,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643752,"byte_end":643762,"line_start":1040,"line_end":1040,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendResponse<B>>::send_reset","value":"pub fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Send a stream reset to the peer.","sig":null,"attributes":[{"value":"/ Send a stream reset to the peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643149,"byte_end":643185,"line_start":1025,"line_end":1025,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643190,"byte_end":643193,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ This essentially cancels the stream, including any inbound or outbound","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643198,"byte_end":643272,"line_start":1027,"line_end":1027,"column_start":5,"column_end":79}},{"value":"/ data streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643277,"byte_end":643294,"line_start":1028,"line_end":1028,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643299,"byte_end":643302,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ If this function is called before [`send_response`], a call to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643307,"byte_end":643373,"line_start":1030,"line_end":1030,"column_start":5,"column_end":71}},{"value":"/ [`send_response`] will result in an error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643378,"byte_end":643424,"line_start":1031,"line_end":1031,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643429,"byte_end":643432,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ If this function is called while a [`SendStream`] instance is active,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643437,"byte_end":643510,"line_start":1033,"line_end":1033,"column_start":5,"column_end":78}},{"value":"/ any further use of the instance will result in an error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643515,"byte_end":643575,"line_start":1034,"line_end":1034,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643580,"byte_end":643583,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This function should only be called once.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643588,"byte_end":643633,"line_start":1036,"line_end":1036,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643638,"byte_end":643641,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ [`send_response`]: #method.send_response","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643646,"byte_end":643690,"line_start":1038,"line_end":1038,"column_start":5,"column_end":49}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643695,"byte_end":643740,"line_start":1039,"line_end":1039,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644327,"byte_end":644337,"line_start":1056,"line_end":1056,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendResponse<B>>::poll_reset","value":"pub fn poll_reset(&mut Self, &mut Context)\n-> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643841,"byte_end":643901,"line_start":1044,"line_end":1044,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643906,"byte_end":643909,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643914,"byte_end":643976,"line_start":1046,"line_end":1046,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":643981,"byte_end":644049,"line_start":1047,"line_end":1047,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644054,"byte_end":644057,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644062,"byte_end":644131,"line_start":1049,"line_end":1049,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644136,"byte_end":644185,"line_start":1050,"line_end":1050,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644190,"byte_end":644193,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644198,"byte_end":644209,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644214,"byte_end":644217,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ Calling this method after having called `send_response` will return","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644222,"byte_end":644293,"line_start":1054,"line_end":1054,"column_start":5,"column_end":76}},{"value":"/ a user error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644298,"byte_end":644315,"line_start":1055,"line_end":1055,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644640,"byte_end":644649,"line_start":1065,"line_end":1065,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendResponse<B>>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644487,"byte_end":644536,"line_start":1060,"line_end":1060,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644541,"byte_end":644544,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644549,"byte_end":644561,"line_start":1062,"line_end":1062,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644566,"byte_end":644569,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644574,"byte_end":644628,"line_start":1064,"line_end":1064,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645566,"byte_end":645579,"line_start":1089,"line_end":1089,"column_start":12,"column_end":25},"name":"send_response","qualname":"<SendPushedResponse<B>>::send_response","value":"pub fn send_response(&mut Self, Response<()>, bool)\n-> Result<SendStream<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Send a response to a promised request.","sig":null,"attributes":[{"value":"/ Send a response to a promised request.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644831,"byte_end":644873,"line_start":1073,"line_end":1073,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644878,"byte_end":644881,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendStream`] instance is returned. This instance can be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644886,"byte_end":644961,"line_start":1075,"line_end":1075,"column_start":5,"column_end":80}},{"value":"/ used to stream the response body and send trailers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644966,"byte_end":645021,"line_start":1076,"line_end":1076,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645026,"byte_end":645029,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ If a body or trailers will be sent on the returned [`SendStream`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645034,"byte_end":645103,"line_start":1078,"line_end":1078,"column_start":5,"column_end":74}},{"value":"/ instance, then `end_of_stream` must be set to `false` when calling this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645108,"byte_end":645183,"line_start":1079,"line_end":1079,"column_start":5,"column_end":80}},{"value":"/ function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645188,"byte_end":645201,"line_start":1080,"line_end":1080,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645206,"byte_end":645209,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ The [`SendPushedResponse`] instance is associated with a promised","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645214,"byte_end":645283,"line_start":1082,"line_end":1082,"column_start":5,"column_end":74}},{"value":"/ request.  This function may only be called once per instance and only if","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645288,"byte_end":645364,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ [`send_reset`] has not been previously called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645369,"byte_end":645419,"line_start":1084,"line_end":1084,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645424,"byte_end":645427,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ [`SendPushedResponse`]: #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645432,"byte_end":645461,"line_start":1086,"line_end":1086,"column_start":5,"column_end":34}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645466,"byte_end":645511,"line_start":1087,"line_end":1087,"column_start":5,"column_end":50}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645516,"byte_end":645554,"line_start":1088,"line_end":1088,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646380,"byte_end":646390,"line_start":1112,"line_end":1112,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendPushedResponse<B>>::send_reset","value":"pub fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Send a stream reset to the peer.","sig":null,"attributes":[{"value":"/ Send a stream reset to the peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645777,"byte_end":645813,"line_start":1097,"line_end":1097,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645818,"byte_end":645821,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ This essentially cancels the stream, including any inbound or outbound","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645826,"byte_end":645900,"line_start":1099,"line_end":1099,"column_start":5,"column_end":79}},{"value":"/ data streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645905,"byte_end":645922,"line_start":1100,"line_end":1100,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645927,"byte_end":645930,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ If this function is called before [`send_response`], a call to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":645935,"byte_end":646001,"line_start":1102,"line_end":1102,"column_start":5,"column_end":71}},{"value":"/ [`send_response`] will result in an error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646006,"byte_end":646052,"line_start":1103,"line_end":1103,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646057,"byte_end":646060,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ If this function is called while a [`SendStream`] instance is active,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646065,"byte_end":646138,"line_start":1105,"line_end":1105,"column_start":5,"column_end":78}},{"value":"/ any further use of the instance will result in an error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646143,"byte_end":646203,"line_start":1106,"line_end":1106,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646208,"byte_end":646211,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ This function should only be called once.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646216,"byte_end":646261,"line_start":1108,"line_end":1108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646266,"byte_end":646269,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ [`send_response`]: #method.send_response","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646274,"byte_end":646318,"line_start":1110,"line_end":1110,"column_start":5,"column_end":49}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646323,"byte_end":646368,"line_start":1111,"line_end":1111,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646955,"byte_end":646965,"line_start":1128,"line_end":1128,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendPushedResponse<B>>::poll_reset","value":"pub fn poll_reset(&mut Self, &mut Context)\n-> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646469,"byte_end":646529,"line_start":1116,"line_end":1116,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646534,"byte_end":646537,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646542,"byte_end":646604,"line_start":1118,"line_end":1118,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646609,"byte_end":646677,"line_start":1119,"line_end":1119,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646682,"byte_end":646685,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646690,"byte_end":646759,"line_start":1121,"line_end":1121,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646764,"byte_end":646813,"line_start":1122,"line_end":1122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646818,"byte_end":646821,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646826,"byte_end":646837,"line_start":1124,"line_end":1124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646842,"byte_end":646845,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ Calling this method after having called `send_response` will return","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646850,"byte_end":646921,"line_start":1126,"line_end":1126,"column_start":5,"column_end":76}},{"value":"/ a user error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":646926,"byte_end":646943,"line_start":1127,"line_end":1127,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647233,"byte_end":647242,"line_start":1137,"line_end":1137,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendPushedResponse<B>>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647080,"byte_end":647129,"line_start":1132,"line_end":1132,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647134,"byte_end":647137,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647142,"byte_end":647154,"line_start":1134,"line_end":1134,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647159,"byte_end":647162,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647167,"byte_end":647221,"line_start":1136,"line_end":1136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8903},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664570,"byte_end":664580,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"SendStream","qualname":"::share::SendStream","value":"SendStream {  }","parent":null,"children":[{"krate":0,"index":8905}],"decl_id":null,"docs":" Sends the body stream and trailers to the remote peer.","sig":null,"attributes":[{"value":"/ Sends the body stream and trailers to the remote peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660090,"byte_end":660148,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660149,"byte_end":660152,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660153,"byte_end":660167,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660168,"byte_end":660171,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ A `SendStream` is provided by [`SendRequest`] and [`SendResponse`] once the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660172,"byte_end":660251,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ HTTP/2.0 message header has been sent sent. It is used to stream the message","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660252,"byte_end":660332,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ body and send the message trailers. See method level documentation for more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660333,"byte_end":660412,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660413,"byte_end":660425,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660426,"byte_end":660429,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `SendStream` instance is also used to manage outbound flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660430,"byte_end":660505,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660506,"byte_end":660509,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ If a `SendStream` is dropped without explicitly closing the send stream, a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660510,"byte_end":660588,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ `RST_STREAM` frame will be sent. This essentially cancels the request /","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660589,"byte_end":660664,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ response exchange.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660665,"byte_end":660687,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660688,"byte_end":660691,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The ways to explicitly close the send stream are:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660692,"byte_end":660745,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660746,"byte_end":660749,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ * Set `end_of_stream` to true when calling [`send_request`],","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660750,"byte_end":660814,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/   [`send_response`], or [`send_data`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660815,"byte_end":660857,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ * Send trailers with [`send_trailers`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660858,"byte_end":660901,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ * Explicitly reset the stream with [`send_reset`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660902,"byte_end":660956,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660957,"byte_end":660960,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Flow control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660961,"byte_end":660979,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660980,"byte_end":660983,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ In HTTP/2.0, data cannot be sent to the remote peer unless there is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":660984,"byte_end":661055,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ available window capacity on both the stream and the connection. When a data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661056,"byte_end":661136,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ frame is sent, both the stream window and the connection window are","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661137,"byte_end":661208,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ decremented. When the stream level window reaches zero, no further data can","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661209,"byte_end":661288,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ be sent on that stream. When the connection level window reaches zero, no","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661289,"byte_end":661366,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ further data can be sent on any stream for that connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661367,"byte_end":661430,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661431,"byte_end":661434,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ When the remote peer is ready to receive more data, it sends `WINDOW_UPDATE`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661435,"byte_end":661515,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ frames. These frames increment the windows. See the [specification] for more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661516,"byte_end":661596,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ details on the principles of HTTP/2.0 flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661597,"byte_end":661652,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661653,"byte_end":661656,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The implications for sending data are that the caller **should** ensure that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661657,"byte_end":661737,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ both the stream and the connection has available window capacity before","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661738,"byte_end":661813,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ loading the data to send into memory. The `SendStream` instance provides the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661814,"byte_end":661894,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ necessary APIs to perform this logic. This, however, is not an obligation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661895,"byte_end":661973,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ If the caller attempts to send data on a stream when there is no available","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":661974,"byte_end":662052,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ window capacity, the library will buffer the data until capacity becomes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662053,"byte_end":662129,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ available, at which point the buffer will be flushed to the connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662130,"byte_end":662205,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662206,"byte_end":662209,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: There is no bound on the amount of data that the library will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662210,"byte_end":662285,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ buffer. If you are sending large amounts of data, you really should hook","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662286,"byte_end":662362,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ into the flow control lifecycle. Otherwise, you risk using up significant","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662363,"byte_end":662440,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ amounts of memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662441,"byte_end":662463,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662464,"byte_end":662467,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ To hook into the flow control lifecycle, the caller signals to the library","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662468,"byte_end":662546,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ that it intends to send data by calling [`reserve_capacity`], specifying the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662547,"byte_end":662627,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ amount of data, in octets, that the caller intends to send. After this,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662628,"byte_end":662703,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ `poll_capacity` is used to be notified when the requested capacity is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662704,"byte_end":662777,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ assigned to the stream. Once [`poll_capacity`] returns `Ready` with the number","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662778,"byte_end":662860,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ of octets available to the stream, the caller is able to actually send the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662861,"byte_end":662939,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ data using [`send_data`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662940,"byte_end":662969,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662970,"byte_end":662973,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Because there is also a connection level window that applies to **all**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":662974,"byte_end":663049,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ streams on a connection, when capacity is assigned to a stream (indicated by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663050,"byte_end":663130,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ `poll_capacity` returning `Ready`), this capacity is reserved on the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663131,"byte_end":663203,"line_start":72,"line_end":72,"column_start":1,"column_end":73}},{"value":"/ connection and will **not** be assigned to any other stream. If data is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663204,"byte_end":663279,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ never written to the stream, that capacity is effectively lost to other","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663280,"byte_end":663355,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ streams and this introduces the risk of deadlocking a connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663356,"byte_end":663425,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663426,"byte_end":663429,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ To avoid throttling data on a connection, the caller should not reserve","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663430,"byte_end":663505,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ capacity until ready to send data and once any capacity is assigned to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663506,"byte_end":663584,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ stream, the caller should immediately send data consuming this capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663585,"byte_end":663661,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ There is no guarantee as to when the full capacity requested will become","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663662,"byte_end":663738,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ available. For example, if the caller requests 64 KB of data and 512 bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663739,"byte_end":663817,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ become available, the caller should immediately send 512 bytes of data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663818,"byte_end":663893,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663894,"byte_end":663897,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ See [`reserve_capacity`] documentation for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663898,"byte_end":663958,"line_start":84,"line_end":84,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663959,"byte_end":663962,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`]: client/struct.SendRequest.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":663963,"byte_end":664014,"line_start":86,"line_end":86,"column_start":1,"column_end":52}},{"value":"/ [`SendResponse`]: server/struct.SendResponse.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664015,"byte_end":664068,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/ [specification]: http://httpwg.org/specs/rfc7540.html#FlowControl","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664069,"byte_end":664138,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/ [`reserve_capacity`]: #method.reserve_capacity","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664139,"byte_end":664189,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/ [`poll_capacity`]: #method.poll_capacity","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664190,"byte_end":664234,"line_start":90,"line_end":90,"column_start":1,"column_end":45}},{"value":"/ [`send_data`]: #method.send_data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664235,"byte_end":664271,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/ [`send_request`]: client/struct.SendRequest.html#method.send_request","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664272,"byte_end":664344,"line_start":92,"line_end":92,"column_start":1,"column_end":73}},{"value":"/ [`send_response`]: server/struct.SendResponse.html#method.send_response","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664345,"byte_end":664420,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ [`send_data`]: #method.send_data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664421,"byte_end":664457,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/ [`send_trailers`]: #method.send_trailers","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664458,"byte_end":664502,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664503,"byte_end":664541,"line_start":96,"line_end":96,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":8909},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665204,"byte_end":665212,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::share::StreamId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream identifier, as described in [Section 5.1.1] of RFC 7540.","sig":null,"attributes":[{"value":"/ A stream identifier, as described in [Section 5.1.1] of RFC 7540.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664626,"byte_end":664695,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664696,"byte_end":664699,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Streams are identified with an unsigned 31-bit integer. Streams","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664700,"byte_end":664767,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"/ initiated by a client MUST use odd-numbered stream identifiers; those","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664768,"byte_end":664841,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ initiated by the server MUST use even-numbered stream identifiers.  A","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664842,"byte_end":664915,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ stream identifier of zero (0x0) is used for connection control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664916,"byte_end":664982,"line_start":107,"line_end":107,"column_start":1,"column_end":67}},{"value":"/ messages; the stream identifier of zero cannot be used to establish a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":664983,"byte_end":665056,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/ new stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665057,"byte_end":665072,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665073,"byte_end":665076,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [Section 5.1.1]: https://tools.ietf.org/html/rfc7540#section-5.1.1","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665077,"byte_end":665147,"line_start":111,"line_end":111,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666094,"byte_end":666104,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"RecvStream","qualname":"::share::RecvStream","value":"RecvStream {  }","parent":null,"children":[{"krate":0,"index":3432}],"decl_id":null,"docs":" Receives the body stream and trailers from the remote peer.","sig":null,"attributes":[{"value":"/ Receives the body stream and trailers from the remote peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665220,"byte_end":665283,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665284,"byte_end":665287,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ A `RecvStream` is provided by [`client::ResponseFuture`] and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665288,"byte_end":665352,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/ [`server::Connection`] with the received HTTP/2.0 message head (the response","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665353,"byte_end":665433,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ and request head respectively).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665434,"byte_end":665469,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665470,"byte_end":665473,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ A `RecvStream` instance is used to receive the streaming message body and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665474,"byte_end":665551,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/ any trailers from the remote peer. It is also used to manage inbound flow","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665552,"byte_end":665629,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665630,"byte_end":665642,"line_start":123,"line_end":123,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665643,"byte_end":665646,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ See method level documentation for more details on receiving data. See","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665647,"byte_end":665721,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/ [`FlowControl`] for more details on inbound flow control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665722,"byte_end":665783,"line_start":126,"line_end":126,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665784,"byte_end":665787,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`client::ResponseFuture`]: client/struct.ResponseFuture.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665788,"byte_end":665853,"line_start":128,"line_end":128,"column_start":1,"column_end":66}},{"value":"/ [`server::Connection`]: server/struct.Connection.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665854,"byte_end":665911,"line_start":129,"line_end":129,"column_start":1,"column_end":58}},{"value":"/ [`FlowControl`]: struct.FlowControl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665912,"byte_end":665956,"line_start":130,"line_end":130,"column_start":1,"column_end":45}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":665957,"byte_end":666033,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666034,"byte_end":666082,"line_start":132,"line_end":132,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8926},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668664,"byte_end":668675,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"FlowControl","qualname":"::share::FlowControl","value":"FlowControl {  }","parent":null,"children":[{"krate":0,"index":8927}],"decl_id":null,"docs":" A handle to release window capacity to a remote stream.","sig":null,"attributes":[{"value":"/ A handle to release window capacity to a remote stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666134,"byte_end":666193,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666194,"byte_end":666197,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This type allows the caller to manage inbound data [flow control]. The","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666198,"byte_end":666272,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ caller is expected to call [`release_capacity`] after dropping data frames.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666273,"byte_end":666352,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666353,"byte_end":666356,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666357,"byte_end":666371,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666372,"byte_end":666375,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Each stream has a window size. This window size is the maximum amount of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666376,"byte_end":666452,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ inbound data that can be in-flight. In-flight data is defined as data that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666453,"byte_end":666531,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ has been received, but not yet released.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666532,"byte_end":666576,"line_start":146,"line_end":146,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666577,"byte_end":666580,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ When a stream is created, the window size is set to the connection's initial","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666581,"byte_end":666661,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ window size value. When a data frame is received, the window size is then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666662,"byte_end":666739,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ decremented by size of the data frame before the data is provided to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666740,"byte_end":666816,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ caller. As the caller finishes using the data, [`release_capacity`] must be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666817,"byte_end":666896,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ called. This will then increment the window size again, allowing the peer to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666897,"byte_end":666977,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/ send more data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666978,"byte_end":666997,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":666998,"byte_end":667001,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ There is also a connection level window as well as the stream level window.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667002,"byte_end":667081,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ Received data counts against the connection level window as well and calls","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667082,"byte_end":667160,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ to [`release_capacity`] will also increment the connection level window.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667161,"byte_end":667237,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667238,"byte_end":667241,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Sending `WINDOW_UPDATE` frames","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667242,"byte_end":667278,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667279,"byte_end":667282,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ `WINDOW_UPDATE` frames will not be sent out for **every** call to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667283,"byte_end":667352,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/ `release_capacity`, as this would end up slowing down the protocol. Instead,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667353,"byte_end":667433,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ `h2` waits until the window size is increased to a certain threshold and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667434,"byte_end":667510,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"/ then sends out a single `WINDOW_UPDATE` frame representing all the calls to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667511,"byte_end":667590,"line_start":164,"line_end":164,"column_start":1,"column_end":80}},{"value":"/ `release_capacity` since the last `WINDOW_UPDATE` frame.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667591,"byte_end":667651,"line_start":165,"line_end":165,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667652,"byte_end":667655,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This essentially batches window updating.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667656,"byte_end":667701,"line_start":167,"line_end":167,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667702,"byte_end":667705,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Scenarios","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667706,"byte_end":667721,"line_start":169,"line_end":169,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667722,"byte_end":667725,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Following is a basic scenario with an HTTP/2.0 connection containing a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667726,"byte_end":667800,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ single active stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667801,"byte_end":667826,"line_start":172,"line_end":172,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667827,"byte_end":667830,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ * A new stream is activated. The receive window is initialized to 1024 (the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667831,"byte_end":667910,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"/   value of the initial window size for this connection).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667911,"byte_end":667971,"line_start":175,"line_end":175,"column_start":1,"column_end":61}},{"value":"/ * A `DATA` frame is received containing a payload of 600 bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":667972,"byte_end":668039,"line_start":176,"line_end":176,"column_start":1,"column_end":68}},{"value":"/ * The receive window size is reduced to 424 bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668040,"byte_end":668094,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/ * [`release_capacity`] is called with 200.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668095,"byte_end":668141,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ * The receive window size is now 624 bytes. The peer may send no more than","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668142,"byte_end":668220,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/   this.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668221,"byte_end":668232,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"/ * A `DATA` frame is received with a payload of 624 bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668233,"byte_end":668294,"line_start":181,"line_end":181,"column_start":1,"column_end":62}},{"value":"/ * The window size is now 0 bytes. The peer may not send any more data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668295,"byte_end":668369,"line_start":182,"line_end":182,"column_start":1,"column_end":75}},{"value":"/ * [`release_capacity`] is called with 1024.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668370,"byte_end":668417,"line_start":183,"line_end":183,"column_start":1,"column_end":48}},{"value":"/ * The receive window size is now 1024 bytes. The peer may now send more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668418,"byte_end":668493,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668494,"byte_end":668503,"line_start":185,"line_end":185,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668504,"byte_end":668507,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [flow control]: ../index.html#flow-control","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668508,"byte_end":668554,"line_start":187,"line_end":187,"column_start":1,"column_end":47}},{"value":"/ [`release_capacity`]: struct.FlowControl.html#method.release_capacity","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668555,"byte_end":668628,"line_start":188,"line_end":188,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668811,"byte_end":668819,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"PingPong","qualname":"::share::PingPong","value":"PingPong {  }","parent":null,"children":[{"krate":0,"index":3434}],"decl_id":null,"docs":" A handle to send and receive PING frames with the peer.\n","sig":null,"attributes":[{"value":"/ A handle to send and receive PING frames with the peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668716,"byte_end":668775,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668968,"byte_end":668972,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"Ping","qualname":"::share::Ping","value":"Ping {  }","parent":null,"children":[{"krate":0,"index":3436}],"decl_id":null,"docs":" Sent via [`PingPong`][] to send a PING frame to a peer.","sig":null,"attributes":[{"value":"/ Sent via [`PingPong`][] to send a PING frame to a peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668854,"byte_end":668913,"line_start":200,"line_end":200,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668914,"byte_end":668917,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668918,"byte_end":668956,"line_start":202,"line_end":202,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669146,"byte_end":669150,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"Pong","qualname":"::share::Pong","value":"Pong {  }","parent":null,"children":[{"krate":0,"index":3438}],"decl_id":null,"docs":" Received via [`PingPong`][] when a peer acknowledges a [`Ping`][].","sig":null,"attributes":[{"value":"/ Received via [`PingPong`][] when a peer acknowledges a [`Ping`][].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":668990,"byte_end":669060,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669061,"byte_end":669064,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669065,"byte_end":669103,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/ [`Ping`]: struct.Ping.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669104,"byte_end":669134,"line_start":210,"line_end":210,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671609,"byte_end":671625,"line_start":280,"line_end":280,"column_start":12,"column_end":28},"name":"reserve_capacity","qualname":"<SendStream<B>>::reserve_capacity","value":"pub fn reserve_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Requests capacity to send data.","sig":null,"attributes":[{"value":"/ Requests capacity to send data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669329,"byte_end":669364,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669369,"byte_end":669372,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function is used to express intent to send data. This requests","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669377,"byte_end":669448,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/ connection level capacity. Once the capacity is available, it is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669453,"byte_end":669521,"line_start":225,"line_end":225,"column_start":5,"column_end":73}},{"value":"/ assigned to the stream and not reused by other streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669526,"byte_end":669585,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669590,"byte_end":669593,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This function may be called repeatedly. The `capacity` argument is the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669598,"byte_end":669672,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ **total** amount of requested capacity. Sequential calls to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669677,"byte_end":669740,"line_start":229,"line_end":229,"column_start":5,"column_end":68}},{"value":"/ `reserve_capacity` are *not* additive. Given the following:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669745,"byte_end":669808,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669813,"byte_end":669816,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669821,"byte_end":669832,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669837,"byte_end":669853,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/ # fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669858,"byte_end":669916,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669921,"byte_end":669959,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/ send_stream.reserve_capacity(200);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669964,"byte_end":670002,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670007,"byte_end":670014,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670019,"byte_end":670026,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670031,"byte_end":670034,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ After the second call to `reserve_capacity`, the *total* requested","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670039,"byte_end":670109,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ capacity will be 200.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670114,"byte_end":670139,"line_start":241,"line_end":241,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670144,"byte_end":670147,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ `reserve_capacity` is also used to cancel previous capacity requests.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670152,"byte_end":670225,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ Given the following:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670230,"byte_end":670254,"line_start":244,"line_end":244,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670259,"byte_end":670262,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670267,"byte_end":670278,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670283,"byte_end":670299,"line_start":247,"line_end":247,"column_start":5,"column_end":21}},{"value":"/ # fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670304,"byte_end":670362,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670367,"byte_end":670405,"line_start":249,"line_end":249,"column_start":5,"column_end":43}},{"value":"/ send_stream.reserve_capacity(0);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670410,"byte_end":670446,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670451,"byte_end":670458,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670463,"byte_end":670470,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670475,"byte_end":670478,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ After the second call to `reserve_capacity`, the *total* requested","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670483,"byte_end":670553,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/ capacity will be 0, i.e. there is no requested capacity for the stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670558,"byte_end":670633,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670638,"byte_end":670641,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If `reserve_capacity` is called with a lower value than the amount of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670646,"byte_end":670719,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ capacity **currently** assigned to the stream, this capacity will be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670724,"byte_end":670796,"line_start":258,"line_end":258,"column_start":5,"column_end":77}},{"value":"/ returned to the connection to be re-assigned to other streams.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670801,"byte_end":670867,"line_start":259,"line_end":259,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670872,"byte_end":670875,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Also, the amount of capacity that is reserved gets decremented as data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670880,"byte_end":670954,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ is sent. For example:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670959,"byte_end":670984,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670989,"byte_end":670992,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":670997,"byte_end":671008,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671013,"byte_end":671029,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/ # async fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671034,"byte_end":671098,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671103,"byte_end":671141,"line_start":267,"line_end":267,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671146,"byte_end":671149,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ send_stream.send_data(b\"hello\", false).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671154,"byte_end":671206,"line_start":269,"line_end":269,"column_start":5,"column_end":57}},{"value":"/ // At this point, the total amount of requested capacity is 95 bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671211,"byte_end":671284,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671289,"byte_end":671292,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // Calling `reserve_capacity` with `100` again essentially requests an","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671297,"byte_end":671371,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ // additional 5 bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671376,"byte_end":671402,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671407,"byte_end":671445,"line_start":274,"line_end":274,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671450,"byte_end":671457,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671462,"byte_end":671469,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671474,"byte_end":671477,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ See [Flow control](struct.SendStream.html#flow-control) for an overview","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671482,"byte_end":671557,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ of how send flow control works.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671562,"byte_end":671597,"line_start":279,"line_end":279,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671940,"byte_end":671948,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SendStream<B>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream's current send capacity.","sig":null,"attributes":[{"value":"/ Returns the stream's current send capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671763,"byte_end":671810,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671815,"byte_end":671818,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This allows the caller to check the current amount of available capacity","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671823,"byte_end":671899,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ before sending data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":671904,"byte_end":671928,"line_start":288,"line_end":288,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672839,"byte_end":672852,"line_start":307,"line_end":307,"column_start":12,"column_end":25},"name":"poll_capacity","qualname":"<SendStream<B>>::poll_capacity","value":"pub fn poll_capacity(&mut Self, &mut Context)\n-> Poll<Option<Result<usize, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Requests to be notified when the stream's capacity increases.","sig":null,"attributes":[{"value":"/ Requests to be notified when the stream's capacity increases.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672017,"byte_end":672082,"line_start":293,"line_end":293,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672087,"byte_end":672090,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Before calling this, capacity should be requested with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672095,"byte_end":672153,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/ `reserve_capacity`. Once capacity is requested, the connection will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672158,"byte_end":672229,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/ assign capacity to the stream **as it becomes available**. There is no","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672234,"byte_end":672308,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ guarantee as to when and in what increments capacity gets assigned to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672313,"byte_end":672386,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ the stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672391,"byte_end":672406,"line_start":299,"line_end":299,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672411,"byte_end":672414,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ To get notified when the available capacity increases, the caller calls","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672419,"byte_end":672494,"line_start":301,"line_end":301,"column_start":5,"column_end":80}},{"value":"/ `poll_capacity`, which returns `Ready(Some(n))` when `n` has been","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672499,"byte_end":672568,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"/ increased by the connection. Note that `n` here represents the **total**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672573,"byte_end":672649,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ amount of assigned capacity at that point in time. It is also possible","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672654,"byte_end":672728,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ that `n` is lower than the previous call if, since then, the caller has","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672733,"byte_end":672808,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ sent data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":672813,"byte_end":672827,"line_start":306,"line_end":306,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673891,"byte_end":673900,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"send_data","qualname":"<SendStream<B>>::send_data","value":"pub fn send_data(&mut Self, B, bool) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a single data frame to the remote peer.","sig":null,"attributes":[{"value":"/ Sends a single data frame to the remote peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673061,"byte_end":673110,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673115,"byte_end":673118,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function may be called repeatedly as long as `end_of_stream` is set","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673123,"byte_end":673199,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ to `false`. Setting `end_of_stream` to `true` sets the end stream flag","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673204,"byte_end":673278,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ on the data frame. Any further calls to `send_data` or `send_trailers`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673283,"byte_end":673357,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ will return an [`Error`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673362,"byte_end":673391,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673396,"byte_end":673399,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ `send_data` can be called without reserving capacity. In this case, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673404,"byte_end":673479,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ data is buffered and the capacity is implicitly requested. Once the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673484,"byte_end":673555,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/ capacity becomes available, the data is flushed to the connection.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673560,"byte_end":673630,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ However, this buffering is unbounded. As such, sending large amounts of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673635,"byte_end":673710,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ data without reserving capacity before hand could result in large","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673715,"byte_end":673784,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ amounts of data being buffered in memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673789,"byte_end":673834,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673839,"byte_end":673842,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: struct.Error.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":673847,"byte_end":673879,"line_start":328,"line_end":328,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674263,"byte_end":674276,"line_start":339,"line_end":339,"column_start":12,"column_end":25},"name":"send_trailers","qualname":"<SendStream<B>>::send_trailers","value":"pub fn send_trailers(&mut Self, HeaderMap) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends trailers to the remote peer.","sig":null,"attributes":[{"value":"/ Sends trailers to the remote peer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674079,"byte_end":674117,"line_start":335,"line_end":335,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674122,"byte_end":674125,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Sending trailers implicitly closes the send stream. Once the send stream","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674130,"byte_end":674206,"line_start":337,"line_end":337,"column_start":5,"column_end":81}},{"value":"/ is closed, no more data can be sent.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674211,"byte_end":674251,"line_start":338,"line_end":338,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674704,"byte_end":674714,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendStream<B>>::send_reset","value":"pub fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Resets the stream.","sig":null,"attributes":[{"value":"/ Resets the stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674413,"byte_end":674435,"line_start":343,"line_end":343,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674440,"byte_end":674443,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This cancels the request / response exchange. If the response has not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674448,"byte_end":674521,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ yet been received, the associated `ResponseFuture` will return an","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674526,"byte_end":674595,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ [`Error`] to reflect the canceled exchange.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674600,"byte_end":674647,"line_start":347,"line_end":347,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674652,"byte_end":674655,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: struct.Error.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674660,"byte_end":674692,"line_start":349,"line_end":349,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675273,"byte_end":675283,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendStream<B>>::poll_reset","value":"pub fn poll_reset(&mut Self, &mut Context)\n-> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674793,"byte_end":674853,"line_start":354,"line_end":354,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674858,"byte_end":674861,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674866,"byte_end":674928,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":674933,"byte_end":675001,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675006,"byte_end":675009,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675014,"byte_end":675083,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675088,"byte_end":675137,"line_start":360,"line_end":360,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675142,"byte_end":675145,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675150,"byte_end":675161,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675166,"byte_end":675169,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ If connection sees an error, this returns that error instead of a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675174,"byte_end":675243,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ `Reason`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675248,"byte_end":675261,"line_start":365,"line_end":365,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675578,"byte_end":675587,"line_start":375,"line_end":375,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendStream<B>>::stream_id","value":"pub fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of this `SendStream`.","sig":null,"attributes":[{"value":"/ Returns the stream ID of this `SendStream`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675427,"byte_end":675474,"line_start":370,"line_end":370,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675479,"byte_end":675482,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675487,"byte_end":675499,"line_start":372,"line_end":372,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675504,"byte_end":675507,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675512,"byte_end":675566,"line_start":374,"line_end":374,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":676014,"byte_end":676018,"line_start":395,"line_end":395,"column_start":18,"column_end":22},"name":"data","qualname":"<RecvStream>::data","value":"pub async fn data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the next data frame.\n","sig":null,"attributes":[{"value":"/ Get the next data frame.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675968,"byte_end":675996,"line_start":394,"line_end":394,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":676216,"byte_end":676224,"line_start":400,"line_end":400,"column_start":18,"column_end":26},"name":"trailers","qualname":"<RecvStream>::trailers","value":"pub async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get optional trailers for this stream.\n","sig":null,"attributes":[{"value":"/ Get optional trailers for this stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":676156,"byte_end":676198,"line_start":399,"line_end":399,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":676415,"byte_end":676424,"line_start":405,"line_end":405,"column_start":12,"column_end":21},"name":"poll_data","qualname":"<RecvStream>::poll_data","value":"pub fn poll_data(&mut Self, &mut Context)\n-> Poll<Option<Result<Bytes, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next data frame.\n","sig":null,"attributes":[{"value":"/ Poll for the next data frame.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":676370,"byte_end":676403,"line_start":404,"line_end":404,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":676602,"byte_end":676615,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"poll_trailers","qualname":"<RecvStream>::poll_trailers","value":"pub fn poll_trailers(&mut Self, &mut Context)\n-> Poll<Result<Option<HeaderMap>, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677155,"byte_end":677168,"line_start":425,"line_end":425,"column_start":12,"column_end":25},"name":"is_end_stream","qualname":"<RecvStream>::is_end_stream","value":"pub fn is_end_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the receive half has reached the end of stream.","sig":null,"attributes":[{"value":"/ Returns true if the receive half has reached the end of stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":676955,"byte_end":677022,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677027,"byte_end":677030,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ A return value of `true` means that calls to `poll` and `poll_trailers`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677035,"byte_end":677110,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ will both return `None`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677115,"byte_end":677143,"line_start":424,"line_end":424,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677381,"byte_end":677393,"line_start":432,"line_end":432,"column_start":12,"column_end":24},"name":"flow_control","qualname":"<RecvStream>::flow_control","value":"pub fn flow_control(&mut Self) -> &mut FlowControl","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this stream's `FlowControl`.","sig":null,"attributes":[{"value":"/ Get a mutable reference to this stream's `FlowControl`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677238,"byte_end":677297,"line_start":429,"line_end":429,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677302,"byte_end":677305,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ It can be used immediately, or cloned to be used later.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677310,"byte_end":677369,"line_start":431,"line_end":431,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677607,"byte_end":677616,"line_start":441,"line_end":441,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<RecvStream>::stream_id","value":"pub fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of this stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of this stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677462,"byte_end":677503,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677508,"byte_end":677511,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677516,"byte_end":677528,"line_start":438,"line_end":438,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677533,"byte_end":677536,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677541,"byte_end":677595,"line_start":440,"line_end":440,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678818,"byte_end":678827,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<FlowControl>::stream_id","value":"pub fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the stream whose capacity will\n be released by this `FlowControl`.\n","sig":null,"attributes":[{"value":"/ Returns the stream ID of the stream whose capacity will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678704,"byte_end":678763,"line_start":481,"line_end":481,"column_start":5,"column_end":64}},{"value":"/ be released by this `FlowControl`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678768,"byte_end":678806,"line_start":482,"line_end":482,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679003,"byte_end":679021,"line_start":488,"line_end":488,"column_start":12,"column_end":30},"name":"available_capacity","qualname":"<FlowControl>::available_capacity","value":"pub fn available_capacity(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Get the current available capacity of data this stream *could* receive.\n","sig":null,"attributes":[{"value":"/ Get the current available capacity of data this stream *could* receive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678916,"byte_end":678991,"line_start":487,"line_end":487,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679247,"byte_end":679260,"line_start":495,"line_end":495,"column_start":12,"column_end":25},"name":"used_capacity","qualname":"<FlowControl>::used_capacity","value":"pub fn used_capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the currently *used* capacity for this stream.","sig":null,"attributes":[{"value":"/ Get the currently *used* capacity for this stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679096,"byte_end":679150,"line_start":492,"line_end":492,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679155,"byte_end":679158,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is the amount of bytes that can be released back to the remote.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679163,"byte_end":679235,"line_start":494,"line_end":494,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":680023,"byte_end":680039,"line_start":515,"line_end":515,"column_start":12,"column_end":28},"name":"release_capacity","qualname":"<FlowControl>::release_capacity","value":"pub fn release_capacity(&mut Self, usize) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Release window capacity back to remote stream.","sig":null,"attributes":[{"value":"/ Release window capacity back to remote stream.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679339,"byte_end":679389,"line_start":499,"line_end":499,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679394,"byte_end":679397,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This releases capacity back to the stream level and the connection level","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679402,"byte_end":679478,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ windows. Both window sizes will be increased by `sz`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679483,"byte_end":679540,"line_start":502,"line_end":502,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679545,"byte_end":679548,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ See [struct level] documentation for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679553,"byte_end":679607,"line_start":504,"line_end":504,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679612,"byte_end":679615,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679620,"byte_end":679632,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679637,"byte_end":679640,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function errors if increasing the receive window size by `sz` would","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679645,"byte_end":679721,"line_start":508,"line_end":508,"column_start":5,"column_end":81}},{"value":"/ result in a window size greater than the target window size. In other","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679726,"byte_end":679799,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ words, the caller cannot release more capacity than data has been","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679804,"byte_end":679873,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/ received. If 1024 bytes of data have been received, at most 1024 bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679878,"byte_end":679952,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ can be released.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679957,"byte_end":679977,"line_start":512,"line_end":512,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679982,"byte_end":679985,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ [struct level]: #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":679990,"byte_end":680011,"line_start":514,"line_end":514,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":680553,"byte_end":680557,"line_start":533,"line_end":533,"column_start":18,"column_end":22},"name":"ping","qualname":"<PingPong>::ping","value":"pub async fn ping<'_>(&'_ mut Self, Ping) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send a PING frame and wait for the peer to send the pong.\n","sig":null,"attributes":[{"value":"/ Send a PING frame and wait for the peer to send the pong.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":680474,"byte_end":680535,"line_start":532,"line_end":532,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":680750,"byte_end":680759,"line_start":539,"line_end":539,"column_start":12,"column_end":21},"name":"send_ping","qualname":"<PingPong>::send_ping","value":"pub fn send_ping(&mut Self, Ping) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681205,"byte_end":681214,"line_start":552,"line_end":552,"column_start":12,"column_end":21},"name":"poll_pong","qualname":"<PingPong>::poll_pong","value":"pub fn poll_pong(&mut Self, &mut Context) -> Poll<Result<Pong, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681771,"byte_end":681777,"line_start":572,"line_end":572,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Ping>::opaque","value":"pub fn opaque() -> Ping","parent":null,"children":[],"decl_id":null,"docs":" Creates a new opaque `Ping` to be sent via a [`PingPong`][].","sig":null,"attributes":[{"value":"/ Creates a new opaque `Ping` to be sent via a [`PingPong`][].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681564,"byte_end":681628,"line_start":567,"line_end":567,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681633,"byte_end":681636,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The payload is \"opaque\", such that it shouldn't be depended on.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681641,"byte_end":681708,"line_start":569,"line_end":569,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681713,"byte_end":681716,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681721,"byte_end":681759,"line_start":571,"line_end":571,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13213,"byte_end":13222,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13249,"byte_end":13258,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13484,"byte_end":13493,"line_start":67,"line_end":67,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13605,"byte_end":13614,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13746,"byte_end":13755,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13782,"byte_end":13791,"line_start":83,"line_end":83,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":15833,"byte_end":15843,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":26790,"byte_end":26800,"line_start":329,"line_end":329,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":28193,"byte_end":28204,"line_start":374,"line_end":374,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":29059,"byte_end":29064,"line_start":402,"line_end":402,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":31287,"byte_end":31298,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":35035,"byte_end":35042,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":39363,"byte_end":39370,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":39473,"byte_end":39484,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":40304,"byte_end":40315,"line_start":352,"line_end":352,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":40591,"byte_end":40602,"line_start":363,"line_end":363,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":6538,"byte_end":6543,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":7522,"byte_end":7527,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":9621,"byte_end":9626,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":10513,"byte_end":10518,"line_start":155,"line_end":155,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":10780,"byte_end":10785,"line_start":166,"line_end":166,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":11682,"byte_end":11687,"line_start":194,"line_end":194,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41952,"byte_end":41957,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":43173,"byte_end":43178,"line_start":91,"line_end":91,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":43757,"byte_end":43762,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":43898,"byte_end":43903,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":44103,"byte_end":44108,"line_start":126,"line_end":126,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":44242,"byte_end":44247,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":45714,"byte_end":45719,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":50363,"byte_end":50370,"line_start":147,"line_end":147,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":56107,"byte_end":56114,"line_start":326,"line_end":326,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":56224,"byte_end":56238,"line_start":334,"line_end":334,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":59680,"byte_end":59685,"line_start":445,"line_end":445,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62186,"byte_end":62198,"line_start":534,"line_end":534,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62361,"byte_end":62373,"line_start":541,"line_end":541,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62552,"byte_end":62564,"line_start":548,"line_end":548,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62737,"byte_end":62749,"line_start":555,"line_end":555,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62922,"byte_end":62934,"line_start":562,"line_end":562,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":63105,"byte_end":63110,"line_start":569,"line_end":569,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\encoder.rs","byte_start":72372,"byte_end":72379,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\encoder.rs","byte_start":77897,"byte_end":77904,"line_start":185,"line_end":185,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":95566,"byte_end":95572,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":96091,"byte_end":96097,"line_start":59,"line_end":59,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":100721,"byte_end":100727,"line_start":197,"line_end":197,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":101228,"byte_end":101232,"line_start":213,"line_end":213,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":102489,"byte_end":102497,"line_start":248,"line_end":248,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":103176,"byte_end":103184,"line_start":273,"line_end":273,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":103292,"byte_end":103300,"line_start":280,"line_end":280,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":103388,"byte_end":103396,"line_start":286,"line_end":286,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\huffman\\mod.rs","byte_start":104910,"byte_end":104917,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\table.rs","byte_start":220118,"byte_end":220123,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\table.rs","byte_start":238235,"byte_end":238240,"line_start":637,"line_end":637,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":246027,"byte_end":246037,"line_start":97,"line_end":97,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":255975,"byte_end":255990,"line_start":340,"line_end":340,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":256441,"byte_end":256454,"line_start":365,"line_end":365,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":262237,"byte_end":262247,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":262431,"byte_end":262441,"line_start":526,"line_end":526,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":263837,"byte_end":263847,"line_start":561,"line_end":561,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264467,"byte_end":264472,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":265384,"byte_end":265393,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":265575,"byte_end":265580,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":265929,"byte_end":265934,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":266049,"byte_end":266054,"line_start":77,"line_end":77,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":266201,"byte_end":266210,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\go_away.rs","byte_start":267797,"byte_end":267803,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\go_away.rs","byte_start":271102,"byte_end":271111,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\peer.rs","byte_start":272185,"byte_end":272188,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":275323,"byte_end":275331,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":279715,"byte_end":279727,"line_start":201,"line_end":201,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":279922,"byte_end":279931,"line_start":212,"line_end":212,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":281486,"byte_end":281497,"line_start":263,"line_end":263,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":282015,"byte_end":282026,"line_start":285,"line_end":285,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\settings.rs","byte_start":283050,"byte_end":283058,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\buffer.rs","byte_start":289236,"byte_end":289242,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\buffer.rs","byte_start":289326,"byte_end":289331,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\counts.rs","byte_start":291705,"byte_end":291711,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\counts.rs","byte_start":297226,"byte_end":297232,"line_start":202,"line_end":202,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":299188,"byte_end":299199,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303525,"byte_end":303531,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303841,"byte_end":303847,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304037,"byte_end":304043,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304318,"byte_end":304324,"line_start":229,"line_end":229,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304455,"byte_end":304461,"line_start":235,"line_end":235,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304632,"byte_end":304638,"line_start":242,"line_end":242,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304754,"byte_end":304760,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\prioritize.rs","byte_start":307583,"byte_end":307593,"line_start":78,"line_end":78,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\prioritize.rs","byte_start":337814,"byte_end":337825,"line_start":861,"line_end":861,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\prioritize.rs","byte_start":338225,"byte_end":338236,"line_start":882,"line_end":882,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\recv.rs","byte_start":340729,"byte_end":340733,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\recv.rs","byte_start":375269,"byte_end":375273,"line_start":1057,"line_end":1057,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\recv.rs","byte_start":375512,"byte_end":375532,"line_start":1070,"line_end":1070,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\send.rs","byte_start":376881,"byte_end":376885,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\state.rs","byte_start":396735,"byte_end":396740,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\state.rs","byte_start":409267,"byte_end":409272,"line_start":462,"line_end":462,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\state.rs","byte_start":409366,"byte_end":409370,"line_start":468,"line_end":468,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":411203,"byte_end":411208,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":413233,"byte_end":413238,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":413353,"byte_end":413358,"line_start":171,"line_end":171,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":413706,"byte_end":413711,"line_start":184,"line_end":184,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":414025,"byte_end":414030,"line_start":195,"line_end":195,"column_start":6,"column_end":11},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":414783,"byte_end":414788,"line_start":225,"line_end":225,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1671},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":417377,"byte_end":417380,"line_start":329,"line_end":329,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418273,"byte_end":418276,"line_start":360,"line_end":360,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418439,"byte_end":418442,"line_start":369,"line_end":369,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418575,"byte_end":418578,"line_start":377,"line_end":377,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418697,"byte_end":418700,"line_start":383,"line_end":383,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418847,"byte_end":418860,"line_start":391,"line_end":391,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":419060,"byte_end":419071,"line_start":401,"line_end":401,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":423388,"byte_end":423394,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":430259,"byte_end":430269,"line_start":325,"line_end":325,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":430797,"byte_end":430805,"line_start":347,"line_end":347,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":431537,"byte_end":431553,"line_start":374,"line_end":374,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":432116,"byte_end":432132,"line_start":396,"line_end":396,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":432671,"byte_end":432679,"line_start":418,"line_end":418,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":433391,"byte_end":433406,"line_start":445,"line_end":445,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":434040,"byte_end":434053,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":437201,"byte_end":437208,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":443208,"byte_end":443218,"line_start":299,"line_end":299,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":445313,"byte_end":445318,"line_start":358,"line_end":358,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1962},{"krate":0,"index":1966},{"krate":0,"index":1970},{"krate":0,"index":1974},{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":464105,"byte_end":464112,"line_start":887,"line_end":887,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":464856,"byte_end":464863,"line_start":914,"line_end":914,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":466365,"byte_end":466372,"line_start":970,"line_end":970,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":466667,"byte_end":466674,"line_start":984,"line_end":984,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":467027,"byte_end":467036,"line_start":1002,"line_end":1002,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":474126,"byte_end":474135,"line_start":1221,"line_end":1221,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":474344,"byte_end":474359,"line_start":1232,"line_end":1232,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":477643,"byte_end":477658,"line_start":1339,"line_end":1339,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":478431,"byte_end":478446,"line_start":1363,"line_end":1363,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":478774,"byte_end":478789,"line_start":1377,"line_end":1377,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":481004,"byte_end":481014,"line_start":1450,"line_end":1450,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":481162,"byte_end":481169,"line_start":1459,"line_end":1459,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":489072,"byte_end":489076,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":491617,"byte_end":491621,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":492241,"byte_end":492245,"line_start":144,"line_end":144,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":492663,"byte_end":492668,"line_start":160,"line_end":160,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":492767,"byte_end":492771,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":493231,"byte_end":493240,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":493799,"byte_end":493808,"line_start":214,"line_end":214,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":493977,"byte_end":493986,"line_start":226,"line_end":226,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\go_away.rs","byte_start":494492,"byte_end":494498,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\go_away.rs","byte_start":495746,"byte_end":495751,"line_start":61,"line_end":61,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\go_away.rs","byte_start":495855,"byte_end":495861,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\head.rs","byte_start":496703,"byte_end":496707,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\head.rs","byte_start":497728,"byte_end":497732,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":500687,"byte_end":500694,"line_start":109,"line_end":109,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":505093,"byte_end":505098,"line_start":278,"line_end":278,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":505197,"byte_end":505204,"line_start":284,"line_end":284,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":506139,"byte_end":506150,"line_start":330,"line_end":330,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":510849,"byte_end":510854,"line_start":493,"line_end":493,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":510961,"byte_end":510972,"line_start":499,"line_end":499,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":511348,"byte_end":511360,"line_start":512,"line_end":512,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":511712,"byte_end":511718,"line_start":527,"line_end":527,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":513738,"byte_end":513757,"line_start":600,"line_end":600,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":515377,"byte_end":515381,"line_start":652,"line_end":652,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516344,"byte_end":516355,"line_start":690,"line_end":690,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517028,"byte_end":517039,"line_start":724,"line_end":724,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517286,"byte_end":517297,"line_start":737,"line_end":737,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517691,"byte_end":517706,"line_start":750,"line_end":750,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":518143,"byte_end":518158,"line_start":772,"line_end":772,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":518421,"byte_end":518436,"line_start":785,"line_end":785,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":518711,"byte_end":518722,"line_start":796,"line_end":796,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2526},{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\ping.rs","byte_start":526699,"byte_end":526703,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\ping.rs","byte_start":529074,"byte_end":529079,"line_start":98,"line_end":98,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\priority.rs","byte_start":529738,"byte_end":529746,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\priority.rs","byte_start":530135,"byte_end":530140,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\priority.rs","byte_start":530264,"byte_end":530280,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531705,"byte_end":531711,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":534901,"byte_end":534907,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":535078,"byte_end":535084,"line_start":99,"line_end":99,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":535845,"byte_end":535848,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":535980,"byte_end":535986,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reset.rs","byte_start":536310,"byte_end":536315,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reset.rs","byte_start":537323,"byte_end":537328,"line_start":52,"line_end":52,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":538867,"byte_end":538875,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":544292,"byte_end":544297,"line_start":242,"line_end":242,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":544402,"byte_end":544410,"line_start":248,"line_end":248,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":545393,"byte_end":545400,"line_start":280,"line_end":280,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547128,"byte_end":547141,"line_start":334,"line_end":334,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547559,"byte_end":547572,"line_start":358,"line_end":358,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548480,"byte_end":548488,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":550191,"byte_end":550199,"line_start":79,"line_end":79,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":550459,"byte_end":550467,"line_start":92,"line_end":92,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\util.rs","byte_start":552117,"byte_end":552127,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\window_update.rs","byte_start":552944,"byte_end":552956,"line_start":13,"line_end":13,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\window_update.rs","byte_start":554293,"byte_end":554298,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2811}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\mod.rs","byte_start":485906,"byte_end":485911,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\mod.rs","byte_start":486502,"byte_end":486507,"line_start":103,"line_end":103,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567166,"byte_end":567177,"line_start":338,"line_end":338,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":574235,"byte_end":574246,"line_start":522,"line_end":522,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":574407,"byte_end":574418,"line_start":531,"line_end":531,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575325,"byte_end":575341,"line_start":568,"line_end":568,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575826,"byte_end":575833,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593043,"byte_end":593050,"line_start":1073,"line_end":1073,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":595122,"byte_end":595132,"line_start":1141,"line_end":1141,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599847,"byte_end":599857,"line_start":1270,"line_end":1270,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600204,"byte_end":600214,"line_start":1283,"line_end":1283,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600468,"byte_end":600482,"line_start":1296,"line_end":1296,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600857,"byte_end":600871,"line_start":1307,"line_end":1307,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601633,"byte_end":601645,"line_start":1335,"line_end":1335,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3085},{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":602934,"byte_end":602945,"line_start":1374,"line_end":1374,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603525,"byte_end":603545,"line_start":1394,"line_end":1394,"column_start":17,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603752,"byte_end":603772,"line_start":1402,"line_end":1402,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":604041,"byte_end":604045,"line_start":1415,"line_end":1415,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":606144,"byte_end":606148,"line_start":1479,"line_end":1479,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617899,"byte_end":617917,"line_start":289,"line_end":289,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":620028,"byte_end":620038,"line_start":361,"line_end":361,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628107,"byte_end":628117,"line_start":577,"line_end":577,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628392,"byte_end":628399,"line_start":591,"line_end":591,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641473,"byte_end":641480,"line_start":972,"line_end":972,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641592,"byte_end":641604,"line_start":980,"line_end":980,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644803,"byte_end":644821,"line_start":1072,"line_end":1072,"column_start":14,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647354,"byte_end":647359,"line_start":1144,"line_end":1144,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647477,"byte_end":647482,"line_start":1150,"line_end":1150,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647895,"byte_end":647906,"line_start":1166,"line_end":1166,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":648165,"byte_end":648176,"line_start":1179,"line_end":1179,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3337},{"krate":0,"index":3338}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":649453,"byte_end":649462,"line_start":1218,"line_end":1218,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":652511,"byte_end":652520,"line_start":1288,"line_end":1288,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":652720,"byte_end":652724,"line_start":1298,"line_end":1298,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":654783,"byte_end":654787,"line_start":1374,"line_end":1374,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":658604,"byte_end":658615,"line_start":1495,"line_end":1495,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":659059,"byte_end":659070,"line_start":1509,"line_end":1509,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":659346,"byte_end":659357,"line_start":1520,"line_end":1520,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":659644,"byte_end":659655,"line_start":1531,"line_end":1531,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3393}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669213,"byte_end":669223,"line_start":217,"line_end":217,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675709,"byte_end":675717,"line_start":382,"line_end":382,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675863,"byte_end":675873,"line_start":389,"line_end":389,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3459},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677945,"byte_end":677955,"line_start":455,"line_end":455,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3469}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678144,"byte_end":678154,"line_start":463,"line_end":463,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3471}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678586,"byte_end":678597,"line_start":476,"line_end":476,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":680368,"byte_end":680376,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3484},{"krate":0,"index":3486}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681395,"byte_end":681403,"line_start":558,"line_end":558,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681553,"byte_end":681557,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681843,"byte_end":681847,"line_start":577,"line_end":577,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":682008,"byte_end":682012,"line_start":585,"line_end":585,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":5210,"byte_end":5214,"line_start":151,"line_end":151,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4346,"byte_end":4352,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2901}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":4362,"byte_end":4368,"line_start":123,"line_end":123,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3110}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13213,"byte_end":13222,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3545},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13249,"byte_end":13258,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3545},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13484,"byte_end":13493,"line_start":67,"line_end":67,"column_start":26,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3545},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13605,"byte_end":13614,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3545},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13746,"byte_end":13755,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3554},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\error.rs","byte_start":13782,"byte_end":13791,"line_start":83,"line_end":83,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3554},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":15833,"byte_end":15843,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":26790,"byte_end":26800,"line_start":329,"line_end":329,"column_start":20,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3581},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":28193,"byte_end":28204,"line_start":374,"line_end":374,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_read.rs","byte_start":29059,"byte_end":29064,"line_start":402,"line_end":402,"column_start":31,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":31287,"byte_end":31298,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":35035,"byte_end":35042,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":39363,"byte_end":39370,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":39473,"byte_end":39484,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":40304,"byte_end":40315,"line_start":352,"line_end":352,"column_start":45,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4110},"to":{"krate":16,"index":227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\framed_write.rs","byte_start":40591,"byte_end":40602,"line_start":363,"line_end":363,"column_start":29,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4110},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":6538,"byte_end":6543,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":7522,"byte_end":7527,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":9621,"byte_end":9626,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":10513,"byte_end":10518,"line_start":155,"line_end":155,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4311},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":10780,"byte_end":10785,"line_start":166,"line_end":166,"column_start":31,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4311},"to":{"krate":29,"index":17}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\codec\\mod.rs","byte_start":11682,"byte_end":11687,"line_start":194,"line_end":194,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4311},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":41952,"byte_end":41957,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":43173,"byte_end":43178,"line_start":91,"line_end":91,"column_start":29,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4319},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":43757,"byte_end":43762,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4319},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":43898,"byte_end":43903,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4319},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":44103,"byte_end":44108,"line_start":126,"line_end":126,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4319},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":44242,"byte_end":44247,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4319},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\error.rs","byte_start":45714,"byte_end":45719,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4319},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":50363,"byte_end":50370,"line_start":147,"line_end":147,"column_start":6,"column_end":13},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":56107,"byte_end":56114,"line_start":326,"line_end":326,"column_start":18,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4345},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":56224,"byte_end":56238,"line_start":334,"line_end":334,"column_start":6,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":59680,"byte_end":59685,"line_start":445,"line_end":445,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62186,"byte_end":62198,"line_start":534,"line_end":534,"column_start":26,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4352},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62361,"byte_end":62373,"line_start":541,"line_end":541,"column_start":43,"column_end":55},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4352},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62552,"byte_end":62564,"line_start":548,"line_end":548,"column_start":42,"column_end":54},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4352},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62737,"byte_end":62749,"line_start":555,"line_end":555,"column_start":38,"column_end":50},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4352},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":62922,"byte_end":62934,"line_start":562,"line_end":562,"column_start":42,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4352},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\decoder.rs","byte_start":63105,"byte_end":63110,"line_start":569,"line_end":569,"column_start":36,"column_end":41},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":8440},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\encoder.rs","byte_start":72372,"byte_end":72379,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\encoder.rs","byte_start":77897,"byte_end":77904,"line_start":185,"line_end":185,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4546},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":95566,"byte_end":95572,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":96091,"byte_end":96097,"line_start":59,"line_end":59,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":100721,"byte_end":100727,"line_start":197,"line_end":197,"column_start":23,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4579},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":101228,"byte_end":101232,"line_start":213,"line_end":213,"column_start":10,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":102489,"byte_end":102497,"line_start":248,"line_end":248,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":103176,"byte_end":103184,"line_start":273,"line_end":273,"column_start":26,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4652},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":103292,"byte_end":103300,"line_start":280,"line_end":280,"column_start":22,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4652},"to":{"krate":2,"index":2777}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\header.rs","byte_start":103388,"byte_end":103396,"line_start":286,"line_end":286,"column_start":21,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4652},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\huffman\\mod.rs","byte_start":104910,"byte_end":104917,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\table.rs","byte_start":220118,"byte_end":220123,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\hpack\\table.rs","byte_start":238235,"byte_end":238240,"line_start":637,"line_end":637,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":246027,"byte_end":246037,"line_start":97,"line_end":97,"column_start":15,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":255975,"byte_end":255990,"line_start":340,"line_end":340,"column_start":12,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":256441,"byte_end":256454,"line_start":365,"line_end":365,"column_start":9,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":262237,"byte_end":262247,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":262431,"byte_end":262441,"line_start":526,"line_end":526,"column_start":12,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\connection.rs","byte_start":263837,"byte_end":263847,"line_start":561,"line_end":561,"column_start":24,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4735},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":264467,"byte_end":264472,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":265384,"byte_end":265393,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":265575,"byte_end":265580,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5074},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":265929,"byte_end":265934,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5074},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":266049,"byte_end":266054,"line_start":77,"line_end":77,"column_start":26,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5074},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\error.rs","byte_start":266201,"byte_end":266210,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3545},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\go_away.rs","byte_start":267797,"byte_end":267803,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\go_away.rs","byte_start":271102,"byte_end":271111,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\peer.rs","byte_start":272185,"byte_end":272188,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":275323,"byte_end":275331,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":279715,"byte_end":279727,"line_start":201,"line_end":201,"column_start":6,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":279922,"byte_end":279931,"line_start":212,"line_end":212,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":281486,"byte_end":281497,"line_start":263,"line_end":263,"column_start":6,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\ping_pong.rs","byte_start":282015,"byte_end":282026,"line_start":285,"line_end":285,"column_start":15,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5188},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\settings.rs","byte_start":283050,"byte_end":283058,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\buffer.rs","byte_start":289236,"byte_end":289242,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\buffer.rs","byte_start":289326,"byte_end":289331,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\counts.rs","byte_start":291705,"byte_end":291711,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\counts.rs","byte_start":297226,"byte_end":297232,"line_start":202,"line_end":202,"column_start":15,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5384},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":299188,"byte_end":299199,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303525,"byte_end":303531,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":303841,"byte_end":303847,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":2531}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304037,"byte_end":304043,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":2578}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304318,"byte_end":304324,"line_start":229,"line_end":229,"column_start":44,"column_end":50},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304455,"byte_end":304461,"line_start":235,"line_end":235,"column_start":38,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":2947}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304632,"byte_end":304638,"line_start":242,"line_end":242,"column_start":44,"column_end":50},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":2978}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\flow_control.rs","byte_start":304754,"byte_end":304760,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\prioritize.rs","byte_start":307583,"byte_end":307593,"line_start":78,"line_end":78,"column_start":6,"column_end":16},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\prioritize.rs","byte_start":337814,"byte_end":337825,"line_start":861,"line_end":861,"column_start":17,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1226},"to":{"krate":15,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\prioritize.rs","byte_start":338225,"byte_end":338236,"line_start":882,"line_end":882,"column_start":29,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\recv.rs","byte_start":340729,"byte_end":340733,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\recv.rs","byte_start":375269,"byte_end":375273,"line_start":1057,"line_end":1057,"column_start":6,"column_end":10},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\recv.rs","byte_start":375512,"byte_end":375532,"line_start":1070,"line_end":1070,"column_start":25,"column_end":45},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6086},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\send.rs","byte_start":376881,"byte_end":376885,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\state.rs","byte_start":396735,"byte_end":396740,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\state.rs","byte_start":409267,"byte_end":409272,"line_start":462,"line_end":462,"column_start":18,"column_end":23},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\state.rs","byte_start":409366,"byte_end":409370,"line_start":468,"line_end":468,"column_start":18,"column_end":22},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6788},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":411203,"byte_end":411208,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":413233,"byte_end":413238,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7035},"to":{"krate":0,"index":1640}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":413353,"byte_end":413358,"line_start":171,"line_end":171,"column_start":26,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7035},"to":{"krate":2,"index":3176}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":413706,"byte_end":413711,"line_start":184,"line_end":184,"column_start":29,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7035},"to":{"krate":2,"index":3180}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":414025,"byte_end":414030,"line_start":195,"line_end":195,"column_start":6,"column_end":11},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":414783,"byte_end":414788,"line_start":225,"line_end":225,"column_start":9,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":417377,"byte_end":417380,"line_start":329,"line_end":329,"column_start":10,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418273,"byte_end":418276,"line_start":360,"line_end":360,"column_start":22,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1615},"to":{"krate":0,"index":1640}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418439,"byte_end":418442,"line_start":369,"line_end":369,"column_start":25,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1615},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418575,"byte_end":418578,"line_start":377,"line_end":377,"column_start":28,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1615},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418697,"byte_end":418700,"line_start":383,"line_end":383,"column_start":25,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1615},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":418847,"byte_end":418860,"line_start":391,"line_end":391,"column_start":10,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\store.rs","byte_start":419060,"byte_end":419071,"line_start":401,"line_end":401,"column_start":10,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":423388,"byte_end":423394,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":430259,"byte_end":430269,"line_start":325,"line_end":325,"column_start":22,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7191},"to":{"krate":0,"index":1619}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":430797,"byte_end":430805,"line_start":347,"line_end":347,"column_start":22,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7195},"to":{"krate":0,"index":1619}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":431537,"byte_end":431553,"line_start":374,"line_end":374,"column_start":22,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7199},"to":{"krate":0,"index":1619}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":432116,"byte_end":432132,"line_start":396,"line_end":396,"column_start":22,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7203},"to":{"krate":0,"index":1619}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":432671,"byte_end":432679,"line_start":418,"line_end":418,"column_start":22,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7207},"to":{"krate":0,"index":1619}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":433391,"byte_end":433406,"line_start":445,"line_end":445,"column_start":22,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7211},"to":{"krate":0,"index":1619}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\stream.rs","byte_start":434040,"byte_end":434053,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":437201,"byte_end":437208,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":443208,"byte_end":443218,"line_start":299,"line_end":299,"column_start":9,"column_end":19},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":445313,"byte_end":445318,"line_start":358,"line_end":358,"column_start":6,"column_end":11},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":464105,"byte_end":464112,"line_start":887,"line_end":887,"column_start":9,"column_end":16},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":464856,"byte_end":464863,"line_start":914,"line_end":914,"column_start":12,"column_end":19},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":466365,"byte_end":466372,"line_start":970,"line_end":970,"column_start":22,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7247},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":466667,"byte_end":466674,"line_start":984,"line_end":984,"column_start":21,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7247},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":467027,"byte_end":467036,"line_start":1002,"line_end":1002,"column_start":9,"column_end":18},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":474126,"byte_end":474135,"line_start":1221,"line_end":1221,"column_start":19,"column_end":28},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":7267},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":474344,"byte_end":474359,"line_start":1232,"line_end":1232,"column_start":6,"column_end":21},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":477643,"byte_end":477658,"line_start":1339,"line_end":1339,"column_start":21,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":478431,"byte_end":478446,"line_start":1363,"line_end":1363,"column_start":16,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":478774,"byte_end":478789,"line_start":1377,"line_end":1377,"column_start":15,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":481004,"byte_end":481014,"line_start":1450,"line_end":1450,"column_start":9,"column_end":19},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":7288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\proto\\streams\\streams.rs","byte_start":481162,"byte_end":481169,"line_start":1459,"line_end":1459,"column_start":6,"column_end":13},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":489072,"byte_end":489076,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":491617,"byte_end":491621,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":492241,"byte_end":492245,"line_start":144,"line_end":144,"column_start":14,"column_end":18},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":492663,"byte_end":492668,"line_start":160,"line_end":160,"column_start":27,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":492767,"byte_end":492771,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7577},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":493231,"byte_end":493240,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":493799,"byte_end":493808,"line_start":214,"line_end":214,"column_start":18,"column_end":27},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7594},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\data.rs","byte_start":493977,"byte_end":493986,"line_start":226,"line_end":226,"column_start":21,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7594},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\go_away.rs","byte_start":494492,"byte_end":494498,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\go_away.rs","byte_start":495746,"byte_end":495751,"line_start":61,"line_end":61,"column_start":33,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\go_away.rs","byte_start":495855,"byte_end":495861,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7607},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\head.rs","byte_start":496703,"byte_end":496707,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\head.rs","byte_start":497728,"byte_end":497732,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":500687,"byte_end":500694,"line_start":109,"line_end":109,"column_start":6,"column_end":13},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":505093,"byte_end":505098,"line_start":278,"line_end":278,"column_start":27,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":505197,"byte_end":505204,"line_start":284,"line_end":284,"column_start":21,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":7696},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":506139,"byte_end":506150,"line_start":330,"line_end":330,"column_start":6,"column_end":17},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":510849,"byte_end":510854,"line_start":493,"line_end":493,"column_start":31,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":510961,"byte_end":510972,"line_start":499,"line_end":499,"column_start":21,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7721},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":511348,"byte_end":511360,"line_start":512,"line_end":512,"column_start":6,"column_end":18},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":511712,"byte_end":511718,"line_start":527,"line_end":527,"column_start":6,"column_end":12},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":513738,"byte_end":513757,"line_start":600,"line_end":600,"column_start":6,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":515377,"byte_end":515381,"line_start":652,"line_end":652,"column_start":19,"column_end":23},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7768},"to":{"krate":2,"index":7390}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":516344,"byte_end":516355,"line_start":690,"line_end":690,"column_start":6,"column_end":17},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517028,"byte_end":517039,"line_start":724,"line_end":724,"column_start":18,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":7708},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517286,"byte_end":517297,"line_start":737,"line_end":737,"column_start":21,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7708},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":517691,"byte_end":517706,"line_start":750,"line_end":750,"column_start":6,"column_end":21},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":518143,"byte_end":518158,"line_start":772,"line_end":772,"column_start":18,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7733},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":518421,"byte_end":518436,"line_start":785,"line_end":785,"column_start":21,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7733},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\headers.rs","byte_start":518711,"byte_end":518722,"line_start":796,"line_end":796,"column_start":6,"column_end":17},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\ping.rs","byte_start":526699,"byte_end":526703,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\ping.rs","byte_start":529074,"byte_end":529079,"line_start":98,"line_end":98,"column_start":24,"column_end":29},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\priority.rs","byte_start":529738,"byte_end":529746,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\priority.rs","byte_start":530135,"byte_end":530140,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\priority.rs","byte_start":530264,"byte_end":530280,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":531705,"byte_end":531711,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":534901,"byte_end":534907,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8193},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":535078,"byte_end":535084,"line_start":99,"line_end":99,"column_start":21,"column_end":27},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8193},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":535845,"byte_end":535848,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2608},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reason.rs","byte_start":535980,"byte_end":535986,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8193},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reset.rs","byte_start":536310,"byte_end":536315,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\reset.rs","byte_start":537323,"byte_end":537328,"line_start":52,"line_end":52,"column_start":32,"column_end":37},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":538867,"byte_end":538875,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":8237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":544292,"byte_end":544297,"line_start":242,"line_end":242,"column_start":28,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":544402,"byte_end":544410,"line_start":248,"line_end":248,"column_start":21,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8237},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":545393,"byte_end":545400,"line_start":280,"line_end":280,"column_start":6,"column_end":13},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547128,"byte_end":547141,"line_start":334,"line_end":334,"column_start":6,"column_end":19},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\settings.rs","byte_start":547559,"byte_end":547572,"line_start":358,"line_end":358,"column_start":21,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":8277},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":548480,"byte_end":548488,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":8340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":550191,"byte_end":550199,"line_start":79,"line_end":79,"column_start":20,"column_end":28},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":8340},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\stream_id.rs","byte_start":550459,"byte_end":550467,"line_start":92,"line_end":92,"column_start":25,"column_end":33},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":8340},"to":{"krate":2,"index":2531}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\util.rs","byte_start":552117,"byte_end":552127,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\window_update.rs","byte_start":552944,"byte_end":552956,"line_start":13,"line_end":13,"column_start":6,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":8369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\window_update.rs","byte_start":554293,"byte_end":554298,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\mod.rs","byte_start":485906,"byte_end":485911,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":8400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\frame\\mod.rs","byte_start":486502,"byte_end":486507,"line_start":103,"line_end":103,"column_start":24,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":8400},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":567166,"byte_end":567177,"line_start":338,"line_end":338,"column_start":9,"column_end":20},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":574235,"byte_end":574246,"line_start":522,"line_end":522,"column_start":24,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3009},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":574407,"byte_end":574418,"line_start":531,"line_end":531,"column_start":19,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3009},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575325,"byte_end":575341,"line_start":568,"line_end":568,"column_start":20,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":8473},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":575826,"byte_end":575833,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":8497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":593043,"byte_end":593050,"line_start":1073,"line_end":1073,"column_start":18,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":8497},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":595122,"byte_end":595132,"line_start":1141,"line_end":1141,"column_start":12,"column_end":22},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":599847,"byte_end":599857,"line_start":1270,"line_end":1270,"column_start":23,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600204,"byte_end":600214,"line_start":1283,"line_end":1283,"column_start":27,"column_end":37},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600468,"byte_end":600482,"line_start":1296,"line_end":1296,"column_start":17,"column_end":31},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":8479},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":600857,"byte_end":600871,"line_start":1307,"line_end":1307,"column_start":6,"column_end":20},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":8479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":601633,"byte_end":601645,"line_start":1335,"line_end":1335,"column_start":6,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":8493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":602934,"byte_end":602945,"line_start":1374,"line_end":1374,"column_start":6,"column_end":17},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":8488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603525,"byte_end":603545,"line_start":1394,"line_end":1394,"column_start":17,"column_end":37},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":8484},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":603752,"byte_end":603772,"line_start":1402,"line_end":1402,"column_start":6,"column_end":26},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":8484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":604041,"byte_end":604045,"line_start":1415,"line_end":1415,"column_start":6,"column_end":10},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":8508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\client.rs","byte_start":606144,"byte_end":606148,"line_start":1479,"line_end":1479,"column_start":22,"column_end":26},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":8508},"to":{"krate":0,"index":973}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":617899,"byte_end":617917,"line_start":289,"line_end":289,"column_start":42,"column_end":60},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3239},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":620028,"byte_end":620038,"line_start":361,"line_end":361,"column_start":12,"column_end":22},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628107,"byte_end":628117,"line_start":577,"line_end":577,"column_start":27,"column_end":37},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":628392,"byte_end":628399,"line_start":591,"line_end":591,"column_start":6,"column_end":13},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":8562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641473,"byte_end":641480,"line_start":972,"line_end":972,"column_start":18,"column_end":25},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8562},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":641592,"byte_end":641604,"line_start":980,"line_end":980,"column_start":14,"column_end":26},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":8571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":644803,"byte_end":644821,"line_start":1072,"line_end":1072,"column_start":14,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647354,"byte_end":647359,"line_start":1144,"line_end":1144,"column_start":17,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647477,"byte_end":647482,"line_start":1150,"line_end":1150,"column_start":23,"column_end":28},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3256},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":647895,"byte_end":647906,"line_start":1166,"line_end":1166,"column_start":17,"column_end":28},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":648165,"byte_end":648176,"line_start":1179,"line_end":1179,"column_start":23,"column_end":34},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3260},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":649453,"byte_end":649462,"line_start":1218,"line_end":1218,"column_start":28,"column_end":37},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3229},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":652511,"byte_end":652520,"line_start":1288,"line_end":1288,"column_start":27,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3229},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":652720,"byte_end":652724,"line_start":1298,"line_end":1298,"column_start":6,"column_end":10},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":654783,"byte_end":654787,"line_start":1374,"line_end":1374,"column_start":22,"column_end":26},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":8577},"to":{"krate":0,"index":973}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":658604,"byte_end":658615,"line_start":1495,"line_end":1495,"column_start":27,"column_end":38},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":659059,"byte_end":659070,"line_start":1509,"line_end":1509,"column_start":56,"column_end":67},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":659346,"byte_end":659357,"line_start":1520,"line_end":1520,"column_start":62,"column_end":73},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\server.rs","byte_start":659644,"byte_end":659655,"line_start":1531,"line_end":1531,"column_start":56,"column_end":67},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":669213,"byte_end":669223,"line_start":217,"line_end":217,"column_start":14,"column_end":24},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":8903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675709,"byte_end":675717,"line_start":382,"line_end":382,"column_start":6,"column_end":14},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":8909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":675863,"byte_end":675873,"line_start":389,"line_end":389,"column_start":6,"column_end":16},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":677945,"byte_end":677955,"line_start":455,"line_end":455,"column_start":21,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3431},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678144,"byte_end":678154,"line_start":463,"line_end":463,"column_start":15,"column_end":25},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3431},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":678586,"byte_end":678597,"line_start":476,"line_end":476,"column_start":6,"column_end":17},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":8926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":680368,"byte_end":680376,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681395,"byte_end":681403,"line_start":558,"line_end":558,"column_start":21,"column_end":29},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3433},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681553,"byte_end":681557,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":681843,"byte_end":681847,"line_start":577,"line_end":577,"column_start":21,"column_end":25},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3435},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\share.rs","byte_start":682008,"byte_end":682012,"line_start":585,"line_end":585,"column_start":21,"column_end":25},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3437},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\h2-0.3.6\\src\\lib.rs","byte_start":5210,"byte_end":5214,"line_start":151,"line_end":151,"column_start":30,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":2,"index":42927},"to":{"krate":0,"index":3527}}]}