{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2","program":"C:\\Users\\user\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","twoway","C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=4d1fee418c50d264","-C","extra-filename=-4d1fee418c50d264","--out-dir","c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps","--extern","memchr=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libmemchr-a52cdce563174588.rmeta","--extern","unchecked_index=c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libunchecked_index-956024af0cb13cbb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\user\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\user\\Documents\\GitHub\\Karatla_Api\\web_api2\\target\\rls\\debug\\deps\\libtwoway-4d1fee418c50d264.rmeta"},"prelude":{"crate_id":{"name":"twoway","disambiguator":[12268935214896960180,0]},"crate_root":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src","external_crates":[{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","num":14,"id":{"name":"memchr","disambiguator":[4991041642648875269,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\pcmp.rs","num":15,"id":{"name":"unchecked_index","disambiguator":[16247526871753053256,0]}}],"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":0,"byte_end":44137,"line_start":1,"line_end":1235,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":0,"byte_end":44137,"line_start":1,"line_end":1235,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":86},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":59},{"krate":0,"index":120},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":63},{"krate":0,"index":75},{"krate":0,"index":80},{"krate":0,"index":81}],"decl_id":null,"docs":" **This crate is deprecated. Use crate `memchr` instead.**","sig":null,"attributes":[{"value":"/ **This crate is deprecated. Use crate `memchr` instead.**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":100,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":162,"byte_end":165,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Fast substring search for strings and byte strings, using the [two-way algorithm][tw].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":166,"byte_end":256,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ ","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":257,"byte_end":261,"line_start":7,"line_end":7,"column_start":1,"column_end":5}},{"value":"/ This is the same code as is included in Rust's libstd that powers","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":262,"byte_end":331,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `str::find(&str)`, but here it is exposed with some improvements:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":332,"byte_end":401,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ ","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":402,"byte_end":406,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"/ - Available for byte string searches using ``&[u8]``","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":407,"byte_end":463,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/ - Having an optional SSE4.2 accelerated version (if detected at runtime) which is even faster.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":464,"byte_end":562,"line_start":12,"line_end":12,"column_start":1,"column_end":99}},{"value":"/   Runtime detection requires the default std feature.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":563,"byte_end":620,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/ - Using `memchr` for the single byte case, which is ultra fast.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":621,"byte_end":688,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ ","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":689,"byte_end":693,"line_start":15,"line_end":15,"column_start":1,"column_end":5}},{"value":"/ [tw]: http://www-igm.univ-mlv.fr/~lecroq/string/node26.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":694,"byte_end":757,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1390,"byte_end":1398,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"find_str","qualname":"::find_str","value":"pub fn find_str(&str, &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" `find_str` finds the first ocurrence of `pattern` in the `text`.","sig":null,"attributes":[{"value":"/ `find_str` finds the first ocurrence of `pattern` in the `text`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1242,"byte_end":1310,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1311,"byte_end":1314,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Uses the SSE42 version if it is available at runtime.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1315,"byte_end":1372,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1373,"byte_end":1382,"line_start":46,"line_end":46,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1640,"byte_end":1650,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"find_bytes","qualname":"::find_bytes","value":"pub fn find_bytes(&[u8], &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" `find_bytes` finds the first ocurrence of `pattern` in the `text`.","sig":null,"attributes":[{"value":"/ `find_bytes` finds the first ocurrence of `pattern` in the `text`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1500,"byte_end":1570,"line_start":51,"line_end":51,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1571,"byte_end":1574,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Uses the SSE42 version if it is available at runtime.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":1575,"byte_end":1632,"line_start":53,"line_end":53,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":2970,"byte_end":2979,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"rfind_str","qualname":"::rfind_str","value":"pub fn rfind_str(&str, &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" `rfind_str` finds the last ocurrence of `pattern` in the `text`\n and returns the index of the start of the match.","sig":null,"attributes":[{"value":"/ `rfind_str` finds the last ocurrence of `pattern` in the `text`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":2720,"byte_end":2787,"line_start":82,"line_end":82,"column_start":1,"column_end":68}},{"value":"/ and returns the index of the start of the match.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":2788,"byte_end":2840,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":2841,"byte_end":2844,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ As of this writing, this function uses the two way algorithm","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":2845,"byte_end":2909,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/ in pure rust (with no SSE4.2 support).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":2910,"byte_end":2952,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":2953,"byte_end":2962,"line_start":87,"line_end":87,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":3325,"byte_end":3336,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"rfind_bytes","qualname":"::rfind_bytes","value":"pub fn rfind_bytes(&[u8], &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" `rfind_bytes` finds the last ocurrence of `pattern` in the `text`,\n and returns the index of the start of the match.","sig":null,"attributes":[{"value":"/ `rfind_bytes` finds the last ocurrence of `pattern` in the `text`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":3082,"byte_end":3152,"line_start":92,"line_end":92,"column_start":1,"column_end":71}},{"value":"/ and returns the index of the start of the match.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":3153,"byte_end":3205,"line_start":93,"line_end":93,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":3206,"byte_end":3209,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ As of this writing, this function uses the two way algorithm","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":3210,"byte_end":3274,"line_start":95,"line_end":95,"column_start":1,"column_end":65}},{"value":"/ in pure rust (with no SSE4.2 support).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":3275,"byte_end":3317,"line_start":96,"line_end":96,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":4041,"byte_end":4044,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"Str","qualname":"::Str","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy wrapper for &str\n","sig":null,"attributes":[{"value":"/ Dummy wrapper for &str","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":3988,"byte_end":4014,"line_start":116,"line_end":116,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":4049,"byte_end":4060,"line_start":118,"line_end":118,"column_start":20,"column_end":31},"name":"0","qualname":"::Str::0","value":"&'a str","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":5175,"byte_end":5186,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"StrSearcher","qualname":"::StrSearcher","value":"StrSearcher {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"decl_id":null,"docs":" Associated type for `<&str as Pattern<'a>>::Searcher`.\n","sig":null,"attributes":[{"value":"/ Associated type for `<&str as Pattern<'a>>::Searcher`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":5105,"byte_end":5163,"line_start":154,"line_end":154,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":5555,"byte_end":5558,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<StrSearcher>::new","value":"pub fn new(&'a str, &'b str) -> StrSearcher","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":12786,"byte_end":12800,"line_start":354,"line_end":354,"column_start":12,"column_end":26},"name":"TwoWaySearcher","qualname":"::TwoWaySearcher","value":"TwoWaySearcher {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" The internal state of the two-way substring search algorithm.\n","sig":null,"attributes":[{"value":"/ The internal state of the two-way substring search algorithm.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":12670,"byte_end":12735,"line_start":351,"line_end":351,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":16815,"byte_end":16818,"line_start":449,"line_end":449,"column_start":12,"column_end":15},"name":"new","qualname":"<TwoWaySearcher>::new","value":"pub fn new(&[u8], usize) -> TwoWaySearcher","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":27455,"byte_end":27469,"line_start":707,"line_end":707,"column_start":12,"column_end":26},"name":"maximal_suffix","qualname":"<TwoWaySearcher>::maximal_suffix","value":"pub fn maximal_suffix(&[u8], bool) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":27434,"byte_end":27443,"line_start":706,"line_end":706,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":29373,"byte_end":29395,"line_start":753,"line_end":753,"column_start":12,"column_end":34},"name":"reverse_maximal_suffix","qualname":"<TwoWaySearcher>::reverse_maximal_suffix","value":"pub fn reverse_maximal_suffix(&[u8], usize, bool) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":31082,"byte_end":31088,"line_start":798,"line_end":798,"column_start":10,"column_end":16},"name":"Output","qualname":"::TwoWayStrategy::Output","value":"type Output;","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":5522,"byte_end":5533,"line_start":176,"line_end":176,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":16787,"byte_end":16801,"line_start":448,"line_end":448,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":31318,"byte_end":31327,"line_start":807,"line_end":807,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":5522,"byte_end":5533,"line_start":176,"line_end":176,"column_start":14,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":16787,"byte_end":16801,"line_start":448,"line_end":448,"column_start":6,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\twoway-0.2.2\\src\\lib.rs","byte_start":31318,"byte_end":31327,"line_start":807,"line_end":807,"column_start":25,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":80},"to":{"krate":0,"index":75}}]}